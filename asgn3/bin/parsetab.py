
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocELSETOKnonassocELSEnonassocIDTOKnonassocIDnonassocENDTOKnonassocENDnonassocTOKnonassocPROCEDUREnonassocFUNCTIONnonassocCONSTRUCTORPLUS MINUS MULTIPLY DIVIDE EQUALS NOTEQUALS LANGLE RANGLE LSQUARE RSQUARE DOT COMMA LPAREN RPAREN COLON SEMICOLON POWER DOUBLESTAR ASSIGNTO LEQ GEQ NUMBER ID USERSTRING COMMENT AND DO BEGIN REPEAT REAL STRING THEN OBJECT DOUBLE INHERITED ELSE BREAK PROGRAM TYPE NOT END ARRAY CLASS IF CASE CHAR SHR CONSTANT INTEGER FUNCTION OF UNTIL PUBLIC WHILE CONTINUE XOR CONSTRUCTOR VAR DIV MOD SHL OR PROCEDURE LAMBDA Goal : Program  Program : PROGRAM ID SEMICOLON Block \n    | PROGRAM ID LPAREN IdentList RPAREN SEMICOLON Block Block : DeclSection CompoundStmt DeclSection : DeclSection WhichSection\n    |  WhichSection : ConstSection\n    | TypeSection\n    | VarSection\n    | ProcedureDeclSection  CompoundStmt : BEGIN StmtList END SEMICOLON  StmtList : Statement StmtList \n    | Statement Statement : SimpleStatement SEMICOLON\n    | StructStmt  SimpleStatement : Designator\n    | Designator LPAREN ExprList RPAREN\n    | Designator ASSIGNTO Expression\n    | INHERITED\n    | LPAREN Expression RPAREN\n    | BREAK\n    | CONTINUE StructStmt : CompoundStmt\n    | ConditionalStmt \n    | LoopStmt  ConditionalStmt : IfStmt\n    | CaseStmt  IfStmt : IF Expression THEN CompoundStmt ELSE CompoundStmt\n    | IF Expression THEN CompoundStmt %prec ELSETOK  CaseStmt : CASE Expression OF CaseSelector ColonCaseSelector END\n    | CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END  ColonCaseSelector : ColonCaseSelector SEMICOLON CaseSelector \n    |  CaseSelector : CaseLabel COLON Statement  CaseLabel : NUMBER  LoopStmt : RepeatStmt\n    | WhileStmt  RepeatStmt : REPEAT Statement UNTIL Expression SEMICOLON  WhileStmt : WHILE Expression DO CompoundStmt  Expression : SimpleExpression RelSimpleStar \n    | LambFunc RelSimpleStar : RelOp SimpleExpression RelSimpleStar\n    |  SimpleExpression : PLUS Term AddTermStar\n    | MINUS Term AddTermStar \n    | Term AddTermStar  AddTermStar : AddOp Term AddTermStar\n    |  Term : Factor MulFacStar  MulFacStar : MulOp Factor MulFacStar\n    |  Factor : Designator \n    | Designator LPAREN ExprList RPAREN\n    | USERSTRING\n    | NUMBER\n    | LPAREN Expression RPAREN\n    | NOT Factor\n    | INHERITED Designator\n    | INHERITED\n    | TypeID LPAREN Expression RPAREN  Type : TypeID\n    | SimpleType\n    | PointerType\n    | StringType\n    | ProcedureType \n    | Array \n    | ID SimpleType : DOUBLE  PointerType : POWER ID  StringType : STRING  ProcedureType : ProcedureHeading\n    | FuncHeading\n     TypeArgs : LPAREN TypeID RPAREN\n    | LPAREN STRING RPAREN  TypeID : INTEGER\n    | REAL\n    | CHAR  TypeSection : TYPE ColonTypeDecl  ColonTypeDecl : ColonTypeDecl TypeDecl SEMICOLON \n    | TypeDecl SEMICOLON TypeDecl : ID EQUALS Type\n    | ID EQUALS RestrictedType\n    | ID EQUALS TYPE Type\n    | ID EQUALS TYPE RestrictedType  RestrictedType : ObjectType\n    | ClassType  RelOp : LANGLE\n    | RANGLE\n    | GEQ\n    | LEQ\n    | NOTEQUALS\n    | EQUALS AddOp : PLUS\n    | MINUS\n    | OR\n    | XOR  MulOp : MULTIPLY\n    | DIVIDE\n    | DIV\n    | MOD\n    | AND\n    | SHL\n    | SHR \n    | DOUBLESTAR  CommaExpression : CommaExpression COMMA Expression\n    |  ExprList : Expression CommaExpression Designator : ID DesSubEleStar DesSubEleStar : DesSubEleStar DesignatorSubElem \n    |  DesignatorSubElem : DOT ID\n    | LSQUARE ExprList RSQUARE\n    | POWER  ConstSection : CONSTANT ColonConstDecl  ColonConstDecl : ColonConstDecl ConstDecl SEMICOLON\n    | ConstDecl SEMICOLON ConstDecl : ID EQUALS ConstExpr\n    | ID COLON TypeID EQUALS TypedConst  TypedConst : ConstExpr\n    | ArrayConst  Array : ARRAY LSQUARE ArrayBetween RSQUARE OF TypeArray  ArrayBetween : NUMBER DOT DOT NUMBER\n    | NUMBER DOT DOT ID\n    | ID DOT DOT ID\n    | ID DOT DOT NUMBER  TypeArray : TypeID\n    | PointerType  ArrayConst : LPAREN TypedConst CommaTypedConst RPAREN  CommaTypedConst : COMMA TypedConst CommaTypedConst\n    |  ConstExpr : NUMBER IdentList : ID TypeArgs CommaIDTypeArgs\n    | ID CommaIDTypeArgs CommaIDTypeArgs : COMMA ID TypeArgs CommaIDTypeArgs\n    | COMMA ID CommaIDTypeArgs                 \n    |  ParamIdentList : ParamIdent SEMICOLON ParamIdentList\n    | ParamIdent\n    |  ParamIdent : IdentList COLON Type\n    | IdentList  VarSection : VAR ColonVarDecl  ColonVarDecl : ColonVarDecl VarDecl SEMICOLON\n    | VarDecl SEMICOLON VarDecl : IdentList COLON Type ProcedureDeclSection : ProcedureDecl\n    | FuncDecl\n    | ConstrucDecl  ConstrucDecl : ConstrucHeading SEMICOLON Block  ConstrucHeading : CONSTRUCTOR Designator FormalParams  ConstrucHeadingSemicolon : CONSTRUCTOR Designator FormalParams SEMICOLON  FuncDecl : FuncHeading SEMICOLON Block  FuncHeading : FUNCTION Designator FormalParams COLON Type  FuncHeadingSemicolon : FUNCTION Designator FormalParams COLON Type SEMICOLON  FormalParams : LPAREN ParamIdentList RPAREN\n    |  ProcedureDecl : ProcedureHeading SEMICOLON Block  ProcedureHeading : PROCEDURE Designator FormalParams  ProcedureHeadingSemicolon : PROCEDURE Designator FormalParams SEMICOLON  LambFunc : LAMBDA ID COLON SimpleExpression  ObjectType : OBJECT ObjectHeritage ObjectVis ObjectBody END ObjectHeritage : LPAREN IdentList RPAREN\n    |  ObjectBody : ObjectBody ObjectTypeSection ObjectVarSection ObjectConstSection ObjectMethodList\n    |  ObjectVis : PUBLIC\n    |  ObjectVarSection : ColonVarDecl %prec IDTOK\n    |  ObjectTypeSection : ColonTypeDecl %prec IDTOK\n    | %prec ENDTOK  ObjectConstSection : ColonConstDecl %prec IDTOK\n    |  ObjectMethodList : ObjectMethodHeading \n    | %prec TOK  ObjectMethodHeading : ProcedureHeadingSemicolon\n    | FuncHeadingSemicolon \n    | ConstrucHeadingSemicolon  ClassType : CLASS ClassHeritage ClassVis ClassBody END ClassHeritage : LPAREN IdentList RPAREN\n    |  ClassBody : ClassBody ClassTypeSection ClassConstSection ClassVarSection ClassMethodList\n    |  ClassVis : PUBLIC\n    |  ClassTypeSection : ColonTypeDecl %prec IDTOK\n    | %prec ENDTOK  ClassConstSection : ColonConstDecl %prec IDTOK\n    |  ClassVarSection : ColonVarDecl %prec IDTOK\n    |  ClassMethodList : ClassMethodHeading \n    | %prec TOK  ClassMethodHeading : ProcedureHeadingSemicolon\n    | FuncHeadingSemicolon \n    | ConstrucHeadingSemicolon '
    
_lr_action_items = {'REAL':([34,45,51,53,55,86,91,94,97,103,105,106,115,120,130,138,140,142,143,144,145,146,147,148,149,151,153,154,155,156,157,158,160,161,162,164,165,166,176,178,201,203,220,250,280,328,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-101,-98,-103,74,-97,-104,-99,-102,-100,74,-91,-89,-87,74,-92,-90,-88,74,-96,-95,-93,-94,74,74,74,74,74,74,74,74,]),'DO':([36,81,92,93,95,96,98,99,100,101,110,129,131,141,150,152,159,163,167,169,207,210,211,212,214,215,216,237,242,243,244,245,246,249,],[-110,-108,-55,-51,-41,-52,-43,-48,-54,-59,177,-113,-109,-49,-48,-48,-40,-46,-58,-57,-111,-56,-51,-45,-44,-43,-48,-112,-60,-50,-53,-42,-47,-160,]),'CONSTANT':([5,7,11,13,15,19,21,23,25,26,29,37,38,61,64,67,69,71,82,84,111,116,117,118,133,137,179,194,],[-6,16,-148,-146,-10,-147,-7,-8,-9,-5,-4,-6,-114,-6,-142,-6,-78,-6,-157,-116,-152,-144,-149,-80,-115,-11,-143,-79,]),'LSQUARE':([36,81,129,131,188,207,237,],[-110,130,-113,-109,228,-111,-112,]),'NOTEQUALS':([36,81,92,93,96,98,99,100,101,129,131,141,150,152,163,167,169,207,210,211,212,214,215,216,237,242,243,244,246,],[-110,-108,-55,-51,-52,153,-48,-54,-59,-113,-109,-49,-48,-48,-46,-58,-57,-111,-56,-51,-45,-44,153,-48,-112,-60,-50,-53,-47,]),'OBJECT':([120,201,],[195,195,]),'THEN':([36,81,92,93,95,96,98,99,100,101,108,129,131,141,150,152,159,163,167,169,207,210,211,212,214,215,216,237,242,243,244,245,246,249,],[-110,-108,-55,-51,-41,-52,-43,-48,-54,-59,175,-113,-109,-49,-48,-48,-40,-46,-58,-57,-111,-56,-51,-45,-44,-43,-48,-112,-60,-50,-53,-42,-47,-160,]),'NUMBER':([45,51,53,55,85,91,94,97,103,105,106,130,138,140,142,143,144,145,146,147,148,149,151,153,154,155,156,157,158,160,161,162,164,165,166,168,176,208,220,228,240,250,264,276,281,282,],[92,92,92,92,134,92,92,92,92,92,92,92,92,-101,-98,-103,92,-97,-104,-99,-102,-100,92,-91,-89,-87,92,-92,-90,-88,92,-96,-95,-93,-94,217,92,134,92,254,134,92,217,134,295,298,]),'CHAR':([34,45,51,53,55,86,91,94,97,103,105,106,115,120,130,138,140,142,143,144,145,146,147,148,149,151,153,154,155,156,157,158,160,161,162,164,165,166,176,178,201,203,220,250,280,328,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-101,-98,-103,77,-97,-104,-99,-102,-100,77,-91,-89,-87,77,-92,-90,-88,77,-96,-95,-93,-94,77,77,77,77,77,77,77,77,]),'UNTIL':([44,47,48,49,50,58,59,60,88,109,137,223,225,252,263,268,304,],[-26,-25,-27,-24,-37,-15,-36,-23,-14,176,-11,-29,-39,-38,-30,-28,-31,]),'WHILE':([17,41,44,47,48,49,50,54,58,59,60,88,137,223,225,248,252,263,268,304,],[55,55,-26,-25,-27,-24,-37,55,-15,-36,-23,-14,-11,-29,-39,55,-38,-30,-28,-31,]),'PROGRAM':([0,],[2,]),'CONSTRUCTOR':([5,7,11,13,15,19,21,23,25,26,29,37,38,61,64,67,69,71,82,84,111,116,117,118,133,137,179,194,195,197,230,232,257,258,260,261,272,273,274,275,284,285,287,288,299,300,301,302,305,306,307,308,309,311,312,314,315,317,318,319,320,321,329,330,332,],[-6,12,-148,-146,-10,-147,-7,-8,-9,-5,-4,-6,-114,-6,-142,-6,-78,-6,-157,-116,-152,-144,-149,-80,-115,-11,-143,-79,-163,-181,-167,-185,-165,-166,-183,-184,-162,-171,-180,-187,-169,-170,-189,-186,-168,-173,-188,-191,-172,313,-190,313,-177,-176,-178,-164,-174,-194,-196,-192,-195,-182,-151,-159,-154,]),'MULTIPLY':([36,81,92,93,96,100,101,129,131,167,169,207,210,211,237,242,244,],[-110,-108,-55,145,-52,-54,-59,-113,-109,-58,-57,-111,-56,145,-112,-60,-53,]),'DOUBLESTAR':([36,81,92,93,96,100,101,129,131,167,169,207,210,211,237,242,244,],[-110,-108,-55,146,-52,-54,-59,-113,-109,-58,-57,-111,-56,146,-112,-60,-53,]),'DIV':([36,81,92,93,96,100,101,129,131,167,169,207,210,211,237,242,244,],[-110,-108,-55,147,-52,-54,-59,-113,-109,-58,-57,-111,-56,147,-112,-60,-53,]),'MINUS':([36,45,51,53,55,81,91,92,93,96,99,100,101,105,106,129,130,131,138,141,150,151,152,153,154,155,156,157,158,160,167,169,176,207,210,211,216,220,237,242,243,244,250,],[-110,94,94,94,94,-108,94,-55,-51,-52,166,-54,-59,94,94,-113,94,-109,94,-49,166,94,166,-91,-89,-87,94,-92,-90,-88,-58,-57,94,-111,-56,-51,166,94,-112,-60,-50,-53,94,]),'DOT':([36,81,129,131,207,237,254,255,270,271,],[-110,132,-113,-109,-111,-112,270,271,281,282,]),'DIVIDE':([36,81,92,93,96,100,101,129,131,167,169,207,210,211,237,242,244,],[-110,-108,-55,142,-52,-54,-59,-113,-109,-58,-57,-111,-56,142,-112,-60,-53,]),'CASE':([17,41,44,47,48,49,50,54,58,59,60,88,137,223,225,248,252,263,268,304,],[45,45,-26,-25,-27,-24,-37,45,-15,-36,-23,-14,-11,-29,-39,45,-38,-30,-28,-31,]),'BEGIN':([5,7,11,13,15,17,19,21,23,25,26,29,37,38,41,44,47,48,49,50,54,58,59,60,61,64,67,69,71,82,84,88,111,116,117,118,133,137,175,177,179,194,223,225,248,251,252,263,265,268,304,],[-6,17,-148,-146,-10,17,-147,-7,-8,-9,-5,-4,-6,-114,17,-26,-25,-27,-24,-37,17,-15,-36,-23,-6,-142,-6,-78,-6,-157,-116,-14,-152,-144,-149,-80,-115,-11,17,17,-143,-79,-29,-39,17,17,-38,-30,17,-28,-31,]),'LANGLE':([36,81,92,93,96,98,99,100,101,129,131,141,150,152,163,167,169,207,210,211,212,214,215,216,237,242,243,244,246,],[-110,-108,-55,-51,-52,155,-48,-54,-59,-113,-109,-49,-48,-48,-46,-58,-57,-111,-56,-51,-45,-44,155,-48,-112,-60,-50,-53,-47,]),'RPAREN':([9,10,31,32,36,62,72,73,74,75,76,77,78,79,81,92,93,95,96,98,99,100,101,107,112,122,123,124,125,126,127,128,129,131,134,139,141,150,152,159,163,167,169,172,173,180,181,183,184,185,186,189,190,191,192,193,202,204,205,207,209,210,211,212,213,214,215,216,222,226,227,235,236,237,239,241,242,243,244,245,246,249,256,259,262,267,277,289,290,292,293,294,303,],[30,-136,-133,-136,-110,-156,-132,-136,-76,124,125,-77,-75,-139,-108,-55,-51,-41,-52,-43,-48,-54,-59,174,-158,-135,-136,-73,-74,-141,-138,205,-113,-109,-131,210,-49,-48,-48,-40,-46,-58,-57,221,-106,-61,-71,-64,-65,-72,-62,-70,-67,-68,-63,-66,-134,-139,-155,-111,242,-56,-51,-45,244,-44,-43,-48,-107,-153,-69,-140,-137,-112,-119,-120,-60,-50,-53,-42,-47,-160,272,274,-130,-105,290,-130,-128,-126,-127,-121,-129,]),'SEMICOLON':([4,10,14,18,27,30,31,32,35,36,39,42,44,46,47,48,49,50,52,56,57,58,59,60,62,66,68,72,73,74,77,78,80,81,83,88,89,92,93,95,96,98,99,100,101,112,114,119,122,123,124,125,126,127,129,131,134,135,137,141,150,152,159,163,167,169,171,174,180,181,182,183,184,185,186,189,190,191,192,193,196,198,199,200,202,205,207,210,211,212,214,215,216,218,221,223,224,225,226,227,233,234,235,237,238,239,241,242,243,244,245,246,247,249,252,263,266,268,278,279,283,286,290,292,293,294,304,323,324,326,327,331,],[5,-136,37,61,67,71,-133,-136,-156,-110,84,88,-26,-16,-25,-27,-24,-37,-19,-21,-22,-15,-36,-23,-156,116,118,-132,-136,-76,-77,-75,-150,-108,133,-14,137,-55,-51,-41,-52,-43,-48,-54,-59,-158,179,194,-135,-136,-73,-74,-141,204,-113,-109,-131,-117,-11,-49,-48,-48,-40,-46,-58,-57,-18,-20,-61,-71,-145,-64,-65,-72,-62,-70,-67,-68,-63,-66,-81,-85,-82,-86,-134,-155,-111,-56,-51,-45,-44,-43,-48,-33,-17,-29,252,-39,-153,-69,-83,-84,-140,-112,-118,-119,-120,-60,-50,-53,-42,-47,264,-160,-38,-30,-34,-28,-32,291,-161,-179,-128,-126,-127,-121,-31,-156,-156,329,330,332,]),'PLUS':([36,45,51,53,55,81,91,92,93,96,99,100,101,105,106,129,130,131,138,141,150,151,152,153,154,155,156,157,158,160,167,169,176,207,210,211,216,220,237,242,243,244,250,],[-110,97,97,97,97,-108,97,-55,-51,-52,165,-54,-59,97,97,-113,97,-109,97,-49,165,97,165,-91,-89,-87,97,-92,-90,-88,-58,-57,97,-111,-56,-51,165,97,-112,-60,-50,-53,97,]),'COLON':([10,31,32,36,40,63,65,72,73,81,113,122,123,124,125,126,129,131,170,202,205,207,217,219,237,322,325,],[-136,-133,-136,-110,86,-156,115,-132,-136,-108,178,-135,-136,-73,-74,203,-113,-109,220,-134,-155,-111,-35,248,-112,-156,328,]),'USERSTRING':([45,51,53,55,91,94,97,103,105,106,130,138,140,142,143,144,145,146,147,148,149,151,153,154,155,156,157,158,160,161,162,164,165,166,176,220,250,],[100,100,100,100,100,100,100,100,100,100,100,100,-101,-98,-103,100,-97,-104,-99,-102,-100,100,-91,-89,-87,100,-92,-90,-88,100,-96,-95,-93,-94,100,100,100,]),'COMMA':([10,32,36,73,81,92,93,95,96,98,99,100,101,123,124,125,129,131,134,141,150,152,159,163,167,169,173,207,210,211,212,214,215,216,222,237,239,241,242,243,244,245,246,249,262,267,289,290,],[33,33,-110,33,-108,-55,-51,-41,-52,-43,-48,-54,-59,33,-73,-74,-113,-109,-131,-49,-48,-48,-40,-46,-58,-57,-106,-111,-56,-51,-45,-44,-43,-48,250,-112,-119,-120,-60,-50,-53,-42,-47,-160,276,-105,276,-128,]),'ARRAY':([115,120,178,201,203,328,],[188,188,188,188,188,188,]),'CLASS':([120,201,],[197,197,]),'$end':([1,3,8,29,121,137,],[0,-1,-2,-4,-3,-11,]),'FUNCTION':([5,7,11,13,15,19,21,23,25,26,29,37,38,61,64,67,69,71,82,84,111,115,116,117,118,120,133,137,178,179,194,195,197,201,203,230,232,257,258,260,261,272,273,274,275,284,285,287,288,299,300,301,302,305,306,307,308,309,311,312,314,315,317,318,319,320,321,328,329,330,332,],[-6,22,-148,-146,-10,-147,-7,-8,-9,-5,-4,-6,-114,-6,-142,-6,-78,-6,-157,-116,-152,22,-144,-149,-80,22,-115,-11,22,-143,-79,-163,-181,22,22,-167,-185,-165,-166,-183,-184,-162,-171,-180,-187,-169,-170,-189,-186,-168,-173,-188,-191,-172,310,-190,310,-177,-176,-178,-164,-174,-194,-196,-192,-195,-182,22,-151,-159,-154,]),'RSQUARE':([36,81,92,93,95,96,98,99,100,101,129,131,141,150,152,159,163,167,169,173,206,207,210,211,212,214,215,216,222,237,242,243,244,245,246,249,253,267,295,296,297,298,],[-110,-108,-55,-51,-41,-52,-43,-48,-54,-59,-113,-109,-49,-48,-48,-40,-46,-58,-57,-106,237,-111,-56,-51,-45,-44,-43,-48,-107,-112,-60,-50,-53,-42,-47,-160,269,-105,-122,-123,-124,-125,]),'SHR':([36,81,92,93,96,100,101,129,131,167,169,207,210,211,237,242,244,],[-110,-108,-55,143,-52,-54,-59,-113,-109,-58,-57,-111,-56,143,-112,-60,-53,]),'REPEAT':([17,41,44,47,48,49,50,54,58,59,60,88,137,223,225,248,252,263,268,304,],[54,54,-26,-25,-27,-24,-37,54,-15,-36,-23,-14,-11,-29,-39,54,-38,-30,-28,-31,]),'XOR':([36,81,92,93,96,99,100,101,129,131,141,150,152,167,169,207,210,211,216,237,242,243,244,],[-110,-108,-55,-51,-52,162,-54,-59,-113,-109,-49,162,162,-58,-57,-111,-56,-51,162,-112,-60,-50,-53,]),'STRING':([34,115,120,178,201,203,328,],[76,189,189,189,189,189,189,]),'DOUBLE':([115,120,178,201,203,328,],[191,191,191,191,191,191,]),'GEQ':([36,81,92,93,96,98,99,100,101,129,131,141,150,152,163,167,169,207,210,211,212,214,215,216,237,242,243,244,246,],[-110,-108,-55,-51,-52,154,-48,-54,-59,-113,-109,-49,-48,-48,-46,-58,-57,-111,-56,-51,-45,-44,154,-48,-112,-60,-50,-53,-47,]),'EQUALS':([36,40,70,74,77,78,81,92,93,96,98,99,100,101,129,131,136,141,150,152,163,167,169,207,210,211,212,214,215,216,237,242,243,244,246,],[-110,85,120,-76,-77,-75,-108,-55,-51,-52,157,-48,-54,-59,-113,-109,208,-49,-48,-48,-46,-58,-57,-111,-56,-51,-45,-44,157,-48,-112,-60,-50,-53,-47,]),'END':([41,43,44,47,48,49,50,58,59,60,84,87,88,116,118,133,137,179,194,195,197,218,223,225,230,232,247,252,257,258,260,261,263,266,268,272,273,274,275,278,284,285,287,288,291,299,300,301,302,304,305,306,307,308,309,311,312,314,315,317,318,319,320,321,329,330,332,],[-13,89,-26,-25,-27,-24,-37,-15,-36,-23,-116,-12,-14,-144,-80,-115,-11,-143,-79,-163,-181,-33,-29,-39,-167,-185,263,-38,-165,-166,-183,-184,-30,-34,-28,-162,283,-180,286,-32,-169,-170,-189,-186,304,-168,-173,-188,-191,-31,-172,-175,-190,-193,-177,-176,-178,-164,-174,-194,-196,-192,-195,-182,-151,-159,-154,]),'LPAREN':([4,10,17,35,36,41,44,45,46,47,48,49,50,51,53,54,55,58,59,60,62,63,73,74,77,78,81,88,90,91,94,96,97,103,105,106,129,130,131,137,138,140,142,143,144,145,146,147,148,149,151,153,154,155,156,157,158,160,161,162,164,165,166,176,195,197,207,208,220,223,225,237,240,248,250,252,263,268,276,304,322,323,324,],[6,34,51,79,-110,51,-26,91,106,-25,-27,-24,-37,91,91,51,91,-15,-36,-23,79,79,34,-76,-77,-75,-108,-14,138,91,91,151,91,91,91,91,-113,91,-109,-11,91,-101,-98,-103,91,-97,-104,-99,-102,-100,91,-91,-89,-87,91,-92,-90,-88,91,-96,-95,-93,-94,91,229,231,-111,240,91,-29,-39,-112,240,51,91,-38,-30,-28,240,-31,79,79,79,]),'INHERITED':([17,41,44,45,47,48,49,50,51,53,54,55,58,59,60,88,91,94,97,103,105,106,130,137,138,140,142,143,144,145,146,147,148,149,151,153,154,155,156,157,158,160,161,162,164,165,166,176,220,223,225,248,250,252,263,268,304,],[52,52,-26,101,-25,-27,-24,-37,101,101,52,101,-15,-36,-23,-14,101,101,101,101,101,101,101,-11,101,-101,-98,-103,101,-97,-104,-99,-102,-100,101,-91,-89,-87,101,-92,-90,-88,101,-96,-95,-93,-94,101,101,-29,-39,52,101,-38,-30,-28,-31,]),'VAR':([5,7,11,13,15,19,21,23,25,26,29,37,38,61,64,67,69,71,82,84,111,116,117,118,133,137,179,194,],[-6,24,-148,-146,-10,-147,-7,-8,-9,-5,-4,-6,-114,-6,-142,-6,-78,-6,-157,-116,-152,-144,-149,-80,-115,-11,-143,-79,]),'RANGLE':([36,81,92,93,96,98,99,100,101,129,131,141,150,152,163,167,169,207,210,211,212,214,215,216,237,242,243,244,246,],[-110,-108,-55,-51,-52,160,-48,-54,-59,-113,-109,-49,-48,-48,-46,-58,-57,-111,-56,-51,-45,-44,160,-48,-112,-60,-50,-53,-47,]),'ELSE':([44,47,48,49,50,58,59,60,88,137,218,223,225,247,252,263,266,268,278,304,],[-26,-25,-27,-24,-37,-15,-36,-23,-14,-11,-33,251,-39,265,-38,-30,-34,-28,-32,-31,]),'SHL':([36,81,92,93,96,100,101,129,131,167,169,207,210,211,237,242,244,],[-110,-108,-55,148,-52,-54,-59,-113,-109,-58,-57,-111,-56,148,-112,-60,-53,]),'ID':([2,6,12,16,17,20,22,24,28,33,38,41,44,45,47,48,49,50,51,53,54,55,58,59,60,64,69,79,84,88,91,94,97,101,103,104,105,106,115,116,118,120,130,132,133,137,138,140,142,143,144,145,146,147,148,149,151,153,154,155,156,157,158,160,161,162,164,165,166,176,178,179,187,194,195,197,201,203,204,220,223,225,228,229,230,231,232,248,250,252,257,258,260,261,263,268,272,273,274,275,281,282,284,285,287,288,299,300,301,302,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,328,329,330,332,],[4,10,36,40,36,36,36,10,70,73,40,36,-26,36,-25,-27,-24,-37,36,36,36,36,-15,-36,-23,10,70,10,-116,-14,36,36,36,36,36,170,36,36,190,-144,-80,190,36,207,-115,-11,36,-101,-98,-103,36,-97,-104,-99,-102,-100,36,-91,-89,-87,36,-92,-90,-88,36,-96,-95,-93,-94,36,190,-143,227,-79,-163,-181,190,190,10,36,-29,-39,255,10,-167,10,-185,36,36,-38,-165,-166,-183,-184,-30,-28,-162,-171,-180,-187,296,297,10,70,40,70,10,40,40,10,-31,40,-175,10,-193,-177,36,-176,-178,36,-164,-174,36,-194,-196,-192,-195,-182,190,-151,-159,-154,]),'PROCEDURE':([5,7,11,13,15,19,21,23,25,26,29,37,38,61,64,67,69,71,82,84,111,115,116,117,118,120,133,137,178,179,194,195,197,201,203,230,232,257,258,260,261,272,273,274,275,284,285,287,288,299,300,301,302,305,306,307,308,309,311,312,314,315,317,318,319,320,321,328,329,330,332,],[-6,20,-148,-146,-10,-147,-7,-8,-9,-5,-4,-6,-114,-6,-142,-6,-78,-6,-157,-116,-152,20,-144,-149,-80,20,-115,-11,20,-143,-79,-163,-181,20,20,-167,-185,-165,-166,-183,-184,-162,-171,-180,-187,-169,-170,-189,-186,-168,-173,-188,-191,-172,316,-190,316,-177,-176,-178,-164,-174,-194,-196,-192,-195,-182,20,-151,-159,-154,]),'IF':([17,41,44,47,48,49,50,54,58,59,60,88,137,223,225,248,252,263,268,304,],[53,53,-26,-25,-27,-24,-37,53,-15,-36,-23,-14,-11,-29,-39,53,-38,-30,-28,-31,]),'AND':([36,81,92,93,96,100,101,129,131,167,169,207,210,211,237,242,244,],[-110,-108,-55,140,-52,-54,-59,-113,-109,-58,-57,-111,-56,140,-112,-60,-53,]),'POWER':([36,81,115,120,129,131,178,201,203,207,237,280,328,],[-110,129,187,187,-113,-109,187,187,187,-111,-112,187,187,]),'ASSIGNTO':([36,46,81,129,131,207,237,],[-110,105,-108,-113,-109,-111,-112,]),'INTEGER':([34,45,51,53,55,86,91,94,97,103,105,106,115,120,130,138,140,142,143,144,145,146,147,148,149,151,153,154,155,156,157,158,160,161,162,164,165,166,176,178,201,203,220,250,280,328,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-101,-98,-103,78,-97,-104,-99,-102,-100,78,-91,-89,-87,78,-92,-90,-88,78,-96,-95,-93,-94,78,78,78,78,78,78,78,78,]),'PUBLIC':([195,197,230,232,272,274,],[-163,-181,258,261,-162,-180,]),'BREAK':([17,41,44,47,48,49,50,54,58,59,60,88,137,223,225,248,252,263,268,304,],[56,56,-26,-25,-27,-24,-37,56,-15,-36,-23,-14,-11,-29,-39,56,-38,-30,-28,-31,]),'LEQ':([36,81,92,93,96,98,99,100,101,129,131,141,150,152,163,167,169,207,210,211,212,214,215,216,237,242,243,244,246,],[-110,-108,-55,-51,-52,158,-48,-54,-59,-113,-109,-49,-48,-48,-46,-58,-57,-111,-56,-51,-45,-44,158,-48,-112,-60,-50,-53,-47,]),'CONTINUE':([17,41,44,47,48,49,50,54,58,59,60,88,137,223,225,248,252,263,268,304,],[57,57,-26,-25,-27,-24,-37,57,-15,-36,-23,-14,-11,-29,-39,57,-38,-30,-28,-31,]),'OF':([36,81,92,93,95,96,98,99,100,101,102,129,131,141,150,152,159,163,167,169,207,210,211,212,214,215,216,237,242,243,244,245,246,249,269,],[-110,-108,-55,-51,-41,-52,-43,-48,-54,-59,168,-113,-109,-49,-48,-48,-40,-46,-58,-57,-111,-56,-51,-45,-44,-43,-48,-112,-60,-50,-53,-42,-47,-160,280,]),'NOT':([45,51,53,55,91,94,97,103,105,106,130,138,140,142,143,144,145,146,147,148,149,151,153,154,155,156,157,158,160,161,162,164,165,166,176,220,250,],[103,103,103,103,103,103,103,103,103,103,103,103,-101,-98,-103,103,-97,-104,-99,-102,-100,103,-91,-89,-87,103,-92,-90,-88,103,-96,-95,-93,-94,103,103,103,]),'LAMBDA':([45,51,53,55,91,105,106,130,138,151,176,250,],[104,104,104,104,104,104,104,104,104,104,104,104,]),'TYPE':([5,7,11,13,15,19,21,23,25,26,29,37,38,61,64,67,69,71,82,84,111,116,117,118,120,133,137,179,194,],[-6,28,-148,-146,-10,-147,-7,-8,-9,-5,-4,-6,-114,-6,-142,-6,-78,-6,-157,-116,-152,-144,-149,-80,201,-115,-11,-143,-79,]),'OR':([36,81,92,93,96,99,100,101,129,131,141,150,152,167,169,207,210,211,216,237,242,243,244,],[-110,-108,-55,-51,-52,164,-54,-59,-113,-109,-49,164,164,-58,-57,-111,-56,-51,164,-112,-60,-50,-53,]),'MOD':([36,81,92,93,96,100,101,129,131,167,169,207,210,211,237,242,244,],[-110,-108,-55,149,-52,-54,-59,-113,-109,-58,-57,-111,-56,149,-112,-60,-53,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ClassVis':([232,],[260,]),'IdentList':([6,24,64,79,204,229,231,284,299,302,307,],[9,65,65,126,126,256,259,65,65,65,65,]),'ColonConstDecl':([16,287,300,],[38,301,305,]),'Goal':([0,],[1,]),'AddTermStar':([99,150,152,216,],[163,212,214,246,]),'ConstExpr':([85,208,240,276,],[135,239,239,239,]),'ConstrucHeading':([7,],[27,]),'FuncHeadingSemicolon':([306,308,],[309,320,]),'Statement':([17,41,54,248,],[41,41,109,266,]),'ProcedureHeading':([7,115,120,178,201,203,328,],[14,181,181,181,181,181,181,]),'ProcedureDeclSection':([7,],[15,]),'ClassHeritage':([197,],[232,]),'IfStmt':([17,41,54,248,],[44,44,44,44,]),'ColonVarDecl':([24,284,302,],[64,299,307,]),'MulFacStar':([93,211,],[141,243,]),'LambFunc':([45,51,53,55,91,105,106,130,138,151,176,250,],[95,95,95,95,95,95,95,95,95,95,95,95,]),'CommaTypedConst':([262,289,],[277,303,]),'Designator':([12,17,20,22,41,45,51,53,54,55,91,94,97,101,103,105,106,130,138,144,151,156,161,176,220,248,250,310,313,316,],[35,46,62,63,46,96,96,96,46,96,96,96,96,167,96,96,96,96,96,96,96,96,96,96,96,46,96,322,323,324,]),'ColonTypeDecl':([28,273,275,],[69,285,288,]),'ObjectVis':([230,],[257,]),'MulOp':([93,211,],[144,144,]),'ClassTypeSection':([275,],[287,]),'ConstSection':([7,],[21,]),'ObjectType':([120,201,],[198,198,]),'ConditionalStmt':([17,41,54,248,],[49,49,49,49,]),'VarSection':([7,],[25,]),'ExprList':([106,130,151,],[172,206,213,]),'CommaIDTypeArgs':([10,32,73,123,],[31,72,122,202,]),'RelOp':([98,215,],[156,156,]),'VarDecl':([24,64,284,299,302,307,],[66,114,66,114,66,114,]),'TypeArgs':([10,73,],[32,123,]),'ColonCaseSelector':([218,],[247,]),'FormalParams':([35,62,63,322,323,324,],[80,112,113,325,326,327,]),'ObjectHeritage':([195,],[230,]),'RepeatStmt':([17,41,54,248,],[59,59,59,59,]),'CompoundStmt':([7,17,41,54,175,177,248,251,265,],[29,60,60,60,223,225,60,268,279,]),'ArrayConst':([208,240,276,],[241,241,241,]),'TypeID':([34,45,51,53,55,86,91,94,97,103,105,106,115,120,130,138,144,151,156,161,176,178,201,203,220,250,280,328,],[75,90,90,90,90,136,90,90,90,90,90,90,180,180,90,90,90,90,90,90,90,180,180,180,90,90,292,180,]),'ConstrucDecl':([7,],[11,]),'SimpleStatement':([17,41,54,248,],[42,42,42,42,]),'Factor':([45,51,53,55,91,94,97,103,105,106,130,138,144,151,156,161,176,220,250,],[93,93,93,93,93,93,93,169,93,93,93,93,211,93,93,93,93,93,93,]),'Type':([115,120,178,201,203,328,],[182,196,226,233,235,331,]),'TypeArray':([280,],[294,]),'StringType':([115,120,178,201,203,328,],[183,183,183,183,183,183,]),'ProcedureType':([115,120,178,201,203,328,],[184,184,184,184,184,184,]),'FuncHeading':([7,115,120,178,201,203,328,],[18,185,185,185,185,185,185,]),'FuncDecl':([7,],[19,]),'ObjectMethodHeading':([306,],[315,]),'CaseStmt':([17,41,54,248,],[48,48,48,48,]),'AddOp':([99,150,152,216,],[161,161,161,161,]),'Term':([45,51,53,55,91,94,97,105,106,130,138,151,156,161,176,220,250,],[99,99,99,99,99,150,152,99,99,99,99,99,99,216,99,99,99,]),'DesSubEleStar':([36,],[81,]),'StructStmt':([17,41,54,248,],[58,58,58,58,]),'PointerType':([115,120,178,201,203,280,328,],[192,192,192,192,192,293,192,]),'RelSimpleStar':([98,215,],[159,245,]),'Block':([5,37,61,67,71,],[8,82,111,117,121,]),'ProcedureHeadingSemicolon':([306,308,],[311,317,]),'WhichSection':([7,],[26,]),'ClassMethodHeading':([308,],[319,]),'ObjectBody':([257,],[273,]),'DeclSection':([5,37,61,67,71,],[7,7,7,7,7,]),'ClassConstSection':([287,],[302,]),'ProcedureDecl':([7,],[13,]),'Program':([0,],[3,]),'SimpleType':([115,120,178,201,203,328,],[186,186,186,186,186,186,]),'CaseSelector':([168,264,],[218,278,]),'ClassBody':([260,],[275,]),'ParamIdent':([79,204,],[127,127,]),'ObjectVarSection':([284,],[300,]),'TypeSection':([7,],[23,]),'ObjectTypeSection':([273,],[284,]),'ObjectMethodList':([306,],[314,]),'Expression':([45,51,53,55,91,105,106,130,138,151,176,250,],[102,107,108,110,139,171,173,173,209,173,224,267,]),'TypedConst':([208,240,276,],[238,262,289,]),'ClassType':([120,201,],[200,200,]),'CommaExpression':([173,],[222,]),'ConstDecl':([16,38,287,300,301,305,],[39,83,39,39,83,83,]),'ArrayBetween':([228,],[253,]),'CaseLabel':([168,264,],[219,219,]),'StmtList':([17,41,],[43,87,]),'ClassVarSection':([302,],[308,]),'ConstrucHeadingSemicolon':([306,308,],[312,318,]),'LoopStmt':([17,41,54,248,],[47,47,47,47,]),'SimpleExpression':([45,51,53,55,91,105,106,130,138,151,156,176,220,250,],[98,98,98,98,98,98,98,98,98,98,215,98,249,98,]),'ParamIdentList':([79,204,],[128,236,]),'TypeDecl':([28,69,273,275,285,288,],[68,119,68,68,119,119,]),'RestrictedType':([120,201,],[199,234,]),'WhileStmt':([17,41,54,248,],[50,50,50,50,]),'ClassMethodList':([308,],[321,]),'ObjectConstSection':([300,],[306,]),'DesignatorSubElem':([81,],[131,]),'Array':([115,120,178,201,203,328,],[193,193,193,193,193,193,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Goal","S'",1,None,None,None),
  ('Goal -> Program','Goal',1,'p_Goal','parser',31),
  ('Program -> PROGRAM ID SEMICOLON Block','Program',4,'p_Program','parser',35),
  ('Program -> PROGRAM ID LPAREN IdentList RPAREN SEMICOLON Block','Program',7,'p_Program','parser',36),
  ('Block -> DeclSection CompoundStmt','Block',2,'p_Block','parser',40),
  ('DeclSection -> DeclSection WhichSection','DeclSection',2,'p_DeclSection','parser',44),
  ('DeclSection -> <empty>','DeclSection',0,'p_DeclSection','parser',45),
  ('WhichSection -> ConstSection','WhichSection',1,'p_WhichSection','parser',49),
  ('WhichSection -> TypeSection','WhichSection',1,'p_WhichSection','parser',50),
  ('WhichSection -> VarSection','WhichSection',1,'p_WhichSection','parser',51),
  ('WhichSection -> ProcedureDeclSection','WhichSection',1,'p_WhichSection','parser',52),
  ('CompoundStmt -> BEGIN StmtList END SEMICOLON','CompoundStmt',4,'p_CompoundStmt','parser',56),
  ('StmtList -> Statement StmtList','StmtList',2,'p_StmtList','parser',60),
  ('StmtList -> Statement','StmtList',1,'p_StmtList','parser',61),
  ('Statement -> SimpleStatement SEMICOLON','Statement',2,'p_Statement','parser',65),
  ('Statement -> StructStmt','Statement',1,'p_Statement','parser',66),
  ('SimpleStatement -> Designator','SimpleStatement',1,'p_SimpleStatement','parser',70),
  ('SimpleStatement -> Designator LPAREN ExprList RPAREN','SimpleStatement',4,'p_SimpleStatement','parser',71),
  ('SimpleStatement -> Designator ASSIGNTO Expression','SimpleStatement',3,'p_SimpleStatement','parser',72),
  ('SimpleStatement -> INHERITED','SimpleStatement',1,'p_SimpleStatement','parser',73),
  ('SimpleStatement -> LPAREN Expression RPAREN','SimpleStatement',3,'p_SimpleStatement','parser',74),
  ('SimpleStatement -> BREAK','SimpleStatement',1,'p_SimpleStatement','parser',75),
  ('SimpleStatement -> CONTINUE','SimpleStatement',1,'p_SimpleStatement','parser',76),
  ('StructStmt -> CompoundStmt','StructStmt',1,'p_StructStmt','parser',80),
  ('StructStmt -> ConditionalStmt','StructStmt',1,'p_StructStmt','parser',81),
  ('StructStmt -> LoopStmt','StructStmt',1,'p_StructStmt','parser',82),
  ('ConditionalStmt -> IfStmt','ConditionalStmt',1,'p_ConditionalStmt','parser',87),
  ('ConditionalStmt -> CaseStmt','ConditionalStmt',1,'p_ConditionalStmt','parser',88),
  ('IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt','IfStmt',6,'p_IfStmt','parser',92),
  ('IfStmt -> IF Expression THEN CompoundStmt','IfStmt',4,'p_IfStmt','parser',93),
  ('CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END','CaseStmt',6,'p_CaseStmt','parser',97),
  ('CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END','CaseStmt',9,'p_CaseStmt','parser',98),
  ('ColonCaseSelector -> ColonCaseSelector SEMICOLON CaseSelector','ColonCaseSelector',3,'p_ColonCaseSelector','parser',102),
  ('ColonCaseSelector -> <empty>','ColonCaseSelector',0,'p_ColonCaseSelector','parser',103),
  ('CaseSelector -> CaseLabel COLON Statement','CaseSelector',3,'p_CaseSelector','parser',107),
  ('CaseLabel -> NUMBER','CaseLabel',1,'p_CaseLabel','parser',112),
  ('LoopStmt -> RepeatStmt','LoopStmt',1,'p_LoopStmt','parser',117),
  ('LoopStmt -> WhileStmt','LoopStmt',1,'p_LoopStmt','parser',118),
  ('RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON','RepeatStmt',5,'p_RepeatStmt','parser',122),
  ('WhileStmt -> WHILE Expression DO CompoundStmt','WhileStmt',4,'p_WhileStmt','parser',127),
  ('Expression -> SimpleExpression RelSimpleStar','Expression',2,'p_Expression','parser',131),
  ('Expression -> LambFunc','Expression',1,'p_Expression','parser',132),
  ('RelSimpleStar -> RelOp SimpleExpression RelSimpleStar','RelSimpleStar',3,'p_RelSimpleStar','parser',136),
  ('RelSimpleStar -> <empty>','RelSimpleStar',0,'p_RelSimpleStar','parser',137),
  ('SimpleExpression -> PLUS Term AddTermStar','SimpleExpression',3,'p_SimpleExpression','parser',141),
  ('SimpleExpression -> MINUS Term AddTermStar','SimpleExpression',3,'p_SimpleExpression','parser',142),
  ('SimpleExpression -> Term AddTermStar','SimpleExpression',2,'p_SimpleExpression','parser',143),
  ('AddTermStar -> AddOp Term AddTermStar','AddTermStar',3,'p_AddTermStar','parser',147),
  ('AddTermStar -> <empty>','AddTermStar',0,'p_AddTermStar','parser',148),
  ('Term -> Factor MulFacStar','Term',2,'p_Term','parser',152),
  ('MulFacStar -> MulOp Factor MulFacStar','MulFacStar',3,'p_MulFacStar','parser',156),
  ('MulFacStar -> <empty>','MulFacStar',0,'p_MulFacStar','parser',157),
  ('Factor -> Designator','Factor',1,'p_Factor','parser',161),
  ('Factor -> Designator LPAREN ExprList RPAREN','Factor',4,'p_Factor','parser',162),
  ('Factor -> USERSTRING','Factor',1,'p_Factor','parser',163),
  ('Factor -> NUMBER','Factor',1,'p_Factor','parser',164),
  ('Factor -> LPAREN Expression RPAREN','Factor',3,'p_Factor','parser',165),
  ('Factor -> NOT Factor','Factor',2,'p_Factor','parser',166),
  ('Factor -> INHERITED Designator','Factor',2,'p_Factor','parser',167),
  ('Factor -> INHERITED','Factor',1,'p_Factor','parser',168),
  ('Factor -> TypeID LPAREN Expression RPAREN','Factor',4,'p_Factor','parser',169),
  ('Type -> TypeID','Type',1,'p_Type','parser',174),
  ('Type -> SimpleType','Type',1,'p_Type','parser',175),
  ('Type -> PointerType','Type',1,'p_Type','parser',176),
  ('Type -> StringType','Type',1,'p_Type','parser',177),
  ('Type -> ProcedureType','Type',1,'p_Type','parser',178),
  ('Type -> Array','Type',1,'p_Type','parser',179),
  ('Type -> ID','Type',1,'p_Type','parser',180),
  ('SimpleType -> DOUBLE','SimpleType',1,'p_SimpleType','parser',184),
  ('PointerType -> POWER ID','PointerType',2,'p_PointerType','parser',188),
  ('StringType -> STRING','StringType',1,'p_StringType','parser',192),
  ('ProcedureType -> ProcedureHeading','ProcedureType',1,'p_ProcedureType','parser',196),
  ('ProcedureType -> FuncHeading','ProcedureType',1,'p_ProcedureType','parser',197),
  ('TypeArgs -> LPAREN TypeID RPAREN','TypeArgs',3,'p_TypeArgs','parser',202),
  ('TypeArgs -> LPAREN STRING RPAREN','TypeArgs',3,'p_TypeArgs','parser',203),
  ('TypeID -> INTEGER','TypeID',1,'p_TypeID','parser',207),
  ('TypeID -> REAL','TypeID',1,'p_TypeID','parser',208),
  ('TypeID -> CHAR','TypeID',1,'p_TypeID','parser',209),
  ('TypeSection -> TYPE ColonTypeDecl','TypeSection',2,'p_TypeSection','parser',222),
  ('ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON','ColonTypeDecl',3,'p_ColonTypeDecl','parser',226),
  ('ColonTypeDecl -> TypeDecl SEMICOLON','ColonTypeDecl',2,'p_ColonTypeDecl','parser',227),
  ('TypeDecl -> ID EQUALS Type','TypeDecl',3,'p_TypeDecl','parser',231),
  ('TypeDecl -> ID EQUALS RestrictedType','TypeDecl',3,'p_TypeDecl','parser',232),
  ('TypeDecl -> ID EQUALS TYPE Type','TypeDecl',4,'p_TypeDecl','parser',233),
  ('TypeDecl -> ID EQUALS TYPE RestrictedType','TypeDecl',4,'p_TypeDecl','parser',234),
  ('RestrictedType -> ObjectType','RestrictedType',1,'p_RestrictedType','parser',238),
  ('RestrictedType -> ClassType','RestrictedType',1,'p_RestrictedType','parser',239),
  ('RelOp -> LANGLE','RelOp',1,'p_RelOp','parser',243),
  ('RelOp -> RANGLE','RelOp',1,'p_RelOp','parser',244),
  ('RelOp -> GEQ','RelOp',1,'p_RelOp','parser',245),
  ('RelOp -> LEQ','RelOp',1,'p_RelOp','parser',246),
  ('RelOp -> NOTEQUALS','RelOp',1,'p_RelOp','parser',247),
  ('RelOp -> EQUALS','RelOp',1,'p_RelOp','parser',248),
  ('AddOp -> PLUS','AddOp',1,'p_AddOp','parser',252),
  ('AddOp -> MINUS','AddOp',1,'p_AddOp','parser',253),
  ('AddOp -> OR','AddOp',1,'p_AddOp','parser',254),
  ('AddOp -> XOR','AddOp',1,'p_AddOp','parser',255),
  ('MulOp -> MULTIPLY','MulOp',1,'p_MulOp','parser',259),
  ('MulOp -> DIVIDE','MulOp',1,'p_MulOp','parser',260),
  ('MulOp -> DIV','MulOp',1,'p_MulOp','parser',261),
  ('MulOp -> MOD','MulOp',1,'p_MulOp','parser',262),
  ('MulOp -> AND','MulOp',1,'p_MulOp','parser',263),
  ('MulOp -> SHL','MulOp',1,'p_MulOp','parser',264),
  ('MulOp -> SHR','MulOp',1,'p_MulOp','parser',265),
  ('MulOp -> DOUBLESTAR','MulOp',1,'p_MulOp','parser',266),
  ('CommaExpression -> CommaExpression COMMA Expression','CommaExpression',3,'p_CommaExpression','parser',270),
  ('CommaExpression -> <empty>','CommaExpression',0,'p_CommaExpression','parser',271),
  ('ExprList -> Expression CommaExpression','ExprList',2,'p_ExprList','parser',275),
  ('Designator -> ID DesSubEleStar','Designator',2,'p_Designator','parser',279),
  ('DesSubEleStar -> DesSubEleStar DesignatorSubElem','DesSubEleStar',2,'p_DesSubEleStar','parser',283),
  ('DesSubEleStar -> <empty>','DesSubEleStar',0,'p_DesSubEleStar','parser',284),
  ('DesignatorSubElem -> DOT ID','DesignatorSubElem',2,'p_DesignatorSubElem','parser',288),
  ('DesignatorSubElem -> LSQUARE ExprList RSQUARE','DesignatorSubElem',3,'p_DesignatorSubElem','parser',289),
  ('DesignatorSubElem -> POWER','DesignatorSubElem',1,'p_DesignatorSubElem','parser',290),
  ('ConstSection -> CONSTANT ColonConstDecl','ConstSection',2,'p_ConstSection','parser',295),
  ('ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON','ColonConstDecl',3,'p_ColonConstDecl','parser',300),
  ('ColonConstDecl -> ConstDecl SEMICOLON','ColonConstDecl',2,'p_ColonConstDecl','parser',301),
  ('ConstDecl -> ID EQUALS ConstExpr','ConstDecl',3,'p_ConstDecl','parser',305),
  ('ConstDecl -> ID COLON TypeID EQUALS TypedConst','ConstDecl',5,'p_ConstDecl','parser',306),
  ('TypedConst -> ConstExpr','TypedConst',1,'p_TypedConst','parser',310),
  ('TypedConst -> ArrayConst','TypedConst',1,'p_TypedConst','parser',311),
  ('Array -> ARRAY LSQUARE ArrayBetween RSQUARE OF TypeArray','Array',6,'p_Array','parser',315),
  ('ArrayBetween -> NUMBER DOT DOT NUMBER','ArrayBetween',4,'p_ArrayBetween','parser',319),
  ('ArrayBetween -> NUMBER DOT DOT ID','ArrayBetween',4,'p_ArrayBetween','parser',320),
  ('ArrayBetween -> ID DOT DOT ID','ArrayBetween',4,'p_ArrayBetween','parser',321),
  ('ArrayBetween -> ID DOT DOT NUMBER','ArrayBetween',4,'p_ArrayBetween','parser',322),
  ('TypeArray -> TypeID','TypeArray',1,'p_TypeArray','parser',326),
  ('TypeArray -> PointerType','TypeArray',1,'p_TypeArray','parser',327),
  ('ArrayConst -> LPAREN TypedConst CommaTypedConst RPAREN','ArrayConst',4,'p_ArrayConst','parser',331),
  ('CommaTypedConst -> COMMA TypedConst CommaTypedConst','CommaTypedConst',3,'p_CommaTypedConst','parser',335),
  ('CommaTypedConst -> <empty>','CommaTypedConst',0,'p_CommaTypedConst','parser',336),
  ('ConstExpr -> NUMBER','ConstExpr',1,'p_ConstExpr','parser',340),
  ('IdentList -> ID TypeArgs CommaIDTypeArgs','IdentList',3,'p_IdentList','parser',345),
  ('IdentList -> ID CommaIDTypeArgs','IdentList',2,'p_IdentList','parser',346),
  ('CommaIDTypeArgs -> COMMA ID TypeArgs CommaIDTypeArgs','CommaIDTypeArgs',4,'p_CommaIDTypeArgs','parser',350),
  ('CommaIDTypeArgs -> COMMA ID CommaIDTypeArgs','CommaIDTypeArgs',3,'p_CommaIDTypeArgs','parser',351),
  ('CommaIDTypeArgs -> <empty>','CommaIDTypeArgs',0,'p_CommaIDTypeArgs','parser',352),
  ('ParamIdentList -> ParamIdent SEMICOLON ParamIdentList','ParamIdentList',3,'p_ParamIdentList','parser',357),
  ('ParamIdentList -> ParamIdent','ParamIdentList',1,'p_ParamIdentList','parser',358),
  ('ParamIdentList -> <empty>','ParamIdentList',0,'p_ParamIdentList','parser',359),
  ('ParamIdent -> IdentList COLON Type','ParamIdent',3,'p_ParamIdent','parser',363),
  ('ParamIdent -> IdentList','ParamIdent',1,'p_ParamIdent','parser',364),
  ('VarSection -> VAR ColonVarDecl','VarSection',2,'p_VarSection','parser',369),
  ('ColonVarDecl -> ColonVarDecl VarDecl SEMICOLON','ColonVarDecl',3,'p_ColonVarDecl','parser',373),
  ('ColonVarDecl -> VarDecl SEMICOLON','ColonVarDecl',2,'p_ColonVarDecl','parser',374),
  ('VarDecl -> IdentList COLON Type','VarDecl',3,'p_VarDecl','parser',378),
  ('ProcedureDeclSection -> ProcedureDecl','ProcedureDeclSection',1,'p_ProcedureDeclSection','parser',382),
  ('ProcedureDeclSection -> FuncDecl','ProcedureDeclSection',1,'p_ProcedureDeclSection','parser',383),
  ('ProcedureDeclSection -> ConstrucDecl','ProcedureDeclSection',1,'p_ProcedureDeclSection','parser',384),
  ('ConstrucDecl -> ConstrucHeading SEMICOLON Block','ConstrucDecl',3,'p_ConstrucDecl','parser',389),
  ('ConstrucHeading -> CONSTRUCTOR Designator FormalParams','ConstrucHeading',3,'p_ConstrucHeading','parser',393),
  ('ConstrucHeadingSemicolon -> CONSTRUCTOR Designator FormalParams SEMICOLON','ConstrucHeadingSemicolon',4,'p_ConstrucHeadingSemicolon','parser',397),
  ('FuncDecl -> FuncHeading SEMICOLON Block','FuncDecl',3,'p_FuncDecl','parser',401),
  ('FuncHeading -> FUNCTION Designator FormalParams COLON Type','FuncHeading',5,'p_FuncHeading','parser',405),
  ('FuncHeadingSemicolon -> FUNCTION Designator FormalParams COLON Type SEMICOLON','FuncHeadingSemicolon',6,'p_FuncHeadingSemicolon','parser',409),
  ('FormalParams -> LPAREN ParamIdentList RPAREN','FormalParams',3,'p_FormalParams','parser',414),
  ('FormalParams -> <empty>','FormalParams',0,'p_FormalParams','parser',415),
  ('ProcedureDecl -> ProcedureHeading SEMICOLON Block','ProcedureDecl',3,'p_ProcedureDecl','parser',419),
  ('ProcedureHeading -> PROCEDURE Designator FormalParams','ProcedureHeading',3,'p_ProcedureHeading','parser',424),
  ('ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON','ProcedureHeadingSemicolon',4,'p_ProcedureHeadingSemicolon','parser',428),
  ('LambFunc -> LAMBDA ID COLON SimpleExpression','LambFunc',4,'p_LambFunc','parser',434),
  ('ObjectType -> OBJECT ObjectHeritage ObjectVis ObjectBody END','ObjectType',5,'p_ObjectType','parser',447),
  ('ObjectHeritage -> LPAREN IdentList RPAREN','ObjectHeritage',3,'p_ObjectHeritage','parser',451),
  ('ObjectHeritage -> <empty>','ObjectHeritage',0,'p_ObjectHeritage','parser',452),
  ('ObjectBody -> ObjectBody ObjectTypeSection ObjectVarSection ObjectConstSection ObjectMethodList','ObjectBody',5,'p_ObjectBody','parser',457),
  ('ObjectBody -> <empty>','ObjectBody',0,'p_ObjectBody','parser',458),
  ('ObjectVis -> PUBLIC','ObjectVis',1,'p_ObjectVis','parser',462),
  ('ObjectVis -> <empty>','ObjectVis',0,'p_ObjectVis','parser',463),
  ('ObjectVarSection -> ColonVarDecl','ObjectVarSection',1,'p_ObjectVarSection','parser',467),
  ('ObjectVarSection -> <empty>','ObjectVarSection',0,'p_ObjectVarSection','parser',468),
  ('ObjectTypeSection -> ColonTypeDecl','ObjectTypeSection',1,'p_ObjectTypeSection','parser',472),
  ('ObjectTypeSection -> <empty>','ObjectTypeSection',0,'p_ObjectTypeSection','parser',473),
  ('ObjectConstSection -> ColonConstDecl','ObjectConstSection',1,'p_ObjectConstSection','parser',477),
  ('ObjectConstSection -> <empty>','ObjectConstSection',0,'p_ObjectConstSection','parser',478),
  ('ObjectMethodList -> ObjectMethodHeading','ObjectMethodList',1,'p_ObjectMethodList','parser',482),
  ('ObjectMethodList -> <empty>','ObjectMethodList',0,'p_ObjectMethodList','parser',483),
  ('ObjectMethodHeading -> ProcedureHeadingSemicolon','ObjectMethodHeading',1,'p_ObjectMethodHeading','parser',487),
  ('ObjectMethodHeading -> FuncHeadingSemicolon','ObjectMethodHeading',1,'p_ObjectMethodHeading','parser',488),
  ('ObjectMethodHeading -> ConstrucHeadingSemicolon','ObjectMethodHeading',1,'p_ObjectMethodHeading','parser',489),
  ('ClassType -> CLASS ClassHeritage ClassVis ClassBody END','ClassType',5,'p_ClassType','parser',497),
  ('ClassHeritage -> LPAREN IdentList RPAREN','ClassHeritage',3,'p_ClassHeritage','parser',501),
  ('ClassHeritage -> <empty>','ClassHeritage',0,'p_ClassHeritage','parser',502),
  ('ClassBody -> ClassBody ClassTypeSection ClassConstSection ClassVarSection ClassMethodList','ClassBody',5,'p_ClassBody','parser',506),
  ('ClassBody -> <empty>','ClassBody',0,'p_ClassBody','parser',507),
  ('ClassVis -> PUBLIC','ClassVis',1,'p_ClassVis','parser',511),
  ('ClassVis -> <empty>','ClassVis',0,'p_ClassVis','parser',512),
  ('ClassTypeSection -> ColonTypeDecl','ClassTypeSection',1,'p_ClassTypeSection','parser',516),
  ('ClassTypeSection -> <empty>','ClassTypeSection',0,'p_ClassTypeSection','parser',517),
  ('ClassConstSection -> ColonConstDecl','ClassConstSection',1,'p_ClassConstSection','parser',521),
  ('ClassConstSection -> <empty>','ClassConstSection',0,'p_ClassConstSection','parser',522),
  ('ClassVarSection -> ColonVarDecl','ClassVarSection',1,'p_ClassVarSection','parser',526),
  ('ClassVarSection -> <empty>','ClassVarSection',0,'p_ClassVarSection','parser',527),
  ('ClassMethodList -> ClassMethodHeading','ClassMethodList',1,'p_ClassMethodList','parser',531),
  ('ClassMethodList -> <empty>','ClassMethodList',0,'p_ClassMethodList','parser',532),
  ('ClassMethodHeading -> ProcedureHeadingSemicolon','ClassMethodHeading',1,'p_ClassMethodHeading','parser',536),
  ('ClassMethodHeading -> FuncHeadingSemicolon','ClassMethodHeading',1,'p_ClassMethodHeading','parser',537),
  ('ClassMethodHeading -> ConstrucHeadingSemicolon','ClassMethodHeading',1,'p_ClassMethodHeading','parser',538),
]

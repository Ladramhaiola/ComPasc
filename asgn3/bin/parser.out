Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> Goal
Rule 1     Goal -> Program
Rule 2     Program -> PROGRAM ID SEMICOLON Block
Rule 3     Program -> PROGRAM ID LPAREN IdentList RPAREN SEMICOLON Block
Rule 4     Block -> DeclSection CompoundStmt
Rule 5     DeclSection -> DeclSection WhichSection
Rule 6     DeclSection -> <empty>
Rule 7     WhichSection -> ConstSection
Rule 8     WhichSection -> TypeSection
Rule 9     WhichSection -> VarSection
Rule 10    WhichSection -> ProcedureDeclSection
Rule 11    CompoundStmt -> BEGIN StmtList END SEMICOLON
Rule 12    StmtList -> Statement StmtList
Rule 13    StmtList -> Statement
Rule 14    Statement -> SimpleStatement SEMICOLON
Rule 15    Statement -> StructStmt
Rule 16    SimpleStatement -> Designator
Rule 17    SimpleStatement -> Designator LPAREN ExprList RPAREN
Rule 18    SimpleStatement -> Designator ASSIGNTO Expression
Rule 19    SimpleStatement -> INHERITED
Rule 20    SimpleStatement -> LPAREN Expression RPAREN
Rule 21    SimpleStatement -> BREAK
Rule 22    SimpleStatement -> CONTINUE
Rule 23    StructStmt -> CompoundStmt
Rule 24    StructStmt -> ConditionalStmt
Rule 25    StructStmt -> LoopStmt
Rule 26    ConditionalStmt -> IfStmt
Rule 27    ConditionalStmt -> CaseStmt
Rule 28    IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt
Rule 29    IfStmt -> IF Expression THEN CompoundStmt
Rule 30    CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END
Rule 31    CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END
Rule 32    ColonCaseSelector -> ColonCaseSelector SEMICOLON CaseSelector
Rule 33    ColonCaseSelector -> <empty>
Rule 34    CaseSelector -> CaseLabel COLON Statement
Rule 35    CaseLabel -> NUMBER
Rule 36    LoopStmt -> RepeatStmt
Rule 37    LoopStmt -> WhileStmt
Rule 38    RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON
Rule 39    WhileStmt -> WHILE Expression DO CompoundStmt
Rule 40    Expression -> SimpleExpression RelSimpleStar
Rule 41    Expression -> LambFunc
Rule 42    RelSimpleStar -> RelOp SimpleExpression RelSimpleStar
Rule 43    RelSimpleStar -> <empty>
Rule 44    SimpleExpression -> PLUS Term AddTermStar
Rule 45    SimpleExpression -> MINUS Term AddTermStar
Rule 46    SimpleExpression -> Term AddTermStar
Rule 47    AddTermStar -> AddOp Term AddTermStar
Rule 48    AddTermStar -> <empty>
Rule 49    Term -> Factor MulFacStar
Rule 50    MulFacStar -> MulOp Factor MulFacStar
Rule 51    MulFacStar -> <empty>
Rule 52    Factor -> Designator
Rule 53    Factor -> Designator LPAREN ExprList RPAREN
Rule 54    Factor -> USERSTRING
Rule 55    Factor -> NUMBER
Rule 56    Factor -> LPAREN Expression RPAREN
Rule 57    Factor -> NOT Factor
Rule 58    Factor -> INHERITED Designator
Rule 59    Factor -> INHERITED
Rule 60    Factor -> TypeID LPAREN Expression RPAREN
Rule 61    Type -> TypeID
Rule 62    Type -> SimpleType
Rule 63    Type -> PointerType
Rule 64    Type -> StringType
Rule 65    Type -> ProcedureType
Rule 66    Type -> Array
Rule 67    Type -> ID
Rule 68    SimpleType -> DOUBLE
Rule 69    PointerType -> POWER ID
Rule 70    StringType -> STRING
Rule 71    ProcedureType -> ProcedureHeading
Rule 72    ProcedureType -> FuncHeading
Rule 73    TypeArgs -> LPAREN TypeID RPAREN
Rule 74    TypeArgs -> LPAREN STRING RPAREN
Rule 75    TypeID -> INTEGER
Rule 76    TypeID -> REAL
Rule 77    TypeID -> CHAR
Rule 78    TypeSection -> TYPE ColonTypeDecl
Rule 79    ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON
Rule 80    ColonTypeDecl -> TypeDecl SEMICOLON
Rule 81    TypeDecl -> ID EQUALS Type
Rule 82    TypeDecl -> ID EQUALS RestrictedType
Rule 83    TypeDecl -> ID EQUALS TYPE Type
Rule 84    TypeDecl -> ID EQUALS TYPE RestrictedType
Rule 85    RestrictedType -> ObjectType
Rule 86    RestrictedType -> ClassType
Rule 87    RelOp -> LANGLE
Rule 88    RelOp -> RANGLE
Rule 89    RelOp -> GEQ
Rule 90    RelOp -> LEQ
Rule 91    RelOp -> NOTEQUALS
Rule 92    RelOp -> EQUALS
Rule 93    AddOp -> PLUS
Rule 94    AddOp -> MINUS
Rule 95    AddOp -> OR
Rule 96    AddOp -> XOR
Rule 97    MulOp -> MULTIPLY
Rule 98    MulOp -> DIVIDE
Rule 99    MulOp -> DIV
Rule 100   MulOp -> MOD
Rule 101   MulOp -> AND
Rule 102   MulOp -> SHL
Rule 103   MulOp -> SHR
Rule 104   MulOp -> DOUBLESTAR
Rule 105   CommaExpression -> CommaExpression COMMA Expression
Rule 106   CommaExpression -> <empty>
Rule 107   ExprList -> Expression CommaExpression
Rule 108   Designator -> ID DesSubEleStar
Rule 109   DesSubEleStar -> DesSubEleStar DesignatorSubElem
Rule 110   DesSubEleStar -> <empty>
Rule 111   DesignatorSubElem -> DOT ID
Rule 112   DesignatorSubElem -> LSQUARE ExprList RSQUARE
Rule 113   DesignatorSubElem -> POWER
Rule 114   ConstSection -> CONSTANT ColonConstDecl
Rule 115   ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON
Rule 116   ColonConstDecl -> ConstDecl SEMICOLON
Rule 117   ConstDecl -> ID EQUALS ConstExpr
Rule 118   ConstDecl -> ID COLON TypeID EQUALS TypedConst
Rule 119   TypedConst -> ConstExpr
Rule 120   TypedConst -> ArrayConst
Rule 121   Array -> ARRAY LSQUARE ArrayBetween RSQUARE OF TypeArray
Rule 122   ArrayBetween -> NUMBER DOT DOT NUMBER
Rule 123   ArrayBetween -> NUMBER DOT DOT ID
Rule 124   ArrayBetween -> ID DOT DOT ID
Rule 125   ArrayBetween -> ID DOT DOT NUMBER
Rule 126   TypeArray -> TypeID
Rule 127   TypeArray -> PointerType
Rule 128   ArrayConst -> LPAREN TypedConst CommaTypedConst RPAREN
Rule 129   CommaTypedConst -> COMMA TypedConst CommaTypedConst
Rule 130   CommaTypedConst -> <empty>
Rule 131   ConstExpr -> NUMBER
Rule 132   IdentList -> ID TypeArgs CommaIDTypeArgs
Rule 133   IdentList -> ID CommaIDTypeArgs
Rule 134   CommaIDTypeArgs -> COMMA ID TypeArgs CommaIDTypeArgs
Rule 135   CommaIDTypeArgs -> COMMA ID CommaIDTypeArgs
Rule 136   CommaIDTypeArgs -> <empty>
Rule 137   ParamIdentList -> ParamIdent SEMICOLON ParamIdentList
Rule 138   ParamIdentList -> ParamIdent
Rule 139   ParamIdentList -> <empty>
Rule 140   ParamIdent -> IdentList COLON Type
Rule 141   ParamIdent -> IdentList
Rule 142   VarSection -> VAR ColonVarDecl
Rule 143   ColonVarDecl -> ColonVarDecl VarDecl SEMICOLON
Rule 144   ColonVarDecl -> VarDecl SEMICOLON
Rule 145   VarDecl -> IdentList COLON Type
Rule 146   ProcedureDeclSection -> ProcedureDecl
Rule 147   ProcedureDeclSection -> FuncDecl
Rule 148   ProcedureDeclSection -> ConstrucDecl
Rule 149   ConstrucDecl -> ConstrucHeading SEMICOLON Block
Rule 150   ConstrucHeading -> CONSTRUCTOR Designator FormalParams
Rule 151   ConstrucHeadingSemicolon -> CONSTRUCTOR Designator FormalParams SEMICOLON
Rule 152   FuncDecl -> FuncHeading SEMICOLON Block
Rule 153   FuncHeading -> FUNCTION Designator FormalParams COLON Type
Rule 154   FuncHeadingSemicolon -> FUNCTION Designator FormalParams COLON Type SEMICOLON
Rule 155   FormalParams -> LPAREN ParamIdentList RPAREN
Rule 156   FormalParams -> <empty>
Rule 157   ProcedureDecl -> ProcedureHeading SEMICOLON Block
Rule 158   ProcedureHeading -> PROCEDURE Designator FormalParams
Rule 159   ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON
Rule 160   LambFunc -> LAMBDA ID COLON SimpleExpression
Rule 161   ObjectType -> OBJECT ObjectHeritage ObjectVis ObjectBody END
Rule 162   ObjectHeritage -> LPAREN IdentList RPAREN
Rule 163   ObjectHeritage -> <empty>
Rule 164   ObjectBody -> ObjectBody ObjectTypeSection ObjectVarSection ObjectConstSection ObjectMethodList
Rule 165   ObjectBody -> <empty>
Rule 166   ObjectVis -> PUBLIC
Rule 167   ObjectVis -> <empty>
Rule 168   ObjectVarSection -> ColonVarDecl
Rule 169   ObjectVarSection -> <empty>
Rule 170   ObjectTypeSection -> ColonTypeDecl
Rule 171   ObjectTypeSection -> <empty>
Rule 172   ObjectConstSection -> ColonConstDecl
Rule 173   ObjectConstSection -> <empty>
Rule 174   ObjectMethodList -> ObjectMethodHeading
Rule 175   ObjectMethodList -> <empty>
Rule 176   ObjectMethodHeading -> ProcedureHeadingSemicolon
Rule 177   ObjectMethodHeading -> FuncHeadingSemicolon
Rule 178   ObjectMethodHeading -> ConstrucHeadingSemicolon
Rule 179   ClassType -> CLASS ClassHeritage ClassVis ClassBody END
Rule 180   ClassHeritage -> LPAREN IdentList RPAREN
Rule 181   ClassHeritage -> <empty>
Rule 182   ClassBody -> ClassBody ClassTypeSection ClassConstSection ClassVarSection ClassMethodList
Rule 183   ClassBody -> <empty>
Rule 184   ClassVis -> PUBLIC
Rule 185   ClassVis -> <empty>
Rule 186   ClassTypeSection -> ColonTypeDecl
Rule 187   ClassTypeSection -> <empty>
Rule 188   ClassConstSection -> ColonConstDecl
Rule 189   ClassConstSection -> <empty>
Rule 190   ClassVarSection -> ColonVarDecl
Rule 191   ClassVarSection -> <empty>
Rule 192   ClassMethodList -> ClassMethodHeading
Rule 193   ClassMethodList -> <empty>
Rule 194   ClassMethodHeading -> ProcedureHeadingSemicolon
Rule 195   ClassMethodHeading -> FuncHeadingSemicolon
Rule 196   ClassMethodHeading -> ConstrucHeadingSemicolon

Terminals, with rules where they appear

AND                  : 101
ARRAY                : 121
ASSIGNTO             : 18
BEGIN                : 11
BREAK                : 21
CASE                 : 30 31
CHAR                 : 77
CLASS                : 179
COLON                : 34 118 140 145 153 154 160
COMMA                : 105 129 134 135
COMMENT              : 
CONSTANT             : 114
CONSTRUCTOR          : 150 151
CONTINUE             : 22
DIV                  : 99
DIVIDE               : 98
DO                   : 39
DOT                  : 111 122 122 123 123 124 124 125 125
DOUBLE               : 68
DOUBLESTAR           : 104
ELSE                 : 28 31
END                  : 11 30 31 161 179
EQUALS               : 81 82 83 84 92 117 118
FUNCTION             : 153 154
GEQ                  : 89
ID                   : 2 3 67 69 81 82 83 84 108 111 117 118 123 124 124 125 132 133 134 135 160
IF                   : 28 29
INHERITED            : 19 58 59
INTEGER              : 75
LAMBDA               : 160
LANGLE               : 87
LEQ                  : 90
LPAREN               : 3 17 20 53 56 60 73 74 128 155 162 180
LSQUARE              : 112 121
MINUS                : 45 94
MOD                  : 100
MULTIPLY             : 97
NOT                  : 57
NOTEQUALS            : 91
NUMBER               : 35 55 122 122 123 125 131
OBJECT               : 161
OF                   : 30 31 121
OR                   : 95
PLUS                 : 44 93
POWER                : 69 113
PROCEDURE            : 158 159
PROGRAM              : 2 3
PUBLIC               : 166 184
RANGLE               : 88
REAL                 : 76
REPEAT               : 38
RPAREN               : 3 17 20 53 56 60 73 74 128 155 162 180
RSQUARE              : 112 121
SEMICOLON            : 2 3 11 14 31 32 38 79 80 115 116 137 143 144 149 151 152 154 157 159
SHL                  : 102
SHR                  : 103
STRING               : 70 74
THEN                 : 28 29
TYPE                 : 78 83 84
UNTIL                : 38
USERSTRING           : 54
VAR                  : 142
WHILE                : 39
XOR                  : 96
error                : 

Nonterminals, with rules where they appear

AddOp                : 47
AddTermStar          : 44 45 46 47
Array                : 66
ArrayBetween         : 121
ArrayConst           : 120
Block                : 2 3 149 152 157
CaseLabel            : 34
CaseSelector         : 30 31 32
CaseStmt             : 27
ClassBody            : 179 182
ClassConstSection    : 182
ClassHeritage        : 179
ClassMethodHeading   : 192
ClassMethodList      : 182
ClassType            : 86
ClassTypeSection     : 182
ClassVarSection      : 182
ClassVis             : 179
ColonCaseSelector    : 30 31 32
ColonConstDecl       : 114 115 172 188
ColonTypeDecl        : 78 79 170 186
ColonVarDecl         : 142 143 168 190
CommaExpression      : 105 107
CommaIDTypeArgs      : 132 133 134 135
CommaTypedConst      : 128 129
CompoundStmt         : 4 23 28 28 29 31 39
ConditionalStmt      : 24
ConstDecl            : 115 116
ConstExpr            : 117 119
ConstSection         : 7
ConstrucDecl         : 148
ConstrucHeading      : 149
ConstrucHeadingSemicolon : 178 196
DeclSection          : 4 5
DesSubEleStar        : 108 109
Designator           : 16 17 18 52 53 58 150 151 153 154 158 159
DesignatorSubElem    : 109
ExprList             : 17 53 112
Expression           : 18 20 28 29 30 31 38 39 56 60 105 107
Factor               : 49 50 57
FormalParams         : 150 151 153 154 158 159
FuncDecl             : 147
FuncHeading          : 72 152
FuncHeadingSemicolon : 177 195
Goal                 : 0
IdentList            : 3 140 141 145 162 180
IfStmt               : 26
LambFunc             : 41
LoopStmt             : 25
MulFacStar           : 49 50
MulOp                : 50
ObjectBody           : 161 164
ObjectConstSection   : 164
ObjectHeritage       : 161
ObjectMethodHeading  : 174
ObjectMethodList     : 164
ObjectType           : 85
ObjectTypeSection    : 164
ObjectVarSection     : 164
ObjectVis            : 161
ParamIdent           : 137 138
ParamIdentList       : 137 155
PointerType          : 63 127
ProcedureDecl        : 146
ProcedureDeclSection : 10
ProcedureHeading     : 71 157
ProcedureHeadingSemicolon : 176 194
ProcedureType        : 65
Program              : 1
RelOp                : 42
RelSimpleStar        : 40 42
RepeatStmt           : 36
RestrictedType       : 82 84
SimpleExpression     : 40 42 160
SimpleStatement      : 14
SimpleType           : 62
Statement            : 12 13 34 38
StmtList             : 11 12
StringType           : 64
StructStmt           : 15
Term                 : 44 45 46 47
Type                 : 81 83 140 145 153 154
TypeArgs             : 132 134
TypeArray            : 121
TypeDecl             : 79 80
TypeID               : 60 61 73 118 126
TypeSection          : 8
TypedConst           : 118 128 129
VarDecl              : 143 144
VarSection           : 9
WhichSection         : 5
WhileStmt            : 37

Parsing method: LALR

state 0

    (0) S' -> . Goal
    (1) Goal -> . Program
    (2) Program -> . PROGRAM ID SEMICOLON Block
    (3) Program -> . PROGRAM ID LPAREN IdentList RPAREN SEMICOLON Block

    PROGRAM         shift and go to state 2

    Program                        shift and go to state 3
    Goal                           shift and go to state 1

state 1

    (0) S' -> Goal .



state 2

    (2) Program -> PROGRAM . ID SEMICOLON Block
    (3) Program -> PROGRAM . ID LPAREN IdentList RPAREN SEMICOLON Block

    ID              shift and go to state 4


state 3

    (1) Goal -> Program .

    $end            reduce using rule 1 (Goal -> Program .)


state 4

    (2) Program -> PROGRAM ID . SEMICOLON Block
    (3) Program -> PROGRAM ID . LPAREN IdentList RPAREN SEMICOLON Block

    SEMICOLON       shift and go to state 5
    LPAREN          shift and go to state 6


state 5

    (2) Program -> PROGRAM ID SEMICOLON . Block
    (4) Block -> . DeclSection CompoundStmt
    (5) DeclSection -> . DeclSection WhichSection
    (6) DeclSection -> .

    BEGIN           reduce using rule 6 (DeclSection -> .)
    CONSTANT        reduce using rule 6 (DeclSection -> .)
    TYPE            reduce using rule 6 (DeclSection -> .)
    VAR             reduce using rule 6 (DeclSection -> .)
    PROCEDURE       reduce using rule 6 (DeclSection -> .)
    FUNCTION        reduce using rule 6 (DeclSection -> .)
    CONSTRUCTOR     reduce using rule 6 (DeclSection -> .)

    DeclSection                    shift and go to state 7
    Block                          shift and go to state 8

state 6

    (3) Program -> PROGRAM ID LPAREN . IdentList RPAREN SEMICOLON Block
    (132) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (133) IdentList -> . ID CommaIDTypeArgs

    ID              shift and go to state 10

    IdentList                      shift and go to state 9

state 7

    (4) Block -> DeclSection . CompoundStmt
    (5) DeclSection -> DeclSection . WhichSection
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (7) WhichSection -> . ConstSection
    (8) WhichSection -> . TypeSection
    (9) WhichSection -> . VarSection
    (10) WhichSection -> . ProcedureDeclSection
    (114) ConstSection -> . CONSTANT ColonConstDecl
    (78) TypeSection -> . TYPE ColonTypeDecl
    (142) VarSection -> . VAR ColonVarDecl
    (146) ProcedureDeclSection -> . ProcedureDecl
    (147) ProcedureDeclSection -> . FuncDecl
    (148) ProcedureDeclSection -> . ConstrucDecl
    (157) ProcedureDecl -> . ProcedureHeading SEMICOLON Block
    (152) FuncDecl -> . FuncHeading SEMICOLON Block
    (149) ConstrucDecl -> . ConstrucHeading SEMICOLON Block
    (158) ProcedureHeading -> . PROCEDURE Designator FormalParams
    (153) FuncHeading -> . FUNCTION Designator FormalParams COLON Type
    (150) ConstrucHeading -> . CONSTRUCTOR Designator FormalParams

    BEGIN           shift and go to state 17
    CONSTANT        shift and go to state 16
    TYPE            shift and go to state 28
    VAR             shift and go to state 24
    PROCEDURE       shift and go to state 20
    FUNCTION        shift and go to state 22
    CONSTRUCTOR     shift and go to state 12

    FuncHeading                    shift and go to state 18
    WhichSection                   shift and go to state 26
    ConstrucDecl                   shift and go to state 11
    FuncDecl                       shift and go to state 19
    ConstrucHeading                shift and go to state 27
    TypeSection                    shift and go to state 23
    ProcedureDecl                  shift and go to state 13
    ProcedureHeading               shift and go to state 14
    ProcedureDeclSection           shift and go to state 15
    VarSection                     shift and go to state 25
    CompoundStmt                   shift and go to state 29
    ConstSection                   shift and go to state 21

state 8

    (2) Program -> PROGRAM ID SEMICOLON Block .

    $end            reduce using rule 2 (Program -> PROGRAM ID SEMICOLON Block .)


state 9

    (3) Program -> PROGRAM ID LPAREN IdentList . RPAREN SEMICOLON Block

    RPAREN          shift and go to state 30


state 10

    (132) IdentList -> ID . TypeArgs CommaIDTypeArgs
    (133) IdentList -> ID . CommaIDTypeArgs
    (73) TypeArgs -> . LPAREN TypeID RPAREN
    (74) TypeArgs -> . LPAREN STRING RPAREN
    (134) CommaIDTypeArgs -> . COMMA ID TypeArgs CommaIDTypeArgs
    (135) CommaIDTypeArgs -> . COMMA ID CommaIDTypeArgs
    (136) CommaIDTypeArgs -> .

    LPAREN          shift and go to state 34
    COMMA           shift and go to state 33
    RPAREN          reduce using rule 136 (CommaIDTypeArgs -> .)
    COLON           reduce using rule 136 (CommaIDTypeArgs -> .)
    SEMICOLON       reduce using rule 136 (CommaIDTypeArgs -> .)

    CommaIDTypeArgs                shift and go to state 31
    TypeArgs                       shift and go to state 32

state 11

    (148) ProcedureDeclSection -> ConstrucDecl .

    BEGIN           reduce using rule 148 (ProcedureDeclSection -> ConstrucDecl .)
    CONSTANT        reduce using rule 148 (ProcedureDeclSection -> ConstrucDecl .)
    TYPE            reduce using rule 148 (ProcedureDeclSection -> ConstrucDecl .)
    VAR             reduce using rule 148 (ProcedureDeclSection -> ConstrucDecl .)
    PROCEDURE       reduce using rule 148 (ProcedureDeclSection -> ConstrucDecl .)
    FUNCTION        reduce using rule 148 (ProcedureDeclSection -> ConstrucDecl .)
    CONSTRUCTOR     reduce using rule 148 (ProcedureDeclSection -> ConstrucDecl .)


state 12

    (150) ConstrucHeading -> CONSTRUCTOR . Designator FormalParams
    (108) Designator -> . ID DesSubEleStar

    ID              shift and go to state 36

    Designator                     shift and go to state 35

state 13

    (146) ProcedureDeclSection -> ProcedureDecl .

    BEGIN           reduce using rule 146 (ProcedureDeclSection -> ProcedureDecl .)
    CONSTANT        reduce using rule 146 (ProcedureDeclSection -> ProcedureDecl .)
    TYPE            reduce using rule 146 (ProcedureDeclSection -> ProcedureDecl .)
    VAR             reduce using rule 146 (ProcedureDeclSection -> ProcedureDecl .)
    PROCEDURE       reduce using rule 146 (ProcedureDeclSection -> ProcedureDecl .)
    FUNCTION        reduce using rule 146 (ProcedureDeclSection -> ProcedureDecl .)
    CONSTRUCTOR     reduce using rule 146 (ProcedureDeclSection -> ProcedureDecl .)


state 14

    (157) ProcedureDecl -> ProcedureHeading . SEMICOLON Block

    SEMICOLON       shift and go to state 37


state 15

    (10) WhichSection -> ProcedureDeclSection .

    BEGIN           reduce using rule 10 (WhichSection -> ProcedureDeclSection .)
    CONSTANT        reduce using rule 10 (WhichSection -> ProcedureDeclSection .)
    TYPE            reduce using rule 10 (WhichSection -> ProcedureDeclSection .)
    VAR             reduce using rule 10 (WhichSection -> ProcedureDeclSection .)
    PROCEDURE       reduce using rule 10 (WhichSection -> ProcedureDeclSection .)
    FUNCTION        reduce using rule 10 (WhichSection -> ProcedureDeclSection .)
    CONSTRUCTOR     reduce using rule 10 (WhichSection -> ProcedureDeclSection .)


state 16

    (114) ConstSection -> CONSTANT . ColonConstDecl
    (115) ColonConstDecl -> . ColonConstDecl ConstDecl SEMICOLON
    (116) ColonConstDecl -> . ConstDecl SEMICOLON
    (117) ConstDecl -> . ID EQUALS ConstExpr
    (118) ConstDecl -> . ID COLON TypeID EQUALS TypedConst

    ID              shift and go to state 40

    ConstDecl                      shift and go to state 39
    ColonConstDecl                 shift and go to state 38

state 17

    (11) CompoundStmt -> BEGIN . StmtList END SEMICOLON
    (12) StmtList -> . Statement StmtList
    (13) StmtList -> . Statement
    (14) Statement -> . SimpleStatement SEMICOLON
    (15) Statement -> . StructStmt
    (16) SimpleStatement -> . Designator
    (17) SimpleStatement -> . Designator LPAREN ExprList RPAREN
    (18) SimpleStatement -> . Designator ASSIGNTO Expression
    (19) SimpleStatement -> . INHERITED
    (20) SimpleStatement -> . LPAREN Expression RPAREN
    (21) SimpleStatement -> . BREAK
    (22) SimpleStatement -> . CONTINUE
    (23) StructStmt -> . CompoundStmt
    (24) StructStmt -> . ConditionalStmt
    (25) StructStmt -> . LoopStmt
    (108) Designator -> . ID DesSubEleStar
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (26) ConditionalStmt -> . IfStmt
    (27) ConditionalStmt -> . CaseStmt
    (36) LoopStmt -> . RepeatStmt
    (37) LoopStmt -> . WhileStmt
    (28) IfStmt -> . IF Expression THEN CompoundStmt ELSE CompoundStmt
    (29) IfStmt -> . IF Expression THEN CompoundStmt
    (30) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector END
    (31) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END
    (38) RepeatStmt -> . REPEAT Statement UNTIL Expression SEMICOLON
    (39) WhileStmt -> . WHILE Expression DO CompoundStmt

    INHERITED       shift and go to state 52
    LPAREN          shift and go to state 51
    BREAK           shift and go to state 56
    CONTINUE        shift and go to state 57
    ID              shift and go to state 36
    BEGIN           shift and go to state 17
    IF              shift and go to state 53
    CASE            shift and go to state 45
    REPEAT          shift and go to state 54
    WHILE           shift and go to state 55

    WhileStmt                      shift and go to state 50
    StmtList                       shift and go to state 43
    Designator                     shift and go to state 46
    IfStmt                         shift and go to state 44
    SimpleStatement                shift and go to state 42
    CompoundStmt                   shift and go to state 60
    LoopStmt                       shift and go to state 47
    Statement                      shift and go to state 41
    StructStmt                     shift and go to state 58
    RepeatStmt                     shift and go to state 59
    CaseStmt                       shift and go to state 48
    ConditionalStmt                shift and go to state 49

state 18

    (152) FuncDecl -> FuncHeading . SEMICOLON Block

    SEMICOLON       shift and go to state 61


state 19

    (147) ProcedureDeclSection -> FuncDecl .

    BEGIN           reduce using rule 147 (ProcedureDeclSection -> FuncDecl .)
    CONSTANT        reduce using rule 147 (ProcedureDeclSection -> FuncDecl .)
    TYPE            reduce using rule 147 (ProcedureDeclSection -> FuncDecl .)
    VAR             reduce using rule 147 (ProcedureDeclSection -> FuncDecl .)
    PROCEDURE       reduce using rule 147 (ProcedureDeclSection -> FuncDecl .)
    FUNCTION        reduce using rule 147 (ProcedureDeclSection -> FuncDecl .)
    CONSTRUCTOR     reduce using rule 147 (ProcedureDeclSection -> FuncDecl .)


state 20

    (158) ProcedureHeading -> PROCEDURE . Designator FormalParams
    (108) Designator -> . ID DesSubEleStar

    ID              shift and go to state 36

    Designator                     shift and go to state 62

state 21

    (7) WhichSection -> ConstSection .

    BEGIN           reduce using rule 7 (WhichSection -> ConstSection .)
    CONSTANT        reduce using rule 7 (WhichSection -> ConstSection .)
    TYPE            reduce using rule 7 (WhichSection -> ConstSection .)
    VAR             reduce using rule 7 (WhichSection -> ConstSection .)
    PROCEDURE       reduce using rule 7 (WhichSection -> ConstSection .)
    FUNCTION        reduce using rule 7 (WhichSection -> ConstSection .)
    CONSTRUCTOR     reduce using rule 7 (WhichSection -> ConstSection .)


state 22

    (153) FuncHeading -> FUNCTION . Designator FormalParams COLON Type
    (108) Designator -> . ID DesSubEleStar

    ID              shift and go to state 36

    Designator                     shift and go to state 63

state 23

    (8) WhichSection -> TypeSection .

    BEGIN           reduce using rule 8 (WhichSection -> TypeSection .)
    CONSTANT        reduce using rule 8 (WhichSection -> TypeSection .)
    TYPE            reduce using rule 8 (WhichSection -> TypeSection .)
    VAR             reduce using rule 8 (WhichSection -> TypeSection .)
    PROCEDURE       reduce using rule 8 (WhichSection -> TypeSection .)
    FUNCTION        reduce using rule 8 (WhichSection -> TypeSection .)
    CONSTRUCTOR     reduce using rule 8 (WhichSection -> TypeSection .)


state 24

    (142) VarSection -> VAR . ColonVarDecl
    (143) ColonVarDecl -> . ColonVarDecl VarDecl SEMICOLON
    (144) ColonVarDecl -> . VarDecl SEMICOLON
    (145) VarDecl -> . IdentList COLON Type
    (132) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (133) IdentList -> . ID CommaIDTypeArgs

    ID              shift and go to state 10

    ColonVarDecl                   shift and go to state 64
    IdentList                      shift and go to state 65
    VarDecl                        shift and go to state 66

state 25

    (9) WhichSection -> VarSection .

    BEGIN           reduce using rule 9 (WhichSection -> VarSection .)
    CONSTANT        reduce using rule 9 (WhichSection -> VarSection .)
    TYPE            reduce using rule 9 (WhichSection -> VarSection .)
    VAR             reduce using rule 9 (WhichSection -> VarSection .)
    PROCEDURE       reduce using rule 9 (WhichSection -> VarSection .)
    FUNCTION        reduce using rule 9 (WhichSection -> VarSection .)
    CONSTRUCTOR     reduce using rule 9 (WhichSection -> VarSection .)


state 26

    (5) DeclSection -> DeclSection WhichSection .

    BEGIN           reduce using rule 5 (DeclSection -> DeclSection WhichSection .)
    CONSTANT        reduce using rule 5 (DeclSection -> DeclSection WhichSection .)
    TYPE            reduce using rule 5 (DeclSection -> DeclSection WhichSection .)
    VAR             reduce using rule 5 (DeclSection -> DeclSection WhichSection .)
    PROCEDURE       reduce using rule 5 (DeclSection -> DeclSection WhichSection .)
    FUNCTION        reduce using rule 5 (DeclSection -> DeclSection WhichSection .)
    CONSTRUCTOR     reduce using rule 5 (DeclSection -> DeclSection WhichSection .)


state 27

    (149) ConstrucDecl -> ConstrucHeading . SEMICOLON Block

    SEMICOLON       shift and go to state 67


state 28

    (78) TypeSection -> TYPE . ColonTypeDecl
    (79) ColonTypeDecl -> . ColonTypeDecl TypeDecl SEMICOLON
    (80) ColonTypeDecl -> . TypeDecl SEMICOLON
    (81) TypeDecl -> . ID EQUALS Type
    (82) TypeDecl -> . ID EQUALS RestrictedType
    (83) TypeDecl -> . ID EQUALS TYPE Type
    (84) TypeDecl -> . ID EQUALS TYPE RestrictedType

    ID              shift and go to state 70

    ColonTypeDecl                  shift and go to state 69
    TypeDecl                       shift and go to state 68

state 29

    (4) Block -> DeclSection CompoundStmt .

    BEGIN           reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    CONSTANT        reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    TYPE            reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    VAR             reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    PROCEDURE       reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    FUNCTION        reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    CONSTRUCTOR     reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    $end            reduce using rule 4 (Block -> DeclSection CompoundStmt .)


state 30

    (3) Program -> PROGRAM ID LPAREN IdentList RPAREN . SEMICOLON Block

    SEMICOLON       shift and go to state 71


state 31

    (133) IdentList -> ID CommaIDTypeArgs .

    COLON           reduce using rule 133 (IdentList -> ID CommaIDTypeArgs .)
    SEMICOLON       reduce using rule 133 (IdentList -> ID CommaIDTypeArgs .)
    RPAREN          reduce using rule 133 (IdentList -> ID CommaIDTypeArgs .)


state 32

    (132) IdentList -> ID TypeArgs . CommaIDTypeArgs
    (134) CommaIDTypeArgs -> . COMMA ID TypeArgs CommaIDTypeArgs
    (135) CommaIDTypeArgs -> . COMMA ID CommaIDTypeArgs
    (136) CommaIDTypeArgs -> .

    COMMA           shift and go to state 33
    RPAREN          reduce using rule 136 (CommaIDTypeArgs -> .)
    COLON           reduce using rule 136 (CommaIDTypeArgs -> .)
    SEMICOLON       reduce using rule 136 (CommaIDTypeArgs -> .)

    CommaIDTypeArgs                shift and go to state 72

state 33

    (134) CommaIDTypeArgs -> COMMA . ID TypeArgs CommaIDTypeArgs
    (135) CommaIDTypeArgs -> COMMA . ID CommaIDTypeArgs

    ID              shift and go to state 73


state 34

    (73) TypeArgs -> LPAREN . TypeID RPAREN
    (74) TypeArgs -> LPAREN . STRING RPAREN
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    STRING          shift and go to state 76
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 75

state 35

    (150) ConstrucHeading -> CONSTRUCTOR Designator . FormalParams
    (155) FormalParams -> . LPAREN ParamIdentList RPAREN
    (156) FormalParams -> .

    LPAREN          shift and go to state 79
    SEMICOLON       reduce using rule 156 (FormalParams -> .)

    FormalParams                   shift and go to state 80

state 36

    (108) Designator -> ID . DesSubEleStar
    (109) DesSubEleStar -> . DesSubEleStar DesignatorSubElem
    (110) DesSubEleStar -> .

    DOT             reduce using rule 110 (DesSubEleStar -> .)
    LSQUARE         reduce using rule 110 (DesSubEleStar -> .)
    POWER           reduce using rule 110 (DesSubEleStar -> .)
    LPAREN          reduce using rule 110 (DesSubEleStar -> .)
    SEMICOLON       reduce using rule 110 (DesSubEleStar -> .)
    ASSIGNTO        reduce using rule 110 (DesSubEleStar -> .)
    RPAREN          reduce using rule 110 (DesSubEleStar -> .)
    COLON           reduce using rule 110 (DesSubEleStar -> .)
    MULTIPLY        reduce using rule 110 (DesSubEleStar -> .)
    DIVIDE          reduce using rule 110 (DesSubEleStar -> .)
    DIV             reduce using rule 110 (DesSubEleStar -> .)
    MOD             reduce using rule 110 (DesSubEleStar -> .)
    AND             reduce using rule 110 (DesSubEleStar -> .)
    SHL             reduce using rule 110 (DesSubEleStar -> .)
    SHR             reduce using rule 110 (DesSubEleStar -> .)
    DOUBLESTAR      reduce using rule 110 (DesSubEleStar -> .)
    PLUS            reduce using rule 110 (DesSubEleStar -> .)
    MINUS           reduce using rule 110 (DesSubEleStar -> .)
    OR              reduce using rule 110 (DesSubEleStar -> .)
    XOR             reduce using rule 110 (DesSubEleStar -> .)
    LANGLE          reduce using rule 110 (DesSubEleStar -> .)
    RANGLE          reduce using rule 110 (DesSubEleStar -> .)
    GEQ             reduce using rule 110 (DesSubEleStar -> .)
    LEQ             reduce using rule 110 (DesSubEleStar -> .)
    NOTEQUALS       reduce using rule 110 (DesSubEleStar -> .)
    EQUALS          reduce using rule 110 (DesSubEleStar -> .)
    OF              reduce using rule 110 (DesSubEleStar -> .)
    THEN            reduce using rule 110 (DesSubEleStar -> .)
    DO              reduce using rule 110 (DesSubEleStar -> .)
    COMMA           reduce using rule 110 (DesSubEleStar -> .)
    RSQUARE         reduce using rule 110 (DesSubEleStar -> .)

    DesSubEleStar                  shift and go to state 81

state 37

    (157) ProcedureDecl -> ProcedureHeading SEMICOLON . Block
    (4) Block -> . DeclSection CompoundStmt
    (5) DeclSection -> . DeclSection WhichSection
    (6) DeclSection -> .

    BEGIN           reduce using rule 6 (DeclSection -> .)
    CONSTANT        reduce using rule 6 (DeclSection -> .)
    TYPE            reduce using rule 6 (DeclSection -> .)
    VAR             reduce using rule 6 (DeclSection -> .)
    PROCEDURE       reduce using rule 6 (DeclSection -> .)
    FUNCTION        reduce using rule 6 (DeclSection -> .)
    CONSTRUCTOR     reduce using rule 6 (DeclSection -> .)

    DeclSection                    shift and go to state 7
    Block                          shift and go to state 82

state 38

    (114) ConstSection -> CONSTANT ColonConstDecl .
    (115) ColonConstDecl -> ColonConstDecl . ConstDecl SEMICOLON
    (117) ConstDecl -> . ID EQUALS ConstExpr
    (118) ConstDecl -> . ID COLON TypeID EQUALS TypedConst

    BEGIN           reduce using rule 114 (ConstSection -> CONSTANT ColonConstDecl .)
    CONSTANT        reduce using rule 114 (ConstSection -> CONSTANT ColonConstDecl .)
    TYPE            reduce using rule 114 (ConstSection -> CONSTANT ColonConstDecl .)
    VAR             reduce using rule 114 (ConstSection -> CONSTANT ColonConstDecl .)
    PROCEDURE       reduce using rule 114 (ConstSection -> CONSTANT ColonConstDecl .)
    FUNCTION        reduce using rule 114 (ConstSection -> CONSTANT ColonConstDecl .)
    CONSTRUCTOR     reduce using rule 114 (ConstSection -> CONSTANT ColonConstDecl .)
    ID              shift and go to state 40

    ConstDecl                      shift and go to state 83

state 39

    (116) ColonConstDecl -> ConstDecl . SEMICOLON

    SEMICOLON       shift and go to state 84


state 40

    (117) ConstDecl -> ID . EQUALS ConstExpr
    (118) ConstDecl -> ID . COLON TypeID EQUALS TypedConst

    EQUALS          shift and go to state 85
    COLON           shift and go to state 86


state 41

    (12) StmtList -> Statement . StmtList
    (13) StmtList -> Statement .
    (12) StmtList -> . Statement StmtList
    (13) StmtList -> . Statement
    (14) Statement -> . SimpleStatement SEMICOLON
    (15) Statement -> . StructStmt
    (16) SimpleStatement -> . Designator
    (17) SimpleStatement -> . Designator LPAREN ExprList RPAREN
    (18) SimpleStatement -> . Designator ASSIGNTO Expression
    (19) SimpleStatement -> . INHERITED
    (20) SimpleStatement -> . LPAREN Expression RPAREN
    (21) SimpleStatement -> . BREAK
    (22) SimpleStatement -> . CONTINUE
    (23) StructStmt -> . CompoundStmt
    (24) StructStmt -> . ConditionalStmt
    (25) StructStmt -> . LoopStmt
    (108) Designator -> . ID DesSubEleStar
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (26) ConditionalStmt -> . IfStmt
    (27) ConditionalStmt -> . CaseStmt
    (36) LoopStmt -> . RepeatStmt
    (37) LoopStmt -> . WhileStmt
    (28) IfStmt -> . IF Expression THEN CompoundStmt ELSE CompoundStmt
    (29) IfStmt -> . IF Expression THEN CompoundStmt
    (30) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector END
    (31) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END
    (38) RepeatStmt -> . REPEAT Statement UNTIL Expression SEMICOLON
    (39) WhileStmt -> . WHILE Expression DO CompoundStmt

    END             reduce using rule 13 (StmtList -> Statement .)
    INHERITED       shift and go to state 52
    LPAREN          shift and go to state 51
    BREAK           shift and go to state 56
    CONTINUE        shift and go to state 57
    ID              shift and go to state 36
    BEGIN           shift and go to state 17
    IF              shift and go to state 53
    CASE            shift and go to state 45
    REPEAT          shift and go to state 54
    WHILE           shift and go to state 55

    WhileStmt                      shift and go to state 50
    Statement                      shift and go to state 41
    Designator                     shift and go to state 46
    IfStmt                         shift and go to state 44
    SimpleStatement                shift and go to state 42
    CompoundStmt                   shift and go to state 60
    LoopStmt                       shift and go to state 47
    StmtList                       shift and go to state 87
    StructStmt                     shift and go to state 58
    RepeatStmt                     shift and go to state 59
    CaseStmt                       shift and go to state 48
    ConditionalStmt                shift and go to state 49

state 42

    (14) Statement -> SimpleStatement . SEMICOLON

    SEMICOLON       shift and go to state 88


state 43

    (11) CompoundStmt -> BEGIN StmtList . END SEMICOLON

    END             shift and go to state 89


state 44

    (26) ConditionalStmt -> IfStmt .

    INHERITED       reduce using rule 26 (ConditionalStmt -> IfStmt .)
    LPAREN          reduce using rule 26 (ConditionalStmt -> IfStmt .)
    BREAK           reduce using rule 26 (ConditionalStmt -> IfStmt .)
    CONTINUE        reduce using rule 26 (ConditionalStmt -> IfStmt .)
    ID              reduce using rule 26 (ConditionalStmt -> IfStmt .)
    BEGIN           reduce using rule 26 (ConditionalStmt -> IfStmt .)
    IF              reduce using rule 26 (ConditionalStmt -> IfStmt .)
    CASE            reduce using rule 26 (ConditionalStmt -> IfStmt .)
    REPEAT          reduce using rule 26 (ConditionalStmt -> IfStmt .)
    WHILE           reduce using rule 26 (ConditionalStmt -> IfStmt .)
    END             reduce using rule 26 (ConditionalStmt -> IfStmt .)
    UNTIL           reduce using rule 26 (ConditionalStmt -> IfStmt .)
    ELSE            reduce using rule 26 (ConditionalStmt -> IfStmt .)
    SEMICOLON       reduce using rule 26 (ConditionalStmt -> IfStmt .)


state 45

    (30) CaseStmt -> CASE . Expression OF CaseSelector ColonCaseSelector END
    (31) CaseStmt -> CASE . Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END
    (40) Expression -> . SimpleExpression RelSimpleStar
    (41) Expression -> . LambFunc
    (44) SimpleExpression -> . PLUS Term AddTermStar
    (45) SimpleExpression -> . MINUS Term AddTermStar
    (46) SimpleExpression -> . Term AddTermStar
    (160) LambFunc -> . LAMBDA ID COLON SimpleExpression
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 97
    MINUS           shift and go to state 94
    LAMBDA          shift and go to state 104
    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 99
    LambFunc                       shift and go to state 95
    Designator                     shift and go to state 96
    Factor                         shift and go to state 93
    SimpleExpression               shift and go to state 98
    Expression                     shift and go to state 102

state 46

    (16) SimpleStatement -> Designator .
    (17) SimpleStatement -> Designator . LPAREN ExprList RPAREN
    (18) SimpleStatement -> Designator . ASSIGNTO Expression

    SEMICOLON       reduce using rule 16 (SimpleStatement -> Designator .)
    LPAREN          shift and go to state 106
    ASSIGNTO        shift and go to state 105


state 47

    (25) StructStmt -> LoopStmt .

    INHERITED       reduce using rule 25 (StructStmt -> LoopStmt .)
    LPAREN          reduce using rule 25 (StructStmt -> LoopStmt .)
    BREAK           reduce using rule 25 (StructStmt -> LoopStmt .)
    CONTINUE        reduce using rule 25 (StructStmt -> LoopStmt .)
    ID              reduce using rule 25 (StructStmt -> LoopStmt .)
    BEGIN           reduce using rule 25 (StructStmt -> LoopStmt .)
    IF              reduce using rule 25 (StructStmt -> LoopStmt .)
    CASE            reduce using rule 25 (StructStmt -> LoopStmt .)
    REPEAT          reduce using rule 25 (StructStmt -> LoopStmt .)
    WHILE           reduce using rule 25 (StructStmt -> LoopStmt .)
    END             reduce using rule 25 (StructStmt -> LoopStmt .)
    UNTIL           reduce using rule 25 (StructStmt -> LoopStmt .)
    ELSE            reduce using rule 25 (StructStmt -> LoopStmt .)
    SEMICOLON       reduce using rule 25 (StructStmt -> LoopStmt .)


state 48

    (27) ConditionalStmt -> CaseStmt .

    INHERITED       reduce using rule 27 (ConditionalStmt -> CaseStmt .)
    LPAREN          reduce using rule 27 (ConditionalStmt -> CaseStmt .)
    BREAK           reduce using rule 27 (ConditionalStmt -> CaseStmt .)
    CONTINUE        reduce using rule 27 (ConditionalStmt -> CaseStmt .)
    ID              reduce using rule 27 (ConditionalStmt -> CaseStmt .)
    BEGIN           reduce using rule 27 (ConditionalStmt -> CaseStmt .)
    IF              reduce using rule 27 (ConditionalStmt -> CaseStmt .)
    CASE            reduce using rule 27 (ConditionalStmt -> CaseStmt .)
    REPEAT          reduce using rule 27 (ConditionalStmt -> CaseStmt .)
    WHILE           reduce using rule 27 (ConditionalStmt -> CaseStmt .)
    END             reduce using rule 27 (ConditionalStmt -> CaseStmt .)
    UNTIL           reduce using rule 27 (ConditionalStmt -> CaseStmt .)
    ELSE            reduce using rule 27 (ConditionalStmt -> CaseStmt .)
    SEMICOLON       reduce using rule 27 (ConditionalStmt -> CaseStmt .)


state 49

    (24) StructStmt -> ConditionalStmt .

    INHERITED       reduce using rule 24 (StructStmt -> ConditionalStmt .)
    LPAREN          reduce using rule 24 (StructStmt -> ConditionalStmt .)
    BREAK           reduce using rule 24 (StructStmt -> ConditionalStmt .)
    CONTINUE        reduce using rule 24 (StructStmt -> ConditionalStmt .)
    ID              reduce using rule 24 (StructStmt -> ConditionalStmt .)
    BEGIN           reduce using rule 24 (StructStmt -> ConditionalStmt .)
    IF              reduce using rule 24 (StructStmt -> ConditionalStmt .)
    CASE            reduce using rule 24 (StructStmt -> ConditionalStmt .)
    REPEAT          reduce using rule 24 (StructStmt -> ConditionalStmt .)
    WHILE           reduce using rule 24 (StructStmt -> ConditionalStmt .)
    END             reduce using rule 24 (StructStmt -> ConditionalStmt .)
    UNTIL           reduce using rule 24 (StructStmt -> ConditionalStmt .)
    ELSE            reduce using rule 24 (StructStmt -> ConditionalStmt .)
    SEMICOLON       reduce using rule 24 (StructStmt -> ConditionalStmt .)


state 50

    (37) LoopStmt -> WhileStmt .

    END             reduce using rule 37 (LoopStmt -> WhileStmt .)
    ELSE            reduce using rule 37 (LoopStmt -> WhileStmt .)
    SEMICOLON       reduce using rule 37 (LoopStmt -> WhileStmt .)
    INHERITED       reduce using rule 37 (LoopStmt -> WhileStmt .)
    LPAREN          reduce using rule 37 (LoopStmt -> WhileStmt .)
    BREAK           reduce using rule 37 (LoopStmt -> WhileStmt .)
    CONTINUE        reduce using rule 37 (LoopStmt -> WhileStmt .)
    ID              reduce using rule 37 (LoopStmt -> WhileStmt .)
    BEGIN           reduce using rule 37 (LoopStmt -> WhileStmt .)
    IF              reduce using rule 37 (LoopStmt -> WhileStmt .)
    CASE            reduce using rule 37 (LoopStmt -> WhileStmt .)
    REPEAT          reduce using rule 37 (LoopStmt -> WhileStmt .)
    WHILE           reduce using rule 37 (LoopStmt -> WhileStmt .)
    UNTIL           reduce using rule 37 (LoopStmt -> WhileStmt .)


state 51

    (20) SimpleStatement -> LPAREN . Expression RPAREN
    (40) Expression -> . SimpleExpression RelSimpleStar
    (41) Expression -> . LambFunc
    (44) SimpleExpression -> . PLUS Term AddTermStar
    (45) SimpleExpression -> . MINUS Term AddTermStar
    (46) SimpleExpression -> . Term AddTermStar
    (160) LambFunc -> . LAMBDA ID COLON SimpleExpression
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 97
    MINUS           shift and go to state 94
    LAMBDA          shift and go to state 104
    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 99
    LambFunc                       shift and go to state 95
    Designator                     shift and go to state 96
    Factor                         shift and go to state 93
    SimpleExpression               shift and go to state 98
    Expression                     shift and go to state 107

state 52

    (19) SimpleStatement -> INHERITED .

    SEMICOLON       reduce using rule 19 (SimpleStatement -> INHERITED .)


state 53

    (28) IfStmt -> IF . Expression THEN CompoundStmt ELSE CompoundStmt
    (29) IfStmt -> IF . Expression THEN CompoundStmt
    (40) Expression -> . SimpleExpression RelSimpleStar
    (41) Expression -> . LambFunc
    (44) SimpleExpression -> . PLUS Term AddTermStar
    (45) SimpleExpression -> . MINUS Term AddTermStar
    (46) SimpleExpression -> . Term AddTermStar
    (160) LambFunc -> . LAMBDA ID COLON SimpleExpression
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 97
    MINUS           shift and go to state 94
    LAMBDA          shift and go to state 104
    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 99
    LambFunc                       shift and go to state 95
    Designator                     shift and go to state 96
    Factor                         shift and go to state 93
    SimpleExpression               shift and go to state 98
    Expression                     shift and go to state 108

state 54

    (38) RepeatStmt -> REPEAT . Statement UNTIL Expression SEMICOLON
    (14) Statement -> . SimpleStatement SEMICOLON
    (15) Statement -> . StructStmt
    (16) SimpleStatement -> . Designator
    (17) SimpleStatement -> . Designator LPAREN ExprList RPAREN
    (18) SimpleStatement -> . Designator ASSIGNTO Expression
    (19) SimpleStatement -> . INHERITED
    (20) SimpleStatement -> . LPAREN Expression RPAREN
    (21) SimpleStatement -> . BREAK
    (22) SimpleStatement -> . CONTINUE
    (23) StructStmt -> . CompoundStmt
    (24) StructStmt -> . ConditionalStmt
    (25) StructStmt -> . LoopStmt
    (108) Designator -> . ID DesSubEleStar
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (26) ConditionalStmt -> . IfStmt
    (27) ConditionalStmt -> . CaseStmt
    (36) LoopStmt -> . RepeatStmt
    (37) LoopStmt -> . WhileStmt
    (28) IfStmt -> . IF Expression THEN CompoundStmt ELSE CompoundStmt
    (29) IfStmt -> . IF Expression THEN CompoundStmt
    (30) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector END
    (31) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END
    (38) RepeatStmt -> . REPEAT Statement UNTIL Expression SEMICOLON
    (39) WhileStmt -> . WHILE Expression DO CompoundStmt

    INHERITED       shift and go to state 52
    LPAREN          shift and go to state 51
    BREAK           shift and go to state 56
    CONTINUE        shift and go to state 57
    ID              shift and go to state 36
    BEGIN           shift and go to state 17
    IF              shift and go to state 53
    CASE            shift and go to state 45
    REPEAT          shift and go to state 54
    WHILE           shift and go to state 55

    WhileStmt                      shift and go to state 50
    ConditionalStmt                shift and go to state 49
    Designator                     shift and go to state 46
    IfStmt                         shift and go to state 44
    SimpleStatement                shift and go to state 42
    CompoundStmt                   shift and go to state 60
    LoopStmt                       shift and go to state 47
    Statement                      shift and go to state 109
    StructStmt                     shift and go to state 58
    RepeatStmt                     shift and go to state 59
    CaseStmt                       shift and go to state 48

state 55

    (39) WhileStmt -> WHILE . Expression DO CompoundStmt
    (40) Expression -> . SimpleExpression RelSimpleStar
    (41) Expression -> . LambFunc
    (44) SimpleExpression -> . PLUS Term AddTermStar
    (45) SimpleExpression -> . MINUS Term AddTermStar
    (46) SimpleExpression -> . Term AddTermStar
    (160) LambFunc -> . LAMBDA ID COLON SimpleExpression
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 97
    MINUS           shift and go to state 94
    LAMBDA          shift and go to state 104
    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 99
    LambFunc                       shift and go to state 95
    Designator                     shift and go to state 96
    Factor                         shift and go to state 93
    SimpleExpression               shift and go to state 98
    Expression                     shift and go to state 110

state 56

    (21) SimpleStatement -> BREAK .

    SEMICOLON       reduce using rule 21 (SimpleStatement -> BREAK .)


state 57

    (22) SimpleStatement -> CONTINUE .

    SEMICOLON       reduce using rule 22 (SimpleStatement -> CONTINUE .)


state 58

    (15) Statement -> StructStmt .

    INHERITED       reduce using rule 15 (Statement -> StructStmt .)
    LPAREN          reduce using rule 15 (Statement -> StructStmt .)
    BREAK           reduce using rule 15 (Statement -> StructStmt .)
    CONTINUE        reduce using rule 15 (Statement -> StructStmt .)
    ID              reduce using rule 15 (Statement -> StructStmt .)
    BEGIN           reduce using rule 15 (Statement -> StructStmt .)
    IF              reduce using rule 15 (Statement -> StructStmt .)
    CASE            reduce using rule 15 (Statement -> StructStmt .)
    REPEAT          reduce using rule 15 (Statement -> StructStmt .)
    WHILE           reduce using rule 15 (Statement -> StructStmt .)
    END             reduce using rule 15 (Statement -> StructStmt .)
    ELSE            reduce using rule 15 (Statement -> StructStmt .)
    SEMICOLON       reduce using rule 15 (Statement -> StructStmt .)
    UNTIL           reduce using rule 15 (Statement -> StructStmt .)


state 59

    (36) LoopStmt -> RepeatStmt .

    END             reduce using rule 36 (LoopStmt -> RepeatStmt .)
    ELSE            reduce using rule 36 (LoopStmt -> RepeatStmt .)
    SEMICOLON       reduce using rule 36 (LoopStmt -> RepeatStmt .)
    INHERITED       reduce using rule 36 (LoopStmt -> RepeatStmt .)
    LPAREN          reduce using rule 36 (LoopStmt -> RepeatStmt .)
    BREAK           reduce using rule 36 (LoopStmt -> RepeatStmt .)
    CONTINUE        reduce using rule 36 (LoopStmt -> RepeatStmt .)
    ID              reduce using rule 36 (LoopStmt -> RepeatStmt .)
    BEGIN           reduce using rule 36 (LoopStmt -> RepeatStmt .)
    IF              reduce using rule 36 (LoopStmt -> RepeatStmt .)
    CASE            reduce using rule 36 (LoopStmt -> RepeatStmt .)
    REPEAT          reduce using rule 36 (LoopStmt -> RepeatStmt .)
    WHILE           reduce using rule 36 (LoopStmt -> RepeatStmt .)
    UNTIL           reduce using rule 36 (LoopStmt -> RepeatStmt .)


state 60

    (23) StructStmt -> CompoundStmt .

    INHERITED       reduce using rule 23 (StructStmt -> CompoundStmt .)
    LPAREN          reduce using rule 23 (StructStmt -> CompoundStmt .)
    BREAK           reduce using rule 23 (StructStmt -> CompoundStmt .)
    CONTINUE        reduce using rule 23 (StructStmt -> CompoundStmt .)
    ID              reduce using rule 23 (StructStmt -> CompoundStmt .)
    BEGIN           reduce using rule 23 (StructStmt -> CompoundStmt .)
    IF              reduce using rule 23 (StructStmt -> CompoundStmt .)
    CASE            reduce using rule 23 (StructStmt -> CompoundStmt .)
    REPEAT          reduce using rule 23 (StructStmt -> CompoundStmt .)
    WHILE           reduce using rule 23 (StructStmt -> CompoundStmt .)
    END             reduce using rule 23 (StructStmt -> CompoundStmt .)
    UNTIL           reduce using rule 23 (StructStmt -> CompoundStmt .)
    ELSE            reduce using rule 23 (StructStmt -> CompoundStmt .)
    SEMICOLON       reduce using rule 23 (StructStmt -> CompoundStmt .)


state 61

    (152) FuncDecl -> FuncHeading SEMICOLON . Block
    (4) Block -> . DeclSection CompoundStmt
    (5) DeclSection -> . DeclSection WhichSection
    (6) DeclSection -> .

    BEGIN           reduce using rule 6 (DeclSection -> .)
    CONSTANT        reduce using rule 6 (DeclSection -> .)
    TYPE            reduce using rule 6 (DeclSection -> .)
    VAR             reduce using rule 6 (DeclSection -> .)
    PROCEDURE       reduce using rule 6 (DeclSection -> .)
    FUNCTION        reduce using rule 6 (DeclSection -> .)
    CONSTRUCTOR     reduce using rule 6 (DeclSection -> .)

    DeclSection                    shift and go to state 7
    Block                          shift and go to state 111

state 62

    (158) ProcedureHeading -> PROCEDURE Designator . FormalParams
    (155) FormalParams -> . LPAREN ParamIdentList RPAREN
    (156) FormalParams -> .

    LPAREN          shift and go to state 79
    SEMICOLON       reduce using rule 156 (FormalParams -> .)
    RPAREN          reduce using rule 156 (FormalParams -> .)

    FormalParams                   shift and go to state 112

state 63

    (153) FuncHeading -> FUNCTION Designator . FormalParams COLON Type
    (155) FormalParams -> . LPAREN ParamIdentList RPAREN
    (156) FormalParams -> .

    LPAREN          shift and go to state 79
    COLON           reduce using rule 156 (FormalParams -> .)

    FormalParams                   shift and go to state 113

state 64

    (142) VarSection -> VAR ColonVarDecl .
    (143) ColonVarDecl -> ColonVarDecl . VarDecl SEMICOLON
    (145) VarDecl -> . IdentList COLON Type
    (132) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (133) IdentList -> . ID CommaIDTypeArgs

    BEGIN           reduce using rule 142 (VarSection -> VAR ColonVarDecl .)
    CONSTANT        reduce using rule 142 (VarSection -> VAR ColonVarDecl .)
    TYPE            reduce using rule 142 (VarSection -> VAR ColonVarDecl .)
    VAR             reduce using rule 142 (VarSection -> VAR ColonVarDecl .)
    PROCEDURE       reduce using rule 142 (VarSection -> VAR ColonVarDecl .)
    FUNCTION        reduce using rule 142 (VarSection -> VAR ColonVarDecl .)
    CONSTRUCTOR     reduce using rule 142 (VarSection -> VAR ColonVarDecl .)
    ID              shift and go to state 10

    IdentList                      shift and go to state 65
    VarDecl                        shift and go to state 114

state 65

    (145) VarDecl -> IdentList . COLON Type

    COLON           shift and go to state 115


state 66

    (144) ColonVarDecl -> VarDecl . SEMICOLON

    SEMICOLON       shift and go to state 116


state 67

    (149) ConstrucDecl -> ConstrucHeading SEMICOLON . Block
    (4) Block -> . DeclSection CompoundStmt
    (5) DeclSection -> . DeclSection WhichSection
    (6) DeclSection -> .

    BEGIN           reduce using rule 6 (DeclSection -> .)
    CONSTANT        reduce using rule 6 (DeclSection -> .)
    TYPE            reduce using rule 6 (DeclSection -> .)
    VAR             reduce using rule 6 (DeclSection -> .)
    PROCEDURE       reduce using rule 6 (DeclSection -> .)
    FUNCTION        reduce using rule 6 (DeclSection -> .)
    CONSTRUCTOR     reduce using rule 6 (DeclSection -> .)

    DeclSection                    shift and go to state 7
    Block                          shift and go to state 117

state 68

    (80) ColonTypeDecl -> TypeDecl . SEMICOLON

    SEMICOLON       shift and go to state 118


state 69

    (78) TypeSection -> TYPE ColonTypeDecl .
    (79) ColonTypeDecl -> ColonTypeDecl . TypeDecl SEMICOLON
    (81) TypeDecl -> . ID EQUALS Type
    (82) TypeDecl -> . ID EQUALS RestrictedType
    (83) TypeDecl -> . ID EQUALS TYPE Type
    (84) TypeDecl -> . ID EQUALS TYPE RestrictedType

    BEGIN           reduce using rule 78 (TypeSection -> TYPE ColonTypeDecl .)
    CONSTANT        reduce using rule 78 (TypeSection -> TYPE ColonTypeDecl .)
    TYPE            reduce using rule 78 (TypeSection -> TYPE ColonTypeDecl .)
    VAR             reduce using rule 78 (TypeSection -> TYPE ColonTypeDecl .)
    PROCEDURE       reduce using rule 78 (TypeSection -> TYPE ColonTypeDecl .)
    FUNCTION        reduce using rule 78 (TypeSection -> TYPE ColonTypeDecl .)
    CONSTRUCTOR     reduce using rule 78 (TypeSection -> TYPE ColonTypeDecl .)
    ID              shift and go to state 70

    TypeDecl                       shift and go to state 119

state 70

    (81) TypeDecl -> ID . EQUALS Type
    (82) TypeDecl -> ID . EQUALS RestrictedType
    (83) TypeDecl -> ID . EQUALS TYPE Type
    (84) TypeDecl -> ID . EQUALS TYPE RestrictedType

    EQUALS          shift and go to state 120


state 71

    (3) Program -> PROGRAM ID LPAREN IdentList RPAREN SEMICOLON . Block
    (4) Block -> . DeclSection CompoundStmt
    (5) DeclSection -> . DeclSection WhichSection
    (6) DeclSection -> .

    BEGIN           reduce using rule 6 (DeclSection -> .)
    CONSTANT        reduce using rule 6 (DeclSection -> .)
    TYPE            reduce using rule 6 (DeclSection -> .)
    VAR             reduce using rule 6 (DeclSection -> .)
    PROCEDURE       reduce using rule 6 (DeclSection -> .)
    FUNCTION        reduce using rule 6 (DeclSection -> .)
    CONSTRUCTOR     reduce using rule 6 (DeclSection -> .)

    DeclSection                    shift and go to state 7
    Block                          shift and go to state 121

state 72

    (132) IdentList -> ID TypeArgs CommaIDTypeArgs .

    COLON           reduce using rule 132 (IdentList -> ID TypeArgs CommaIDTypeArgs .)
    SEMICOLON       reduce using rule 132 (IdentList -> ID TypeArgs CommaIDTypeArgs .)
    RPAREN          reduce using rule 132 (IdentList -> ID TypeArgs CommaIDTypeArgs .)


state 73

    (134) CommaIDTypeArgs -> COMMA ID . TypeArgs CommaIDTypeArgs
    (135) CommaIDTypeArgs -> COMMA ID . CommaIDTypeArgs
    (73) TypeArgs -> . LPAREN TypeID RPAREN
    (74) TypeArgs -> . LPAREN STRING RPAREN
    (134) CommaIDTypeArgs -> . COMMA ID TypeArgs CommaIDTypeArgs
    (135) CommaIDTypeArgs -> . COMMA ID CommaIDTypeArgs
    (136) CommaIDTypeArgs -> .

    LPAREN          shift and go to state 34
    COMMA           shift and go to state 33
    RPAREN          reduce using rule 136 (CommaIDTypeArgs -> .)
    COLON           reduce using rule 136 (CommaIDTypeArgs -> .)
    SEMICOLON       reduce using rule 136 (CommaIDTypeArgs -> .)

    CommaIDTypeArgs                shift and go to state 122
    TypeArgs                       shift and go to state 123

state 74

    (76) TypeID -> REAL .

    SEMICOLON       reduce using rule 76 (TypeID -> REAL .)
    RPAREN          reduce using rule 76 (TypeID -> REAL .)
    LPAREN          reduce using rule 76 (TypeID -> REAL .)
    EQUALS          reduce using rule 76 (TypeID -> REAL .)


state 75

    (73) TypeArgs -> LPAREN TypeID . RPAREN

    RPAREN          shift and go to state 124


state 76

    (74) TypeArgs -> LPAREN STRING . RPAREN

    RPAREN          shift and go to state 125


state 77

    (77) TypeID -> CHAR .

    SEMICOLON       reduce using rule 77 (TypeID -> CHAR .)
    RPAREN          reduce using rule 77 (TypeID -> CHAR .)
    LPAREN          reduce using rule 77 (TypeID -> CHAR .)
    EQUALS          reduce using rule 77 (TypeID -> CHAR .)


state 78

    (75) TypeID -> INTEGER .

    SEMICOLON       reduce using rule 75 (TypeID -> INTEGER .)
    RPAREN          reduce using rule 75 (TypeID -> INTEGER .)
    LPAREN          reduce using rule 75 (TypeID -> INTEGER .)
    EQUALS          reduce using rule 75 (TypeID -> INTEGER .)


state 79

    (155) FormalParams -> LPAREN . ParamIdentList RPAREN
    (137) ParamIdentList -> . ParamIdent SEMICOLON ParamIdentList
    (138) ParamIdentList -> . ParamIdent
    (139) ParamIdentList -> .
    (140) ParamIdent -> . IdentList COLON Type
    (141) ParamIdent -> . IdentList
    (132) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (133) IdentList -> . ID CommaIDTypeArgs

    RPAREN          reduce using rule 139 (ParamIdentList -> .)
    ID              shift and go to state 10

    IdentList                      shift and go to state 126
    ParamIdent                     shift and go to state 127
    ParamIdentList                 shift and go to state 128

state 80

    (150) ConstrucHeading -> CONSTRUCTOR Designator FormalParams .

    SEMICOLON       reduce using rule 150 (ConstrucHeading -> CONSTRUCTOR Designator FormalParams .)


state 81

    (108) Designator -> ID DesSubEleStar .
    (109) DesSubEleStar -> DesSubEleStar . DesignatorSubElem
    (111) DesignatorSubElem -> . DOT ID
    (112) DesignatorSubElem -> . LSQUARE ExprList RSQUARE
    (113) DesignatorSubElem -> . POWER

    MULTIPLY        reduce using rule 108 (Designator -> ID DesSubEleStar .)
    DIVIDE          reduce using rule 108 (Designator -> ID DesSubEleStar .)
    DIV             reduce using rule 108 (Designator -> ID DesSubEleStar .)
    MOD             reduce using rule 108 (Designator -> ID DesSubEleStar .)
    AND             reduce using rule 108 (Designator -> ID DesSubEleStar .)
    SHL             reduce using rule 108 (Designator -> ID DesSubEleStar .)
    SHR             reduce using rule 108 (Designator -> ID DesSubEleStar .)
    DOUBLESTAR      reduce using rule 108 (Designator -> ID DesSubEleStar .)
    PLUS            reduce using rule 108 (Designator -> ID DesSubEleStar .)
    MINUS           reduce using rule 108 (Designator -> ID DesSubEleStar .)
    OR              reduce using rule 108 (Designator -> ID DesSubEleStar .)
    XOR             reduce using rule 108 (Designator -> ID DesSubEleStar .)
    LANGLE          reduce using rule 108 (Designator -> ID DesSubEleStar .)
    RANGLE          reduce using rule 108 (Designator -> ID DesSubEleStar .)
    GEQ             reduce using rule 108 (Designator -> ID DesSubEleStar .)
    LEQ             reduce using rule 108 (Designator -> ID DesSubEleStar .)
    NOTEQUALS       reduce using rule 108 (Designator -> ID DesSubEleStar .)
    EQUALS          reduce using rule 108 (Designator -> ID DesSubEleStar .)
    OF              reduce using rule 108 (Designator -> ID DesSubEleStar .)
    RPAREN          reduce using rule 108 (Designator -> ID DesSubEleStar .)
    THEN            reduce using rule 108 (Designator -> ID DesSubEleStar .)
    DO              reduce using rule 108 (Designator -> ID DesSubEleStar .)
    SEMICOLON       reduce using rule 108 (Designator -> ID DesSubEleStar .)
    COMMA           reduce using rule 108 (Designator -> ID DesSubEleStar .)
    RSQUARE         reduce using rule 108 (Designator -> ID DesSubEleStar .)
    LPAREN          reduce using rule 108 (Designator -> ID DesSubEleStar .)
    COLON           reduce using rule 108 (Designator -> ID DesSubEleStar .)
    ASSIGNTO        reduce using rule 108 (Designator -> ID DesSubEleStar .)
    DOT             shift and go to state 132
    LSQUARE         shift and go to state 130
    POWER           shift and go to state 129

    DesignatorSubElem              shift and go to state 131

state 82

    (157) ProcedureDecl -> ProcedureHeading SEMICOLON Block .

    BEGIN           reduce using rule 157 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)
    CONSTANT        reduce using rule 157 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)
    TYPE            reduce using rule 157 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)
    VAR             reduce using rule 157 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)
    PROCEDURE       reduce using rule 157 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)
    FUNCTION        reduce using rule 157 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)
    CONSTRUCTOR     reduce using rule 157 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)


state 83

    (115) ColonConstDecl -> ColonConstDecl ConstDecl . SEMICOLON

    SEMICOLON       shift and go to state 133


state 84

    (116) ColonConstDecl -> ConstDecl SEMICOLON .

    ID              reduce using rule 116 (ColonConstDecl -> ConstDecl SEMICOLON .)
    PROCEDURE       reduce using rule 116 (ColonConstDecl -> ConstDecl SEMICOLON .)
    FUNCTION        reduce using rule 116 (ColonConstDecl -> ConstDecl SEMICOLON .)
    CONSTRUCTOR     reduce using rule 116 (ColonConstDecl -> ConstDecl SEMICOLON .)
    END             reduce using rule 116 (ColonConstDecl -> ConstDecl SEMICOLON .)
    BEGIN           reduce using rule 116 (ColonConstDecl -> ConstDecl SEMICOLON .)
    CONSTANT        reduce using rule 116 (ColonConstDecl -> ConstDecl SEMICOLON .)
    TYPE            reduce using rule 116 (ColonConstDecl -> ConstDecl SEMICOLON .)
    VAR             reduce using rule 116 (ColonConstDecl -> ConstDecl SEMICOLON .)


state 85

    (117) ConstDecl -> ID EQUALS . ConstExpr
    (131) ConstExpr -> . NUMBER

    NUMBER          shift and go to state 134

    ConstExpr                      shift and go to state 135

state 86

    (118) ConstDecl -> ID COLON . TypeID EQUALS TypedConst
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 136

state 87

    (12) StmtList -> Statement StmtList .

    END             reduce using rule 12 (StmtList -> Statement StmtList .)


state 88

    (14) Statement -> SimpleStatement SEMICOLON .

    INHERITED       reduce using rule 14 (Statement -> SimpleStatement SEMICOLON .)
    LPAREN          reduce using rule 14 (Statement -> SimpleStatement SEMICOLON .)
    BREAK           reduce using rule 14 (Statement -> SimpleStatement SEMICOLON .)
    CONTINUE        reduce using rule 14 (Statement -> SimpleStatement SEMICOLON .)
    ID              reduce using rule 14 (Statement -> SimpleStatement SEMICOLON .)
    BEGIN           reduce using rule 14 (Statement -> SimpleStatement SEMICOLON .)
    IF              reduce using rule 14 (Statement -> SimpleStatement SEMICOLON .)
    CASE            reduce using rule 14 (Statement -> SimpleStatement SEMICOLON .)
    REPEAT          reduce using rule 14 (Statement -> SimpleStatement SEMICOLON .)
    WHILE           reduce using rule 14 (Statement -> SimpleStatement SEMICOLON .)
    END             reduce using rule 14 (Statement -> SimpleStatement SEMICOLON .)
    ELSE            reduce using rule 14 (Statement -> SimpleStatement SEMICOLON .)
    SEMICOLON       reduce using rule 14 (Statement -> SimpleStatement SEMICOLON .)
    UNTIL           reduce using rule 14 (Statement -> SimpleStatement SEMICOLON .)


state 89

    (11) CompoundStmt -> BEGIN StmtList END . SEMICOLON

    SEMICOLON       shift and go to state 137


state 90

    (60) Factor -> TypeID . LPAREN Expression RPAREN

    LPAREN          shift and go to state 138


state 91

    (56) Factor -> LPAREN . Expression RPAREN
    (40) Expression -> . SimpleExpression RelSimpleStar
    (41) Expression -> . LambFunc
    (44) SimpleExpression -> . PLUS Term AddTermStar
    (45) SimpleExpression -> . MINUS Term AddTermStar
    (46) SimpleExpression -> . Term AddTermStar
    (160) LambFunc -> . LAMBDA ID COLON SimpleExpression
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 97
    MINUS           shift and go to state 94
    LAMBDA          shift and go to state 104
    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 99
    LambFunc                       shift and go to state 95
    Designator                     shift and go to state 96
    Factor                         shift and go to state 93
    SimpleExpression               shift and go to state 98
    Expression                     shift and go to state 139

state 92

    (55) Factor -> NUMBER .

    MULTIPLY        reduce using rule 55 (Factor -> NUMBER .)
    DIVIDE          reduce using rule 55 (Factor -> NUMBER .)
    DIV             reduce using rule 55 (Factor -> NUMBER .)
    MOD             reduce using rule 55 (Factor -> NUMBER .)
    AND             reduce using rule 55 (Factor -> NUMBER .)
    SHL             reduce using rule 55 (Factor -> NUMBER .)
    SHR             reduce using rule 55 (Factor -> NUMBER .)
    DOUBLESTAR      reduce using rule 55 (Factor -> NUMBER .)
    PLUS            reduce using rule 55 (Factor -> NUMBER .)
    MINUS           reduce using rule 55 (Factor -> NUMBER .)
    OR              reduce using rule 55 (Factor -> NUMBER .)
    XOR             reduce using rule 55 (Factor -> NUMBER .)
    LANGLE          reduce using rule 55 (Factor -> NUMBER .)
    RANGLE          reduce using rule 55 (Factor -> NUMBER .)
    GEQ             reduce using rule 55 (Factor -> NUMBER .)
    LEQ             reduce using rule 55 (Factor -> NUMBER .)
    NOTEQUALS       reduce using rule 55 (Factor -> NUMBER .)
    EQUALS          reduce using rule 55 (Factor -> NUMBER .)
    OF              reduce using rule 55 (Factor -> NUMBER .)
    RPAREN          reduce using rule 55 (Factor -> NUMBER .)
    THEN            reduce using rule 55 (Factor -> NUMBER .)
    DO              reduce using rule 55 (Factor -> NUMBER .)
    SEMICOLON       reduce using rule 55 (Factor -> NUMBER .)
    COMMA           reduce using rule 55 (Factor -> NUMBER .)
    RSQUARE         reduce using rule 55 (Factor -> NUMBER .)


state 93

    (49) Term -> Factor . MulFacStar
    (50) MulFacStar -> . MulOp Factor MulFacStar
    (51) MulFacStar -> .
    (97) MulOp -> . MULTIPLY
    (98) MulOp -> . DIVIDE
    (99) MulOp -> . DIV
    (100) MulOp -> . MOD
    (101) MulOp -> . AND
    (102) MulOp -> . SHL
    (103) MulOp -> . SHR
    (104) MulOp -> . DOUBLESTAR

    PLUS            reduce using rule 51 (MulFacStar -> .)
    MINUS           reduce using rule 51 (MulFacStar -> .)
    OR              reduce using rule 51 (MulFacStar -> .)
    XOR             reduce using rule 51 (MulFacStar -> .)
    LANGLE          reduce using rule 51 (MulFacStar -> .)
    RANGLE          reduce using rule 51 (MulFacStar -> .)
    GEQ             reduce using rule 51 (MulFacStar -> .)
    LEQ             reduce using rule 51 (MulFacStar -> .)
    NOTEQUALS       reduce using rule 51 (MulFacStar -> .)
    EQUALS          reduce using rule 51 (MulFacStar -> .)
    OF              reduce using rule 51 (MulFacStar -> .)
    RPAREN          reduce using rule 51 (MulFacStar -> .)
    THEN            reduce using rule 51 (MulFacStar -> .)
    DO              reduce using rule 51 (MulFacStar -> .)
    SEMICOLON       reduce using rule 51 (MulFacStar -> .)
    COMMA           reduce using rule 51 (MulFacStar -> .)
    RSQUARE         reduce using rule 51 (MulFacStar -> .)
    MULTIPLY        shift and go to state 145
    DIVIDE          shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 149
    AND             shift and go to state 140
    SHL             shift and go to state 148
    SHR             shift and go to state 143
    DOUBLESTAR      shift and go to state 146

    MulFacStar                     shift and go to state 141
    MulOp                          shift and go to state 144

state 94

    (45) SimpleExpression -> MINUS . Term AddTermStar
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 150
    Designator                     shift and go to state 96
    Factor                         shift and go to state 93

state 95

    (41) Expression -> LambFunc .

    RPAREN          reduce using rule 41 (Expression -> LambFunc .)
    COMMA           reduce using rule 41 (Expression -> LambFunc .)
    RSQUARE         reduce using rule 41 (Expression -> LambFunc .)
    THEN            reduce using rule 41 (Expression -> LambFunc .)
    SEMICOLON       reduce using rule 41 (Expression -> LambFunc .)
    OF              reduce using rule 41 (Expression -> LambFunc .)
    DO              reduce using rule 41 (Expression -> LambFunc .)


state 96

    (52) Factor -> Designator .
    (53) Factor -> Designator . LPAREN ExprList RPAREN

    MULTIPLY        reduce using rule 52 (Factor -> Designator .)
    DIVIDE          reduce using rule 52 (Factor -> Designator .)
    DIV             reduce using rule 52 (Factor -> Designator .)
    MOD             reduce using rule 52 (Factor -> Designator .)
    AND             reduce using rule 52 (Factor -> Designator .)
    SHL             reduce using rule 52 (Factor -> Designator .)
    SHR             reduce using rule 52 (Factor -> Designator .)
    DOUBLESTAR      reduce using rule 52 (Factor -> Designator .)
    PLUS            reduce using rule 52 (Factor -> Designator .)
    MINUS           reduce using rule 52 (Factor -> Designator .)
    OR              reduce using rule 52 (Factor -> Designator .)
    XOR             reduce using rule 52 (Factor -> Designator .)
    LANGLE          reduce using rule 52 (Factor -> Designator .)
    RANGLE          reduce using rule 52 (Factor -> Designator .)
    GEQ             reduce using rule 52 (Factor -> Designator .)
    LEQ             reduce using rule 52 (Factor -> Designator .)
    NOTEQUALS       reduce using rule 52 (Factor -> Designator .)
    EQUALS          reduce using rule 52 (Factor -> Designator .)
    OF              reduce using rule 52 (Factor -> Designator .)
    RPAREN          reduce using rule 52 (Factor -> Designator .)
    THEN            reduce using rule 52 (Factor -> Designator .)
    DO              reduce using rule 52 (Factor -> Designator .)
    SEMICOLON       reduce using rule 52 (Factor -> Designator .)
    COMMA           reduce using rule 52 (Factor -> Designator .)
    RSQUARE         reduce using rule 52 (Factor -> Designator .)
    LPAREN          shift and go to state 151


state 97

    (44) SimpleExpression -> PLUS . Term AddTermStar
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 152
    Designator                     shift and go to state 96
    Factor                         shift and go to state 93

state 98

    (40) Expression -> SimpleExpression . RelSimpleStar
    (42) RelSimpleStar -> . RelOp SimpleExpression RelSimpleStar
    (43) RelSimpleStar -> .
    (87) RelOp -> . LANGLE
    (88) RelOp -> . RANGLE
    (89) RelOp -> . GEQ
    (90) RelOp -> . LEQ
    (91) RelOp -> . NOTEQUALS
    (92) RelOp -> . EQUALS

    OF              reduce using rule 43 (RelSimpleStar -> .)
    RPAREN          reduce using rule 43 (RelSimpleStar -> .)
    THEN            reduce using rule 43 (RelSimpleStar -> .)
    DO              reduce using rule 43 (RelSimpleStar -> .)
    SEMICOLON       reduce using rule 43 (RelSimpleStar -> .)
    COMMA           reduce using rule 43 (RelSimpleStar -> .)
    RSQUARE         reduce using rule 43 (RelSimpleStar -> .)
    LANGLE          shift and go to state 155
    RANGLE          shift and go to state 160
    GEQ             shift and go to state 154
    LEQ             shift and go to state 158
    NOTEQUALS       shift and go to state 153
    EQUALS          shift and go to state 157

    RelOp                          shift and go to state 156
    RelSimpleStar                  shift and go to state 159

state 99

    (46) SimpleExpression -> Term . AddTermStar
    (47) AddTermStar -> . AddOp Term AddTermStar
    (48) AddTermStar -> .
    (93) AddOp -> . PLUS
    (94) AddOp -> . MINUS
    (95) AddOp -> . OR
    (96) AddOp -> . XOR

    LANGLE          reduce using rule 48 (AddTermStar -> .)
    RANGLE          reduce using rule 48 (AddTermStar -> .)
    GEQ             reduce using rule 48 (AddTermStar -> .)
    LEQ             reduce using rule 48 (AddTermStar -> .)
    NOTEQUALS       reduce using rule 48 (AddTermStar -> .)
    EQUALS          reduce using rule 48 (AddTermStar -> .)
    OF              reduce using rule 48 (AddTermStar -> .)
    RPAREN          reduce using rule 48 (AddTermStar -> .)
    THEN            reduce using rule 48 (AddTermStar -> .)
    DO              reduce using rule 48 (AddTermStar -> .)
    SEMICOLON       reduce using rule 48 (AddTermStar -> .)
    COMMA           reduce using rule 48 (AddTermStar -> .)
    RSQUARE         reduce using rule 48 (AddTermStar -> .)
    PLUS            shift and go to state 165
    MINUS           shift and go to state 166
    OR              shift and go to state 164
    XOR             shift and go to state 162

    AddOp                          shift and go to state 161
    AddTermStar                    shift and go to state 163

state 100

    (54) Factor -> USERSTRING .

    MULTIPLY        reduce using rule 54 (Factor -> USERSTRING .)
    DIVIDE          reduce using rule 54 (Factor -> USERSTRING .)
    DIV             reduce using rule 54 (Factor -> USERSTRING .)
    MOD             reduce using rule 54 (Factor -> USERSTRING .)
    AND             reduce using rule 54 (Factor -> USERSTRING .)
    SHL             reduce using rule 54 (Factor -> USERSTRING .)
    SHR             reduce using rule 54 (Factor -> USERSTRING .)
    DOUBLESTAR      reduce using rule 54 (Factor -> USERSTRING .)
    PLUS            reduce using rule 54 (Factor -> USERSTRING .)
    MINUS           reduce using rule 54 (Factor -> USERSTRING .)
    OR              reduce using rule 54 (Factor -> USERSTRING .)
    XOR             reduce using rule 54 (Factor -> USERSTRING .)
    LANGLE          reduce using rule 54 (Factor -> USERSTRING .)
    RANGLE          reduce using rule 54 (Factor -> USERSTRING .)
    GEQ             reduce using rule 54 (Factor -> USERSTRING .)
    LEQ             reduce using rule 54 (Factor -> USERSTRING .)
    NOTEQUALS       reduce using rule 54 (Factor -> USERSTRING .)
    EQUALS          reduce using rule 54 (Factor -> USERSTRING .)
    OF              reduce using rule 54 (Factor -> USERSTRING .)
    RPAREN          reduce using rule 54 (Factor -> USERSTRING .)
    THEN            reduce using rule 54 (Factor -> USERSTRING .)
    DO              reduce using rule 54 (Factor -> USERSTRING .)
    SEMICOLON       reduce using rule 54 (Factor -> USERSTRING .)
    COMMA           reduce using rule 54 (Factor -> USERSTRING .)
    RSQUARE         reduce using rule 54 (Factor -> USERSTRING .)


state 101

    (58) Factor -> INHERITED . Designator
    (59) Factor -> INHERITED .
    (108) Designator -> . ID DesSubEleStar

    MULTIPLY        reduce using rule 59 (Factor -> INHERITED .)
    DIVIDE          reduce using rule 59 (Factor -> INHERITED .)
    DIV             reduce using rule 59 (Factor -> INHERITED .)
    MOD             reduce using rule 59 (Factor -> INHERITED .)
    AND             reduce using rule 59 (Factor -> INHERITED .)
    SHL             reduce using rule 59 (Factor -> INHERITED .)
    SHR             reduce using rule 59 (Factor -> INHERITED .)
    DOUBLESTAR      reduce using rule 59 (Factor -> INHERITED .)
    PLUS            reduce using rule 59 (Factor -> INHERITED .)
    MINUS           reduce using rule 59 (Factor -> INHERITED .)
    OR              reduce using rule 59 (Factor -> INHERITED .)
    XOR             reduce using rule 59 (Factor -> INHERITED .)
    LANGLE          reduce using rule 59 (Factor -> INHERITED .)
    RANGLE          reduce using rule 59 (Factor -> INHERITED .)
    GEQ             reduce using rule 59 (Factor -> INHERITED .)
    LEQ             reduce using rule 59 (Factor -> INHERITED .)
    NOTEQUALS       reduce using rule 59 (Factor -> INHERITED .)
    EQUALS          reduce using rule 59 (Factor -> INHERITED .)
    OF              reduce using rule 59 (Factor -> INHERITED .)
    RPAREN          reduce using rule 59 (Factor -> INHERITED .)
    THEN            reduce using rule 59 (Factor -> INHERITED .)
    DO              reduce using rule 59 (Factor -> INHERITED .)
    SEMICOLON       reduce using rule 59 (Factor -> INHERITED .)
    COMMA           reduce using rule 59 (Factor -> INHERITED .)
    RSQUARE         reduce using rule 59 (Factor -> INHERITED .)
    ID              shift and go to state 36

    Designator                     shift and go to state 167

state 102

    (30) CaseStmt -> CASE Expression . OF CaseSelector ColonCaseSelector END
    (31) CaseStmt -> CASE Expression . OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END

    OF              shift and go to state 168


state 103

    (57) Factor -> NOT . Factor
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Designator                     shift and go to state 96
    Factor                         shift and go to state 169

state 104

    (160) LambFunc -> LAMBDA . ID COLON SimpleExpression

    ID              shift and go to state 170


state 105

    (18) SimpleStatement -> Designator ASSIGNTO . Expression
    (40) Expression -> . SimpleExpression RelSimpleStar
    (41) Expression -> . LambFunc
    (44) SimpleExpression -> . PLUS Term AddTermStar
    (45) SimpleExpression -> . MINUS Term AddTermStar
    (46) SimpleExpression -> . Term AddTermStar
    (160) LambFunc -> . LAMBDA ID COLON SimpleExpression
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 97
    MINUS           shift and go to state 94
    LAMBDA          shift and go to state 104
    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 99
    LambFunc                       shift and go to state 95
    Designator                     shift and go to state 96
    Factor                         shift and go to state 93
    SimpleExpression               shift and go to state 98
    Expression                     shift and go to state 171

state 106

    (17) SimpleStatement -> Designator LPAREN . ExprList RPAREN
    (107) ExprList -> . Expression CommaExpression
    (40) Expression -> . SimpleExpression RelSimpleStar
    (41) Expression -> . LambFunc
    (44) SimpleExpression -> . PLUS Term AddTermStar
    (45) SimpleExpression -> . MINUS Term AddTermStar
    (46) SimpleExpression -> . Term AddTermStar
    (160) LambFunc -> . LAMBDA ID COLON SimpleExpression
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 97
    MINUS           shift and go to state 94
    LAMBDA          shift and go to state 104
    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 99
    LambFunc                       shift and go to state 95
    Designator                     shift and go to state 96
    SimpleExpression               shift and go to state 98
    Factor                         shift and go to state 93
    Expression                     shift and go to state 173
    ExprList                       shift and go to state 172

state 107

    (20) SimpleStatement -> LPAREN Expression . RPAREN

    RPAREN          shift and go to state 174


state 108

    (28) IfStmt -> IF Expression . THEN CompoundStmt ELSE CompoundStmt
    (29) IfStmt -> IF Expression . THEN CompoundStmt

    THEN            shift and go to state 175


state 109

    (38) RepeatStmt -> REPEAT Statement . UNTIL Expression SEMICOLON

    UNTIL           shift and go to state 176


state 110

    (39) WhileStmt -> WHILE Expression . DO CompoundStmt

    DO              shift and go to state 177


state 111

    (152) FuncDecl -> FuncHeading SEMICOLON Block .

    BEGIN           reduce using rule 152 (FuncDecl -> FuncHeading SEMICOLON Block .)
    CONSTANT        reduce using rule 152 (FuncDecl -> FuncHeading SEMICOLON Block .)
    TYPE            reduce using rule 152 (FuncDecl -> FuncHeading SEMICOLON Block .)
    VAR             reduce using rule 152 (FuncDecl -> FuncHeading SEMICOLON Block .)
    PROCEDURE       reduce using rule 152 (FuncDecl -> FuncHeading SEMICOLON Block .)
    FUNCTION        reduce using rule 152 (FuncDecl -> FuncHeading SEMICOLON Block .)
    CONSTRUCTOR     reduce using rule 152 (FuncDecl -> FuncHeading SEMICOLON Block .)


state 112

    (158) ProcedureHeading -> PROCEDURE Designator FormalParams .

    SEMICOLON       reduce using rule 158 (ProcedureHeading -> PROCEDURE Designator FormalParams .)
    RPAREN          reduce using rule 158 (ProcedureHeading -> PROCEDURE Designator FormalParams .)


state 113

    (153) FuncHeading -> FUNCTION Designator FormalParams . COLON Type

    COLON           shift and go to state 178


state 114

    (143) ColonVarDecl -> ColonVarDecl VarDecl . SEMICOLON

    SEMICOLON       shift and go to state 179


state 115

    (145) VarDecl -> IdentList COLON . Type
    (61) Type -> . TypeID
    (62) Type -> . SimpleType
    (63) Type -> . PointerType
    (64) Type -> . StringType
    (65) Type -> . ProcedureType
    (66) Type -> . Array
    (67) Type -> . ID
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR
    (68) SimpleType -> . DOUBLE
    (69) PointerType -> . POWER ID
    (70) StringType -> . STRING
    (71) ProcedureType -> . ProcedureHeading
    (72) ProcedureType -> . FuncHeading
    (121) Array -> . ARRAY LSQUARE ArrayBetween RSQUARE OF TypeArray
    (158) ProcedureHeading -> . PROCEDURE Designator FormalParams
    (153) FuncHeading -> . FUNCTION Designator FormalParams COLON Type

    ID              shift and go to state 190
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77
    DOUBLE          shift and go to state 191
    POWER           shift and go to state 187
    STRING          shift and go to state 189
    ARRAY           shift and go to state 188
    PROCEDURE       shift and go to state 20
    FUNCTION        shift and go to state 22

    TypeID                         shift and go to state 180
    ProcedureType                  shift and go to state 184
    SimpleType                     shift and go to state 186
    StringType                     shift and go to state 183
    FuncHeading                    shift and go to state 185
    ProcedureHeading               shift and go to state 181
    PointerType                    shift and go to state 192
    Array                          shift and go to state 193
    Type                           shift and go to state 182

state 116

    (144) ColonVarDecl -> VarDecl SEMICOLON .

    ID              reduce using rule 144 (ColonVarDecl -> VarDecl SEMICOLON .)
    PROCEDURE       reduce using rule 144 (ColonVarDecl -> VarDecl SEMICOLON .)
    FUNCTION        reduce using rule 144 (ColonVarDecl -> VarDecl SEMICOLON .)
    CONSTRUCTOR     reduce using rule 144 (ColonVarDecl -> VarDecl SEMICOLON .)
    END             reduce using rule 144 (ColonVarDecl -> VarDecl SEMICOLON .)
    BEGIN           reduce using rule 144 (ColonVarDecl -> VarDecl SEMICOLON .)
    CONSTANT        reduce using rule 144 (ColonVarDecl -> VarDecl SEMICOLON .)
    TYPE            reduce using rule 144 (ColonVarDecl -> VarDecl SEMICOLON .)
    VAR             reduce using rule 144 (ColonVarDecl -> VarDecl SEMICOLON .)


state 117

    (149) ConstrucDecl -> ConstrucHeading SEMICOLON Block .

    BEGIN           reduce using rule 149 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)
    CONSTANT        reduce using rule 149 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)
    TYPE            reduce using rule 149 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)
    VAR             reduce using rule 149 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)
    PROCEDURE       reduce using rule 149 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)
    FUNCTION        reduce using rule 149 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)
    CONSTRUCTOR     reduce using rule 149 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)


state 118

    (80) ColonTypeDecl -> TypeDecl SEMICOLON .

    ID              reduce using rule 80 (ColonTypeDecl -> TypeDecl SEMICOLON .)
    PROCEDURE       reduce using rule 80 (ColonTypeDecl -> TypeDecl SEMICOLON .)
    FUNCTION        reduce using rule 80 (ColonTypeDecl -> TypeDecl SEMICOLON .)
    CONSTRUCTOR     reduce using rule 80 (ColonTypeDecl -> TypeDecl SEMICOLON .)
    END             reduce using rule 80 (ColonTypeDecl -> TypeDecl SEMICOLON .)
    BEGIN           reduce using rule 80 (ColonTypeDecl -> TypeDecl SEMICOLON .)
    CONSTANT        reduce using rule 80 (ColonTypeDecl -> TypeDecl SEMICOLON .)
    TYPE            reduce using rule 80 (ColonTypeDecl -> TypeDecl SEMICOLON .)
    VAR             reduce using rule 80 (ColonTypeDecl -> TypeDecl SEMICOLON .)


state 119

    (79) ColonTypeDecl -> ColonTypeDecl TypeDecl . SEMICOLON

    SEMICOLON       shift and go to state 194


state 120

    (81) TypeDecl -> ID EQUALS . Type
    (82) TypeDecl -> ID EQUALS . RestrictedType
    (83) TypeDecl -> ID EQUALS . TYPE Type
    (84) TypeDecl -> ID EQUALS . TYPE RestrictedType
    (61) Type -> . TypeID
    (62) Type -> . SimpleType
    (63) Type -> . PointerType
    (64) Type -> . StringType
    (65) Type -> . ProcedureType
    (66) Type -> . Array
    (67) Type -> . ID
    (85) RestrictedType -> . ObjectType
    (86) RestrictedType -> . ClassType
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR
    (68) SimpleType -> . DOUBLE
    (69) PointerType -> . POWER ID
    (70) StringType -> . STRING
    (71) ProcedureType -> . ProcedureHeading
    (72) ProcedureType -> . FuncHeading
    (121) Array -> . ARRAY LSQUARE ArrayBetween RSQUARE OF TypeArray
    (161) ObjectType -> . OBJECT ObjectHeritage ObjectVis ObjectBody END
    (179) ClassType -> . CLASS ClassHeritage ClassVis ClassBody END
    (158) ProcedureHeading -> . PROCEDURE Designator FormalParams
    (153) FuncHeading -> . FUNCTION Designator FormalParams COLON Type

    TYPE            shift and go to state 201
    ID              shift and go to state 190
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77
    DOUBLE          shift and go to state 191
    POWER           shift and go to state 187
    STRING          shift and go to state 189
    ARRAY           shift and go to state 188
    OBJECT          shift and go to state 195
    CLASS           shift and go to state 197
    PROCEDURE       shift and go to state 20
    FUNCTION        shift and go to state 22

    TypeID                         shift and go to state 180
    ProcedureHeading               shift and go to state 181
    Type                           shift and go to state 196
    StringType                     shift and go to state 183
    ProcedureType                  shift and go to state 184
    FuncHeading                    shift and go to state 185
    SimpleType                     shift and go to state 186
    ObjectType                     shift and go to state 198
    RestrictedType                 shift and go to state 199
    PointerType                    shift and go to state 192
    ClassType                      shift and go to state 200
    Array                          shift and go to state 193

state 121

    (3) Program -> PROGRAM ID LPAREN IdentList RPAREN SEMICOLON Block .

    $end            reduce using rule 3 (Program -> PROGRAM ID LPAREN IdentList RPAREN SEMICOLON Block .)


state 122

    (135) CommaIDTypeArgs -> COMMA ID CommaIDTypeArgs .

    RPAREN          reduce using rule 135 (CommaIDTypeArgs -> COMMA ID CommaIDTypeArgs .)
    COLON           reduce using rule 135 (CommaIDTypeArgs -> COMMA ID CommaIDTypeArgs .)
    SEMICOLON       reduce using rule 135 (CommaIDTypeArgs -> COMMA ID CommaIDTypeArgs .)


state 123

    (134) CommaIDTypeArgs -> COMMA ID TypeArgs . CommaIDTypeArgs
    (134) CommaIDTypeArgs -> . COMMA ID TypeArgs CommaIDTypeArgs
    (135) CommaIDTypeArgs -> . COMMA ID CommaIDTypeArgs
    (136) CommaIDTypeArgs -> .

    COMMA           shift and go to state 33
    RPAREN          reduce using rule 136 (CommaIDTypeArgs -> .)
    COLON           reduce using rule 136 (CommaIDTypeArgs -> .)
    SEMICOLON       reduce using rule 136 (CommaIDTypeArgs -> .)

    CommaIDTypeArgs                shift and go to state 202

state 124

    (73) TypeArgs -> LPAREN TypeID RPAREN .

    COMMA           reduce using rule 73 (TypeArgs -> LPAREN TypeID RPAREN .)
    RPAREN          reduce using rule 73 (TypeArgs -> LPAREN TypeID RPAREN .)
    COLON           reduce using rule 73 (TypeArgs -> LPAREN TypeID RPAREN .)
    SEMICOLON       reduce using rule 73 (TypeArgs -> LPAREN TypeID RPAREN .)


state 125

    (74) TypeArgs -> LPAREN STRING RPAREN .

    COMMA           reduce using rule 74 (TypeArgs -> LPAREN STRING RPAREN .)
    RPAREN          reduce using rule 74 (TypeArgs -> LPAREN STRING RPAREN .)
    COLON           reduce using rule 74 (TypeArgs -> LPAREN STRING RPAREN .)
    SEMICOLON       reduce using rule 74 (TypeArgs -> LPAREN STRING RPAREN .)


state 126

    (140) ParamIdent -> IdentList . COLON Type
    (141) ParamIdent -> IdentList .

    COLON           shift and go to state 203
    SEMICOLON       reduce using rule 141 (ParamIdent -> IdentList .)
    RPAREN          reduce using rule 141 (ParamIdent -> IdentList .)


state 127

    (137) ParamIdentList -> ParamIdent . SEMICOLON ParamIdentList
    (138) ParamIdentList -> ParamIdent .

    SEMICOLON       shift and go to state 204
    RPAREN          reduce using rule 138 (ParamIdentList -> ParamIdent .)


state 128

    (155) FormalParams -> LPAREN ParamIdentList . RPAREN

    RPAREN          shift and go to state 205


state 129

    (113) DesignatorSubElem -> POWER .

    DOT             reduce using rule 113 (DesignatorSubElem -> POWER .)
    LSQUARE         reduce using rule 113 (DesignatorSubElem -> POWER .)
    POWER           reduce using rule 113 (DesignatorSubElem -> POWER .)
    LPAREN          reduce using rule 113 (DesignatorSubElem -> POWER .)
    SEMICOLON       reduce using rule 113 (DesignatorSubElem -> POWER .)
    ASSIGNTO        reduce using rule 113 (DesignatorSubElem -> POWER .)
    RPAREN          reduce using rule 113 (DesignatorSubElem -> POWER .)
    COLON           reduce using rule 113 (DesignatorSubElem -> POWER .)
    MULTIPLY        reduce using rule 113 (DesignatorSubElem -> POWER .)
    DIVIDE          reduce using rule 113 (DesignatorSubElem -> POWER .)
    DIV             reduce using rule 113 (DesignatorSubElem -> POWER .)
    MOD             reduce using rule 113 (DesignatorSubElem -> POWER .)
    AND             reduce using rule 113 (DesignatorSubElem -> POWER .)
    SHL             reduce using rule 113 (DesignatorSubElem -> POWER .)
    SHR             reduce using rule 113 (DesignatorSubElem -> POWER .)
    DOUBLESTAR      reduce using rule 113 (DesignatorSubElem -> POWER .)
    PLUS            reduce using rule 113 (DesignatorSubElem -> POWER .)
    MINUS           reduce using rule 113 (DesignatorSubElem -> POWER .)
    OR              reduce using rule 113 (DesignatorSubElem -> POWER .)
    XOR             reduce using rule 113 (DesignatorSubElem -> POWER .)
    LANGLE          reduce using rule 113 (DesignatorSubElem -> POWER .)
    RANGLE          reduce using rule 113 (DesignatorSubElem -> POWER .)
    GEQ             reduce using rule 113 (DesignatorSubElem -> POWER .)
    LEQ             reduce using rule 113 (DesignatorSubElem -> POWER .)
    NOTEQUALS       reduce using rule 113 (DesignatorSubElem -> POWER .)
    EQUALS          reduce using rule 113 (DesignatorSubElem -> POWER .)
    OF              reduce using rule 113 (DesignatorSubElem -> POWER .)
    THEN            reduce using rule 113 (DesignatorSubElem -> POWER .)
    DO              reduce using rule 113 (DesignatorSubElem -> POWER .)
    COMMA           reduce using rule 113 (DesignatorSubElem -> POWER .)
    RSQUARE         reduce using rule 113 (DesignatorSubElem -> POWER .)


state 130

    (112) DesignatorSubElem -> LSQUARE . ExprList RSQUARE
    (107) ExprList -> . Expression CommaExpression
    (40) Expression -> . SimpleExpression RelSimpleStar
    (41) Expression -> . LambFunc
    (44) SimpleExpression -> . PLUS Term AddTermStar
    (45) SimpleExpression -> . MINUS Term AddTermStar
    (46) SimpleExpression -> . Term AddTermStar
    (160) LambFunc -> . LAMBDA ID COLON SimpleExpression
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 97
    MINUS           shift and go to state 94
    LAMBDA          shift and go to state 104
    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 99
    LambFunc                       shift and go to state 95
    Designator                     shift and go to state 96
    SimpleExpression               shift and go to state 98
    Factor                         shift and go to state 93
    Expression                     shift and go to state 173
    ExprList                       shift and go to state 206

state 131

    (109) DesSubEleStar -> DesSubEleStar DesignatorSubElem .

    DOT             reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    LSQUARE         reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    POWER           reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    LPAREN          reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    SEMICOLON       reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    ASSIGNTO        reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    RPAREN          reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    COLON           reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    MULTIPLY        reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    DIVIDE          reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    DIV             reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    MOD             reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    AND             reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    SHL             reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    SHR             reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    DOUBLESTAR      reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    PLUS            reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    MINUS           reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    OR              reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    XOR             reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    LANGLE          reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    RANGLE          reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    GEQ             reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    LEQ             reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    NOTEQUALS       reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    EQUALS          reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    OF              reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    THEN            reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    DO              reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    COMMA           reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    RSQUARE         reduce using rule 109 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)


state 132

    (111) DesignatorSubElem -> DOT . ID

    ID              shift and go to state 207


state 133

    (115) ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .

    ID              reduce using rule 115 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    PROCEDURE       reduce using rule 115 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    FUNCTION        reduce using rule 115 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    CONSTRUCTOR     reduce using rule 115 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    END             reduce using rule 115 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    BEGIN           reduce using rule 115 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    CONSTANT        reduce using rule 115 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    TYPE            reduce using rule 115 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    VAR             reduce using rule 115 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)


state 134

    (131) ConstExpr -> NUMBER .

    SEMICOLON       reduce using rule 131 (ConstExpr -> NUMBER .)
    COMMA           reduce using rule 131 (ConstExpr -> NUMBER .)
    RPAREN          reduce using rule 131 (ConstExpr -> NUMBER .)


state 135

    (117) ConstDecl -> ID EQUALS ConstExpr .

    SEMICOLON       reduce using rule 117 (ConstDecl -> ID EQUALS ConstExpr .)


state 136

    (118) ConstDecl -> ID COLON TypeID . EQUALS TypedConst

    EQUALS          shift and go to state 208


state 137

    (11) CompoundStmt -> BEGIN StmtList END SEMICOLON .

    SEMICOLON       reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    INHERITED       reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    LPAREN          reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    BREAK           reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    CONTINUE        reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    ID              reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    BEGIN           reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    IF              reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    CASE            reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    REPEAT          reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    WHILE           reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    END             reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    UNTIL           reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    ELSE            reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    $end            reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    CONSTANT        reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    TYPE            reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    VAR             reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    PROCEDURE       reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    FUNCTION        reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    CONSTRUCTOR     reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)


state 138

    (60) Factor -> TypeID LPAREN . Expression RPAREN
    (40) Expression -> . SimpleExpression RelSimpleStar
    (41) Expression -> . LambFunc
    (44) SimpleExpression -> . PLUS Term AddTermStar
    (45) SimpleExpression -> . MINUS Term AddTermStar
    (46) SimpleExpression -> . Term AddTermStar
    (160) LambFunc -> . LAMBDA ID COLON SimpleExpression
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 97
    MINUS           shift and go to state 94
    LAMBDA          shift and go to state 104
    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 99
    LambFunc                       shift and go to state 95
    Designator                     shift and go to state 96
    Factor                         shift and go to state 93
    SimpleExpression               shift and go to state 98
    Expression                     shift and go to state 209

state 139

    (56) Factor -> LPAREN Expression . RPAREN

    RPAREN          shift and go to state 210


state 140

    (101) MulOp -> AND .

    USERSTRING      reduce using rule 101 (MulOp -> AND .)
    NUMBER          reduce using rule 101 (MulOp -> AND .)
    LPAREN          reduce using rule 101 (MulOp -> AND .)
    NOT             reduce using rule 101 (MulOp -> AND .)
    INHERITED       reduce using rule 101 (MulOp -> AND .)
    ID              reduce using rule 101 (MulOp -> AND .)
    INTEGER         reduce using rule 101 (MulOp -> AND .)
    REAL            reduce using rule 101 (MulOp -> AND .)
    CHAR            reduce using rule 101 (MulOp -> AND .)


state 141

    (49) Term -> Factor MulFacStar .

    PLUS            reduce using rule 49 (Term -> Factor MulFacStar .)
    MINUS           reduce using rule 49 (Term -> Factor MulFacStar .)
    OR              reduce using rule 49 (Term -> Factor MulFacStar .)
    XOR             reduce using rule 49 (Term -> Factor MulFacStar .)
    LANGLE          reduce using rule 49 (Term -> Factor MulFacStar .)
    RANGLE          reduce using rule 49 (Term -> Factor MulFacStar .)
    GEQ             reduce using rule 49 (Term -> Factor MulFacStar .)
    LEQ             reduce using rule 49 (Term -> Factor MulFacStar .)
    NOTEQUALS       reduce using rule 49 (Term -> Factor MulFacStar .)
    EQUALS          reduce using rule 49 (Term -> Factor MulFacStar .)
    COMMA           reduce using rule 49 (Term -> Factor MulFacStar .)
    RPAREN          reduce using rule 49 (Term -> Factor MulFacStar .)
    OF              reduce using rule 49 (Term -> Factor MulFacStar .)
    THEN            reduce using rule 49 (Term -> Factor MulFacStar .)
    DO              reduce using rule 49 (Term -> Factor MulFacStar .)
    SEMICOLON       reduce using rule 49 (Term -> Factor MulFacStar .)
    RSQUARE         reduce using rule 49 (Term -> Factor MulFacStar .)


state 142

    (98) MulOp -> DIVIDE .

    USERSTRING      reduce using rule 98 (MulOp -> DIVIDE .)
    NUMBER          reduce using rule 98 (MulOp -> DIVIDE .)
    LPAREN          reduce using rule 98 (MulOp -> DIVIDE .)
    NOT             reduce using rule 98 (MulOp -> DIVIDE .)
    INHERITED       reduce using rule 98 (MulOp -> DIVIDE .)
    ID              reduce using rule 98 (MulOp -> DIVIDE .)
    INTEGER         reduce using rule 98 (MulOp -> DIVIDE .)
    REAL            reduce using rule 98 (MulOp -> DIVIDE .)
    CHAR            reduce using rule 98 (MulOp -> DIVIDE .)


state 143

    (103) MulOp -> SHR .

    USERSTRING      reduce using rule 103 (MulOp -> SHR .)
    NUMBER          reduce using rule 103 (MulOp -> SHR .)
    LPAREN          reduce using rule 103 (MulOp -> SHR .)
    NOT             reduce using rule 103 (MulOp -> SHR .)
    INHERITED       reduce using rule 103 (MulOp -> SHR .)
    ID              reduce using rule 103 (MulOp -> SHR .)
    INTEGER         reduce using rule 103 (MulOp -> SHR .)
    REAL            reduce using rule 103 (MulOp -> SHR .)
    CHAR            reduce using rule 103 (MulOp -> SHR .)


state 144

    (50) MulFacStar -> MulOp . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Designator                     shift and go to state 96
    Factor                         shift and go to state 211

state 145

    (97) MulOp -> MULTIPLY .

    USERSTRING      reduce using rule 97 (MulOp -> MULTIPLY .)
    NUMBER          reduce using rule 97 (MulOp -> MULTIPLY .)
    LPAREN          reduce using rule 97 (MulOp -> MULTIPLY .)
    NOT             reduce using rule 97 (MulOp -> MULTIPLY .)
    INHERITED       reduce using rule 97 (MulOp -> MULTIPLY .)
    ID              reduce using rule 97 (MulOp -> MULTIPLY .)
    INTEGER         reduce using rule 97 (MulOp -> MULTIPLY .)
    REAL            reduce using rule 97 (MulOp -> MULTIPLY .)
    CHAR            reduce using rule 97 (MulOp -> MULTIPLY .)


state 146

    (104) MulOp -> DOUBLESTAR .

    USERSTRING      reduce using rule 104 (MulOp -> DOUBLESTAR .)
    NUMBER          reduce using rule 104 (MulOp -> DOUBLESTAR .)
    LPAREN          reduce using rule 104 (MulOp -> DOUBLESTAR .)
    NOT             reduce using rule 104 (MulOp -> DOUBLESTAR .)
    INHERITED       reduce using rule 104 (MulOp -> DOUBLESTAR .)
    ID              reduce using rule 104 (MulOp -> DOUBLESTAR .)
    INTEGER         reduce using rule 104 (MulOp -> DOUBLESTAR .)
    REAL            reduce using rule 104 (MulOp -> DOUBLESTAR .)
    CHAR            reduce using rule 104 (MulOp -> DOUBLESTAR .)


state 147

    (99) MulOp -> DIV .

    USERSTRING      reduce using rule 99 (MulOp -> DIV .)
    NUMBER          reduce using rule 99 (MulOp -> DIV .)
    LPAREN          reduce using rule 99 (MulOp -> DIV .)
    NOT             reduce using rule 99 (MulOp -> DIV .)
    INHERITED       reduce using rule 99 (MulOp -> DIV .)
    ID              reduce using rule 99 (MulOp -> DIV .)
    INTEGER         reduce using rule 99 (MulOp -> DIV .)
    REAL            reduce using rule 99 (MulOp -> DIV .)
    CHAR            reduce using rule 99 (MulOp -> DIV .)


state 148

    (102) MulOp -> SHL .

    USERSTRING      reduce using rule 102 (MulOp -> SHL .)
    NUMBER          reduce using rule 102 (MulOp -> SHL .)
    LPAREN          reduce using rule 102 (MulOp -> SHL .)
    NOT             reduce using rule 102 (MulOp -> SHL .)
    INHERITED       reduce using rule 102 (MulOp -> SHL .)
    ID              reduce using rule 102 (MulOp -> SHL .)
    INTEGER         reduce using rule 102 (MulOp -> SHL .)
    REAL            reduce using rule 102 (MulOp -> SHL .)
    CHAR            reduce using rule 102 (MulOp -> SHL .)


state 149

    (100) MulOp -> MOD .

    USERSTRING      reduce using rule 100 (MulOp -> MOD .)
    NUMBER          reduce using rule 100 (MulOp -> MOD .)
    LPAREN          reduce using rule 100 (MulOp -> MOD .)
    NOT             reduce using rule 100 (MulOp -> MOD .)
    INHERITED       reduce using rule 100 (MulOp -> MOD .)
    ID              reduce using rule 100 (MulOp -> MOD .)
    INTEGER         reduce using rule 100 (MulOp -> MOD .)
    REAL            reduce using rule 100 (MulOp -> MOD .)
    CHAR            reduce using rule 100 (MulOp -> MOD .)


state 150

    (45) SimpleExpression -> MINUS Term . AddTermStar
    (47) AddTermStar -> . AddOp Term AddTermStar
    (48) AddTermStar -> .
    (93) AddOp -> . PLUS
    (94) AddOp -> . MINUS
    (95) AddOp -> . OR
    (96) AddOp -> . XOR

    LANGLE          reduce using rule 48 (AddTermStar -> .)
    RANGLE          reduce using rule 48 (AddTermStar -> .)
    GEQ             reduce using rule 48 (AddTermStar -> .)
    LEQ             reduce using rule 48 (AddTermStar -> .)
    NOTEQUALS       reduce using rule 48 (AddTermStar -> .)
    EQUALS          reduce using rule 48 (AddTermStar -> .)
    OF              reduce using rule 48 (AddTermStar -> .)
    RPAREN          reduce using rule 48 (AddTermStar -> .)
    THEN            reduce using rule 48 (AddTermStar -> .)
    DO              reduce using rule 48 (AddTermStar -> .)
    SEMICOLON       reduce using rule 48 (AddTermStar -> .)
    COMMA           reduce using rule 48 (AddTermStar -> .)
    RSQUARE         reduce using rule 48 (AddTermStar -> .)
    PLUS            shift and go to state 165
    MINUS           shift and go to state 166
    OR              shift and go to state 164
    XOR             shift and go to state 162

    AddOp                          shift and go to state 161
    AddTermStar                    shift and go to state 212

state 151

    (53) Factor -> Designator LPAREN . ExprList RPAREN
    (107) ExprList -> . Expression CommaExpression
    (40) Expression -> . SimpleExpression RelSimpleStar
    (41) Expression -> . LambFunc
    (44) SimpleExpression -> . PLUS Term AddTermStar
    (45) SimpleExpression -> . MINUS Term AddTermStar
    (46) SimpleExpression -> . Term AddTermStar
    (160) LambFunc -> . LAMBDA ID COLON SimpleExpression
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 97
    MINUS           shift and go to state 94
    LAMBDA          shift and go to state 104
    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 99
    LambFunc                       shift and go to state 95
    Designator                     shift and go to state 96
    SimpleExpression               shift and go to state 98
    Factor                         shift and go to state 93
    Expression                     shift and go to state 173
    ExprList                       shift and go to state 213

state 152

    (44) SimpleExpression -> PLUS Term . AddTermStar
    (47) AddTermStar -> . AddOp Term AddTermStar
    (48) AddTermStar -> .
    (93) AddOp -> . PLUS
    (94) AddOp -> . MINUS
    (95) AddOp -> . OR
    (96) AddOp -> . XOR

    LANGLE          reduce using rule 48 (AddTermStar -> .)
    RANGLE          reduce using rule 48 (AddTermStar -> .)
    GEQ             reduce using rule 48 (AddTermStar -> .)
    LEQ             reduce using rule 48 (AddTermStar -> .)
    NOTEQUALS       reduce using rule 48 (AddTermStar -> .)
    EQUALS          reduce using rule 48 (AddTermStar -> .)
    OF              reduce using rule 48 (AddTermStar -> .)
    RPAREN          reduce using rule 48 (AddTermStar -> .)
    THEN            reduce using rule 48 (AddTermStar -> .)
    DO              reduce using rule 48 (AddTermStar -> .)
    SEMICOLON       reduce using rule 48 (AddTermStar -> .)
    COMMA           reduce using rule 48 (AddTermStar -> .)
    RSQUARE         reduce using rule 48 (AddTermStar -> .)
    PLUS            shift and go to state 165
    MINUS           shift and go to state 166
    OR              shift and go to state 164
    XOR             shift and go to state 162

    AddOp                          shift and go to state 161
    AddTermStar                    shift and go to state 214

state 153

    (91) RelOp -> NOTEQUALS .

    PLUS            reduce using rule 91 (RelOp -> NOTEQUALS .)
    MINUS           reduce using rule 91 (RelOp -> NOTEQUALS .)
    USERSTRING      reduce using rule 91 (RelOp -> NOTEQUALS .)
    NUMBER          reduce using rule 91 (RelOp -> NOTEQUALS .)
    LPAREN          reduce using rule 91 (RelOp -> NOTEQUALS .)
    NOT             reduce using rule 91 (RelOp -> NOTEQUALS .)
    INHERITED       reduce using rule 91 (RelOp -> NOTEQUALS .)
    ID              reduce using rule 91 (RelOp -> NOTEQUALS .)
    INTEGER         reduce using rule 91 (RelOp -> NOTEQUALS .)
    REAL            reduce using rule 91 (RelOp -> NOTEQUALS .)
    CHAR            reduce using rule 91 (RelOp -> NOTEQUALS .)


state 154

    (89) RelOp -> GEQ .

    PLUS            reduce using rule 89 (RelOp -> GEQ .)
    MINUS           reduce using rule 89 (RelOp -> GEQ .)
    USERSTRING      reduce using rule 89 (RelOp -> GEQ .)
    NUMBER          reduce using rule 89 (RelOp -> GEQ .)
    LPAREN          reduce using rule 89 (RelOp -> GEQ .)
    NOT             reduce using rule 89 (RelOp -> GEQ .)
    INHERITED       reduce using rule 89 (RelOp -> GEQ .)
    ID              reduce using rule 89 (RelOp -> GEQ .)
    INTEGER         reduce using rule 89 (RelOp -> GEQ .)
    REAL            reduce using rule 89 (RelOp -> GEQ .)
    CHAR            reduce using rule 89 (RelOp -> GEQ .)


state 155

    (87) RelOp -> LANGLE .

    PLUS            reduce using rule 87 (RelOp -> LANGLE .)
    MINUS           reduce using rule 87 (RelOp -> LANGLE .)
    USERSTRING      reduce using rule 87 (RelOp -> LANGLE .)
    NUMBER          reduce using rule 87 (RelOp -> LANGLE .)
    LPAREN          reduce using rule 87 (RelOp -> LANGLE .)
    NOT             reduce using rule 87 (RelOp -> LANGLE .)
    INHERITED       reduce using rule 87 (RelOp -> LANGLE .)
    ID              reduce using rule 87 (RelOp -> LANGLE .)
    INTEGER         reduce using rule 87 (RelOp -> LANGLE .)
    REAL            reduce using rule 87 (RelOp -> LANGLE .)
    CHAR            reduce using rule 87 (RelOp -> LANGLE .)


state 156

    (42) RelSimpleStar -> RelOp . SimpleExpression RelSimpleStar
    (44) SimpleExpression -> . PLUS Term AddTermStar
    (45) SimpleExpression -> . MINUS Term AddTermStar
    (46) SimpleExpression -> . Term AddTermStar
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 97
    MINUS           shift and go to state 94
    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 99
    Designator                     shift and go to state 96
    Factor                         shift and go to state 93
    SimpleExpression               shift and go to state 215

state 157

    (92) RelOp -> EQUALS .

    PLUS            reduce using rule 92 (RelOp -> EQUALS .)
    MINUS           reduce using rule 92 (RelOp -> EQUALS .)
    USERSTRING      reduce using rule 92 (RelOp -> EQUALS .)
    NUMBER          reduce using rule 92 (RelOp -> EQUALS .)
    LPAREN          reduce using rule 92 (RelOp -> EQUALS .)
    NOT             reduce using rule 92 (RelOp -> EQUALS .)
    INHERITED       reduce using rule 92 (RelOp -> EQUALS .)
    ID              reduce using rule 92 (RelOp -> EQUALS .)
    INTEGER         reduce using rule 92 (RelOp -> EQUALS .)
    REAL            reduce using rule 92 (RelOp -> EQUALS .)
    CHAR            reduce using rule 92 (RelOp -> EQUALS .)


state 158

    (90) RelOp -> LEQ .

    PLUS            reduce using rule 90 (RelOp -> LEQ .)
    MINUS           reduce using rule 90 (RelOp -> LEQ .)
    USERSTRING      reduce using rule 90 (RelOp -> LEQ .)
    NUMBER          reduce using rule 90 (RelOp -> LEQ .)
    LPAREN          reduce using rule 90 (RelOp -> LEQ .)
    NOT             reduce using rule 90 (RelOp -> LEQ .)
    INHERITED       reduce using rule 90 (RelOp -> LEQ .)
    ID              reduce using rule 90 (RelOp -> LEQ .)
    INTEGER         reduce using rule 90 (RelOp -> LEQ .)
    REAL            reduce using rule 90 (RelOp -> LEQ .)
    CHAR            reduce using rule 90 (RelOp -> LEQ .)


state 159

    (40) Expression -> SimpleExpression RelSimpleStar .

    RPAREN          reduce using rule 40 (Expression -> SimpleExpression RelSimpleStar .)
    COMMA           reduce using rule 40 (Expression -> SimpleExpression RelSimpleStar .)
    RSQUARE         reduce using rule 40 (Expression -> SimpleExpression RelSimpleStar .)
    THEN            reduce using rule 40 (Expression -> SimpleExpression RelSimpleStar .)
    SEMICOLON       reduce using rule 40 (Expression -> SimpleExpression RelSimpleStar .)
    OF              reduce using rule 40 (Expression -> SimpleExpression RelSimpleStar .)
    DO              reduce using rule 40 (Expression -> SimpleExpression RelSimpleStar .)


state 160

    (88) RelOp -> RANGLE .

    PLUS            reduce using rule 88 (RelOp -> RANGLE .)
    MINUS           reduce using rule 88 (RelOp -> RANGLE .)
    USERSTRING      reduce using rule 88 (RelOp -> RANGLE .)
    NUMBER          reduce using rule 88 (RelOp -> RANGLE .)
    LPAREN          reduce using rule 88 (RelOp -> RANGLE .)
    NOT             reduce using rule 88 (RelOp -> RANGLE .)
    INHERITED       reduce using rule 88 (RelOp -> RANGLE .)
    ID              reduce using rule 88 (RelOp -> RANGLE .)
    INTEGER         reduce using rule 88 (RelOp -> RANGLE .)
    REAL            reduce using rule 88 (RelOp -> RANGLE .)
    CHAR            reduce using rule 88 (RelOp -> RANGLE .)


state 161

    (47) AddTermStar -> AddOp . Term AddTermStar
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    Term                           shift and go to state 216
    TypeID                         shift and go to state 90
    Designator                     shift and go to state 96
    Factor                         shift and go to state 93

state 162

    (96) AddOp -> XOR .

    USERSTRING      reduce using rule 96 (AddOp -> XOR .)
    NUMBER          reduce using rule 96 (AddOp -> XOR .)
    LPAREN          reduce using rule 96 (AddOp -> XOR .)
    NOT             reduce using rule 96 (AddOp -> XOR .)
    INHERITED       reduce using rule 96 (AddOp -> XOR .)
    ID              reduce using rule 96 (AddOp -> XOR .)
    INTEGER         reduce using rule 96 (AddOp -> XOR .)
    REAL            reduce using rule 96 (AddOp -> XOR .)
    CHAR            reduce using rule 96 (AddOp -> XOR .)


state 163

    (46) SimpleExpression -> Term AddTermStar .

    LANGLE          reduce using rule 46 (SimpleExpression -> Term AddTermStar .)
    RANGLE          reduce using rule 46 (SimpleExpression -> Term AddTermStar .)
    GEQ             reduce using rule 46 (SimpleExpression -> Term AddTermStar .)
    LEQ             reduce using rule 46 (SimpleExpression -> Term AddTermStar .)
    NOTEQUALS       reduce using rule 46 (SimpleExpression -> Term AddTermStar .)
    EQUALS          reduce using rule 46 (SimpleExpression -> Term AddTermStar .)
    COMMA           reduce using rule 46 (SimpleExpression -> Term AddTermStar .)
    RPAREN          reduce using rule 46 (SimpleExpression -> Term AddTermStar .)
    OF              reduce using rule 46 (SimpleExpression -> Term AddTermStar .)
    THEN            reduce using rule 46 (SimpleExpression -> Term AddTermStar .)
    DO              reduce using rule 46 (SimpleExpression -> Term AddTermStar .)
    SEMICOLON       reduce using rule 46 (SimpleExpression -> Term AddTermStar .)
    RSQUARE         reduce using rule 46 (SimpleExpression -> Term AddTermStar .)


state 164

    (95) AddOp -> OR .

    USERSTRING      reduce using rule 95 (AddOp -> OR .)
    NUMBER          reduce using rule 95 (AddOp -> OR .)
    LPAREN          reduce using rule 95 (AddOp -> OR .)
    NOT             reduce using rule 95 (AddOp -> OR .)
    INHERITED       reduce using rule 95 (AddOp -> OR .)
    ID              reduce using rule 95 (AddOp -> OR .)
    INTEGER         reduce using rule 95 (AddOp -> OR .)
    REAL            reduce using rule 95 (AddOp -> OR .)
    CHAR            reduce using rule 95 (AddOp -> OR .)


state 165

    (93) AddOp -> PLUS .

    USERSTRING      reduce using rule 93 (AddOp -> PLUS .)
    NUMBER          reduce using rule 93 (AddOp -> PLUS .)
    LPAREN          reduce using rule 93 (AddOp -> PLUS .)
    NOT             reduce using rule 93 (AddOp -> PLUS .)
    INHERITED       reduce using rule 93 (AddOp -> PLUS .)
    ID              reduce using rule 93 (AddOp -> PLUS .)
    INTEGER         reduce using rule 93 (AddOp -> PLUS .)
    REAL            reduce using rule 93 (AddOp -> PLUS .)
    CHAR            reduce using rule 93 (AddOp -> PLUS .)


state 166

    (94) AddOp -> MINUS .

    USERSTRING      reduce using rule 94 (AddOp -> MINUS .)
    NUMBER          reduce using rule 94 (AddOp -> MINUS .)
    LPAREN          reduce using rule 94 (AddOp -> MINUS .)
    NOT             reduce using rule 94 (AddOp -> MINUS .)
    INHERITED       reduce using rule 94 (AddOp -> MINUS .)
    ID              reduce using rule 94 (AddOp -> MINUS .)
    INTEGER         reduce using rule 94 (AddOp -> MINUS .)
    REAL            reduce using rule 94 (AddOp -> MINUS .)
    CHAR            reduce using rule 94 (AddOp -> MINUS .)


state 167

    (58) Factor -> INHERITED Designator .

    MULTIPLY        reduce using rule 58 (Factor -> INHERITED Designator .)
    DIVIDE          reduce using rule 58 (Factor -> INHERITED Designator .)
    DIV             reduce using rule 58 (Factor -> INHERITED Designator .)
    MOD             reduce using rule 58 (Factor -> INHERITED Designator .)
    AND             reduce using rule 58 (Factor -> INHERITED Designator .)
    SHL             reduce using rule 58 (Factor -> INHERITED Designator .)
    SHR             reduce using rule 58 (Factor -> INHERITED Designator .)
    DOUBLESTAR      reduce using rule 58 (Factor -> INHERITED Designator .)
    PLUS            reduce using rule 58 (Factor -> INHERITED Designator .)
    MINUS           reduce using rule 58 (Factor -> INHERITED Designator .)
    OR              reduce using rule 58 (Factor -> INHERITED Designator .)
    XOR             reduce using rule 58 (Factor -> INHERITED Designator .)
    LANGLE          reduce using rule 58 (Factor -> INHERITED Designator .)
    RANGLE          reduce using rule 58 (Factor -> INHERITED Designator .)
    GEQ             reduce using rule 58 (Factor -> INHERITED Designator .)
    LEQ             reduce using rule 58 (Factor -> INHERITED Designator .)
    NOTEQUALS       reduce using rule 58 (Factor -> INHERITED Designator .)
    EQUALS          reduce using rule 58 (Factor -> INHERITED Designator .)
    OF              reduce using rule 58 (Factor -> INHERITED Designator .)
    RPAREN          reduce using rule 58 (Factor -> INHERITED Designator .)
    THEN            reduce using rule 58 (Factor -> INHERITED Designator .)
    DO              reduce using rule 58 (Factor -> INHERITED Designator .)
    SEMICOLON       reduce using rule 58 (Factor -> INHERITED Designator .)
    COMMA           reduce using rule 58 (Factor -> INHERITED Designator .)
    RSQUARE         reduce using rule 58 (Factor -> INHERITED Designator .)


state 168

    (30) CaseStmt -> CASE Expression OF . CaseSelector ColonCaseSelector END
    (31) CaseStmt -> CASE Expression OF . CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END
    (34) CaseSelector -> . CaseLabel COLON Statement
    (35) CaseLabel -> . NUMBER

    NUMBER          shift and go to state 217

    CaseSelector                   shift and go to state 218
    CaseLabel                      shift and go to state 219

state 169

    (57) Factor -> NOT Factor .

    MULTIPLY        reduce using rule 57 (Factor -> NOT Factor .)
    DIVIDE          reduce using rule 57 (Factor -> NOT Factor .)
    DIV             reduce using rule 57 (Factor -> NOT Factor .)
    MOD             reduce using rule 57 (Factor -> NOT Factor .)
    AND             reduce using rule 57 (Factor -> NOT Factor .)
    SHL             reduce using rule 57 (Factor -> NOT Factor .)
    SHR             reduce using rule 57 (Factor -> NOT Factor .)
    DOUBLESTAR      reduce using rule 57 (Factor -> NOT Factor .)
    PLUS            reduce using rule 57 (Factor -> NOT Factor .)
    MINUS           reduce using rule 57 (Factor -> NOT Factor .)
    OR              reduce using rule 57 (Factor -> NOT Factor .)
    XOR             reduce using rule 57 (Factor -> NOT Factor .)
    LANGLE          reduce using rule 57 (Factor -> NOT Factor .)
    RANGLE          reduce using rule 57 (Factor -> NOT Factor .)
    GEQ             reduce using rule 57 (Factor -> NOT Factor .)
    LEQ             reduce using rule 57 (Factor -> NOT Factor .)
    NOTEQUALS       reduce using rule 57 (Factor -> NOT Factor .)
    EQUALS          reduce using rule 57 (Factor -> NOT Factor .)
    OF              reduce using rule 57 (Factor -> NOT Factor .)
    RPAREN          reduce using rule 57 (Factor -> NOT Factor .)
    THEN            reduce using rule 57 (Factor -> NOT Factor .)
    DO              reduce using rule 57 (Factor -> NOT Factor .)
    SEMICOLON       reduce using rule 57 (Factor -> NOT Factor .)
    COMMA           reduce using rule 57 (Factor -> NOT Factor .)
    RSQUARE         reduce using rule 57 (Factor -> NOT Factor .)


state 170

    (160) LambFunc -> LAMBDA ID . COLON SimpleExpression

    COLON           shift and go to state 220


state 171

    (18) SimpleStatement -> Designator ASSIGNTO Expression .

    SEMICOLON       reduce using rule 18 (SimpleStatement -> Designator ASSIGNTO Expression .)


state 172

    (17) SimpleStatement -> Designator LPAREN ExprList . RPAREN

    RPAREN          shift and go to state 221


state 173

    (107) ExprList -> Expression . CommaExpression
    (105) CommaExpression -> . CommaExpression COMMA Expression
    (106) CommaExpression -> .

    COMMA           reduce using rule 106 (CommaExpression -> .)
    RPAREN          reduce using rule 106 (CommaExpression -> .)
    RSQUARE         reduce using rule 106 (CommaExpression -> .)

    CommaExpression                shift and go to state 222

state 174

    (20) SimpleStatement -> LPAREN Expression RPAREN .

    SEMICOLON       reduce using rule 20 (SimpleStatement -> LPAREN Expression RPAREN .)


state 175

    (28) IfStmt -> IF Expression THEN . CompoundStmt ELSE CompoundStmt
    (29) IfStmt -> IF Expression THEN . CompoundStmt
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON

    BEGIN           shift and go to state 17

    CompoundStmt                   shift and go to state 223

state 176

    (38) RepeatStmt -> REPEAT Statement UNTIL . Expression SEMICOLON
    (40) Expression -> . SimpleExpression RelSimpleStar
    (41) Expression -> . LambFunc
    (44) SimpleExpression -> . PLUS Term AddTermStar
    (45) SimpleExpression -> . MINUS Term AddTermStar
    (46) SimpleExpression -> . Term AddTermStar
    (160) LambFunc -> . LAMBDA ID COLON SimpleExpression
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 97
    MINUS           shift and go to state 94
    LAMBDA          shift and go to state 104
    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 99
    LambFunc                       shift and go to state 95
    Designator                     shift and go to state 96
    Factor                         shift and go to state 93
    SimpleExpression               shift and go to state 98
    Expression                     shift and go to state 224

state 177

    (39) WhileStmt -> WHILE Expression DO . CompoundStmt
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON

    BEGIN           shift and go to state 17

    CompoundStmt                   shift and go to state 225

state 178

    (153) FuncHeading -> FUNCTION Designator FormalParams COLON . Type
    (61) Type -> . TypeID
    (62) Type -> . SimpleType
    (63) Type -> . PointerType
    (64) Type -> . StringType
    (65) Type -> . ProcedureType
    (66) Type -> . Array
    (67) Type -> . ID
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR
    (68) SimpleType -> . DOUBLE
    (69) PointerType -> . POWER ID
    (70) StringType -> . STRING
    (71) ProcedureType -> . ProcedureHeading
    (72) ProcedureType -> . FuncHeading
    (121) Array -> . ARRAY LSQUARE ArrayBetween RSQUARE OF TypeArray
    (158) ProcedureHeading -> . PROCEDURE Designator FormalParams
    (153) FuncHeading -> . FUNCTION Designator FormalParams COLON Type

    ID              shift and go to state 190
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77
    DOUBLE          shift and go to state 191
    POWER           shift and go to state 187
    STRING          shift and go to state 189
    ARRAY           shift and go to state 188
    PROCEDURE       shift and go to state 20
    FUNCTION        shift and go to state 22

    TypeID                         shift and go to state 180
    ProcedureType                  shift and go to state 184
    FuncHeading                    shift and go to state 185
    SimpleType                     shift and go to state 186
    StringType                     shift and go to state 183
    ProcedureHeading               shift and go to state 181
    PointerType                    shift and go to state 192
    Array                          shift and go to state 193
    Type                           shift and go to state 226

state 179

    (143) ColonVarDecl -> ColonVarDecl VarDecl SEMICOLON .

    ID              reduce using rule 143 (ColonVarDecl -> ColonVarDecl VarDecl SEMICOLON .)
    PROCEDURE       reduce using rule 143 (ColonVarDecl -> ColonVarDecl VarDecl SEMICOLON .)
    FUNCTION        reduce using rule 143 (ColonVarDecl -> ColonVarDecl VarDecl SEMICOLON .)
    CONSTRUCTOR     reduce using rule 143 (ColonVarDecl -> ColonVarDecl VarDecl SEMICOLON .)
    END             reduce using rule 143 (ColonVarDecl -> ColonVarDecl VarDecl SEMICOLON .)
    BEGIN           reduce using rule 143 (ColonVarDecl -> ColonVarDecl VarDecl SEMICOLON .)
    CONSTANT        reduce using rule 143 (ColonVarDecl -> ColonVarDecl VarDecl SEMICOLON .)
    TYPE            reduce using rule 143 (ColonVarDecl -> ColonVarDecl VarDecl SEMICOLON .)
    VAR             reduce using rule 143 (ColonVarDecl -> ColonVarDecl VarDecl SEMICOLON .)


state 180

    (61) Type -> TypeID .

    SEMICOLON       reduce using rule 61 (Type -> TypeID .)
    RPAREN          reduce using rule 61 (Type -> TypeID .)


state 181

    (71) ProcedureType -> ProcedureHeading .

    SEMICOLON       reduce using rule 71 (ProcedureType -> ProcedureHeading .)
    RPAREN          reduce using rule 71 (ProcedureType -> ProcedureHeading .)


state 182

    (145) VarDecl -> IdentList COLON Type .

    SEMICOLON       reduce using rule 145 (VarDecl -> IdentList COLON Type .)


state 183

    (64) Type -> StringType .

    SEMICOLON       reduce using rule 64 (Type -> StringType .)
    RPAREN          reduce using rule 64 (Type -> StringType .)


state 184

    (65) Type -> ProcedureType .

    SEMICOLON       reduce using rule 65 (Type -> ProcedureType .)
    RPAREN          reduce using rule 65 (Type -> ProcedureType .)


state 185

    (72) ProcedureType -> FuncHeading .

    SEMICOLON       reduce using rule 72 (ProcedureType -> FuncHeading .)
    RPAREN          reduce using rule 72 (ProcedureType -> FuncHeading .)


state 186

    (62) Type -> SimpleType .

    SEMICOLON       reduce using rule 62 (Type -> SimpleType .)
    RPAREN          reduce using rule 62 (Type -> SimpleType .)


state 187

    (69) PointerType -> POWER . ID

    ID              shift and go to state 227


state 188

    (121) Array -> ARRAY . LSQUARE ArrayBetween RSQUARE OF TypeArray

    LSQUARE         shift and go to state 228


state 189

    (70) StringType -> STRING .

    SEMICOLON       reduce using rule 70 (StringType -> STRING .)
    RPAREN          reduce using rule 70 (StringType -> STRING .)


state 190

    (67) Type -> ID .

    SEMICOLON       reduce using rule 67 (Type -> ID .)
    RPAREN          reduce using rule 67 (Type -> ID .)


state 191

    (68) SimpleType -> DOUBLE .

    SEMICOLON       reduce using rule 68 (SimpleType -> DOUBLE .)
    RPAREN          reduce using rule 68 (SimpleType -> DOUBLE .)


state 192

    (63) Type -> PointerType .

    SEMICOLON       reduce using rule 63 (Type -> PointerType .)
    RPAREN          reduce using rule 63 (Type -> PointerType .)


state 193

    (66) Type -> Array .

    SEMICOLON       reduce using rule 66 (Type -> Array .)
    RPAREN          reduce using rule 66 (Type -> Array .)


state 194

    (79) ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .

    ID              reduce using rule 79 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    PROCEDURE       reduce using rule 79 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    FUNCTION        reduce using rule 79 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    CONSTRUCTOR     reduce using rule 79 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    END             reduce using rule 79 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    BEGIN           reduce using rule 79 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    CONSTANT        reduce using rule 79 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    TYPE            reduce using rule 79 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    VAR             reduce using rule 79 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)


state 195

    (161) ObjectType -> OBJECT . ObjectHeritage ObjectVis ObjectBody END
    (162) ObjectHeritage -> . LPAREN IdentList RPAREN
    (163) ObjectHeritage -> .

    LPAREN          shift and go to state 229
    PUBLIC          reduce using rule 163 (ObjectHeritage -> .)
    END             reduce using rule 163 (ObjectHeritage -> .)
    ID              reduce using rule 163 (ObjectHeritage -> .)
    PROCEDURE       reduce using rule 163 (ObjectHeritage -> .)
    FUNCTION        reduce using rule 163 (ObjectHeritage -> .)
    CONSTRUCTOR     reduce using rule 163 (ObjectHeritage -> .)

    ObjectHeritage                 shift and go to state 230

state 196

    (81) TypeDecl -> ID EQUALS Type .

    SEMICOLON       reduce using rule 81 (TypeDecl -> ID EQUALS Type .)


state 197

    (179) ClassType -> CLASS . ClassHeritage ClassVis ClassBody END
    (180) ClassHeritage -> . LPAREN IdentList RPAREN
    (181) ClassHeritage -> .

    LPAREN          shift and go to state 231
    PUBLIC          reduce using rule 181 (ClassHeritage -> .)
    END             reduce using rule 181 (ClassHeritage -> .)
    ID              reduce using rule 181 (ClassHeritage -> .)
    PROCEDURE       reduce using rule 181 (ClassHeritage -> .)
    FUNCTION        reduce using rule 181 (ClassHeritage -> .)
    CONSTRUCTOR     reduce using rule 181 (ClassHeritage -> .)

    ClassHeritage                  shift and go to state 232

state 198

    (85) RestrictedType -> ObjectType .

    SEMICOLON       reduce using rule 85 (RestrictedType -> ObjectType .)


state 199

    (82) TypeDecl -> ID EQUALS RestrictedType .

    SEMICOLON       reduce using rule 82 (TypeDecl -> ID EQUALS RestrictedType .)


state 200

    (86) RestrictedType -> ClassType .

    SEMICOLON       reduce using rule 86 (RestrictedType -> ClassType .)


state 201

    (83) TypeDecl -> ID EQUALS TYPE . Type
    (84) TypeDecl -> ID EQUALS TYPE . RestrictedType
    (61) Type -> . TypeID
    (62) Type -> . SimpleType
    (63) Type -> . PointerType
    (64) Type -> . StringType
    (65) Type -> . ProcedureType
    (66) Type -> . Array
    (67) Type -> . ID
    (85) RestrictedType -> . ObjectType
    (86) RestrictedType -> . ClassType
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR
    (68) SimpleType -> . DOUBLE
    (69) PointerType -> . POWER ID
    (70) StringType -> . STRING
    (71) ProcedureType -> . ProcedureHeading
    (72) ProcedureType -> . FuncHeading
    (121) Array -> . ARRAY LSQUARE ArrayBetween RSQUARE OF TypeArray
    (161) ObjectType -> . OBJECT ObjectHeritage ObjectVis ObjectBody END
    (179) ClassType -> . CLASS ClassHeritage ClassVis ClassBody END
    (158) ProcedureHeading -> . PROCEDURE Designator FormalParams
    (153) FuncHeading -> . FUNCTION Designator FormalParams COLON Type

    ID              shift and go to state 190
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77
    DOUBLE          shift and go to state 191
    POWER           shift and go to state 187
    STRING          shift and go to state 189
    ARRAY           shift and go to state 188
    OBJECT          shift and go to state 195
    CLASS           shift and go to state 197
    PROCEDURE       shift and go to state 20
    FUNCTION        shift and go to state 22

    TypeID                         shift and go to state 180
    ProcedureHeading               shift and go to state 181
    Type                           shift and go to state 233
    StringType                     shift and go to state 183
    ProcedureType                  shift and go to state 184
    FuncHeading                    shift and go to state 185
    SimpleType                     shift and go to state 186
    ObjectType                     shift and go to state 198
    RestrictedType                 shift and go to state 234
    PointerType                    shift and go to state 192
    ClassType                      shift and go to state 200
    Array                          shift and go to state 193

state 202

    (134) CommaIDTypeArgs -> COMMA ID TypeArgs CommaIDTypeArgs .

    RPAREN          reduce using rule 134 (CommaIDTypeArgs -> COMMA ID TypeArgs CommaIDTypeArgs .)
    COLON           reduce using rule 134 (CommaIDTypeArgs -> COMMA ID TypeArgs CommaIDTypeArgs .)
    SEMICOLON       reduce using rule 134 (CommaIDTypeArgs -> COMMA ID TypeArgs CommaIDTypeArgs .)


state 203

    (140) ParamIdent -> IdentList COLON . Type
    (61) Type -> . TypeID
    (62) Type -> . SimpleType
    (63) Type -> . PointerType
    (64) Type -> . StringType
    (65) Type -> . ProcedureType
    (66) Type -> . Array
    (67) Type -> . ID
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR
    (68) SimpleType -> . DOUBLE
    (69) PointerType -> . POWER ID
    (70) StringType -> . STRING
    (71) ProcedureType -> . ProcedureHeading
    (72) ProcedureType -> . FuncHeading
    (121) Array -> . ARRAY LSQUARE ArrayBetween RSQUARE OF TypeArray
    (158) ProcedureHeading -> . PROCEDURE Designator FormalParams
    (153) FuncHeading -> . FUNCTION Designator FormalParams COLON Type

    ID              shift and go to state 190
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77
    DOUBLE          shift and go to state 191
    POWER           shift and go to state 187
    STRING          shift and go to state 189
    ARRAY           shift and go to state 188
    PROCEDURE       shift and go to state 20
    FUNCTION        shift and go to state 22

    TypeID                         shift and go to state 180
    ProcedureType                  shift and go to state 184
    SimpleType                     shift and go to state 186
    StringType                     shift and go to state 183
    FuncHeading                    shift and go to state 185
    ProcedureHeading               shift and go to state 181
    PointerType                    shift and go to state 192
    Array                          shift and go to state 193
    Type                           shift and go to state 235

state 204

    (137) ParamIdentList -> ParamIdent SEMICOLON . ParamIdentList
    (137) ParamIdentList -> . ParamIdent SEMICOLON ParamIdentList
    (138) ParamIdentList -> . ParamIdent
    (139) ParamIdentList -> .
    (140) ParamIdent -> . IdentList COLON Type
    (141) ParamIdent -> . IdentList
    (132) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (133) IdentList -> . ID CommaIDTypeArgs

    RPAREN          reduce using rule 139 (ParamIdentList -> .)
    ID              shift and go to state 10

    IdentList                      shift and go to state 126
    ParamIdent                     shift and go to state 127
    ParamIdentList                 shift and go to state 236

state 205

    (155) FormalParams -> LPAREN ParamIdentList RPAREN .

    SEMICOLON       reduce using rule 155 (FormalParams -> LPAREN ParamIdentList RPAREN .)
    COLON           reduce using rule 155 (FormalParams -> LPAREN ParamIdentList RPAREN .)
    RPAREN          reduce using rule 155 (FormalParams -> LPAREN ParamIdentList RPAREN .)


state 206

    (112) DesignatorSubElem -> LSQUARE ExprList . RSQUARE

    RSQUARE         shift and go to state 237


state 207

    (111) DesignatorSubElem -> DOT ID .

    DOT             reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    LSQUARE         reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    POWER           reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    LPAREN          reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    SEMICOLON       reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    ASSIGNTO        reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    RPAREN          reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    COLON           reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    MULTIPLY        reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    DIVIDE          reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    DIV             reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    MOD             reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    AND             reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    SHL             reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    SHR             reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    DOUBLESTAR      reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    PLUS            reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    MINUS           reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    OR              reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    XOR             reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    LANGLE          reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    RANGLE          reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    GEQ             reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    LEQ             reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    NOTEQUALS       reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    EQUALS          reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    OF              reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    THEN            reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    DO              reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    COMMA           reduce using rule 111 (DesignatorSubElem -> DOT ID .)
    RSQUARE         reduce using rule 111 (DesignatorSubElem -> DOT ID .)


state 208

    (118) ConstDecl -> ID COLON TypeID EQUALS . TypedConst
    (119) TypedConst -> . ConstExpr
    (120) TypedConst -> . ArrayConst
    (131) ConstExpr -> . NUMBER
    (128) ArrayConst -> . LPAREN TypedConst CommaTypedConst RPAREN

    NUMBER          shift and go to state 134
    LPAREN          shift and go to state 240

    ConstExpr                      shift and go to state 239
    ArrayConst                     shift and go to state 241
    TypedConst                     shift and go to state 238

state 209

    (60) Factor -> TypeID LPAREN Expression . RPAREN

    RPAREN          shift and go to state 242


state 210

    (56) Factor -> LPAREN Expression RPAREN .

    MULTIPLY        reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    DIV             reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    AND             reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    SHL             reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    SHR             reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    DOUBLESTAR      reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    OR              reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    LANGLE          reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    RANGLE          reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    NOTEQUALS       reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    EQUALS          reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    OF              reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    THEN            reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    DO              reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)
    RSQUARE         reduce using rule 56 (Factor -> LPAREN Expression RPAREN .)


state 211

    (50) MulFacStar -> MulOp Factor . MulFacStar
    (50) MulFacStar -> . MulOp Factor MulFacStar
    (51) MulFacStar -> .
    (97) MulOp -> . MULTIPLY
    (98) MulOp -> . DIVIDE
    (99) MulOp -> . DIV
    (100) MulOp -> . MOD
    (101) MulOp -> . AND
    (102) MulOp -> . SHL
    (103) MulOp -> . SHR
    (104) MulOp -> . DOUBLESTAR

    PLUS            reduce using rule 51 (MulFacStar -> .)
    MINUS           reduce using rule 51 (MulFacStar -> .)
    OR              reduce using rule 51 (MulFacStar -> .)
    XOR             reduce using rule 51 (MulFacStar -> .)
    LANGLE          reduce using rule 51 (MulFacStar -> .)
    RANGLE          reduce using rule 51 (MulFacStar -> .)
    GEQ             reduce using rule 51 (MulFacStar -> .)
    LEQ             reduce using rule 51 (MulFacStar -> .)
    NOTEQUALS       reduce using rule 51 (MulFacStar -> .)
    EQUALS          reduce using rule 51 (MulFacStar -> .)
    OF              reduce using rule 51 (MulFacStar -> .)
    RPAREN          reduce using rule 51 (MulFacStar -> .)
    THEN            reduce using rule 51 (MulFacStar -> .)
    DO              reduce using rule 51 (MulFacStar -> .)
    SEMICOLON       reduce using rule 51 (MulFacStar -> .)
    COMMA           reduce using rule 51 (MulFacStar -> .)
    RSQUARE         reduce using rule 51 (MulFacStar -> .)
    MULTIPLY        shift and go to state 145
    DIVIDE          shift and go to state 142
    DIV             shift and go to state 147
    MOD             shift and go to state 149
    AND             shift and go to state 140
    SHL             shift and go to state 148
    SHR             shift and go to state 143
    DOUBLESTAR      shift and go to state 146

    MulFacStar                     shift and go to state 243
    MulOp                          shift and go to state 144

state 212

    (45) SimpleExpression -> MINUS Term AddTermStar .

    LANGLE          reduce using rule 45 (SimpleExpression -> MINUS Term AddTermStar .)
    RANGLE          reduce using rule 45 (SimpleExpression -> MINUS Term AddTermStar .)
    GEQ             reduce using rule 45 (SimpleExpression -> MINUS Term AddTermStar .)
    LEQ             reduce using rule 45 (SimpleExpression -> MINUS Term AddTermStar .)
    NOTEQUALS       reduce using rule 45 (SimpleExpression -> MINUS Term AddTermStar .)
    EQUALS          reduce using rule 45 (SimpleExpression -> MINUS Term AddTermStar .)
    COMMA           reduce using rule 45 (SimpleExpression -> MINUS Term AddTermStar .)
    RPAREN          reduce using rule 45 (SimpleExpression -> MINUS Term AddTermStar .)
    OF              reduce using rule 45 (SimpleExpression -> MINUS Term AddTermStar .)
    THEN            reduce using rule 45 (SimpleExpression -> MINUS Term AddTermStar .)
    DO              reduce using rule 45 (SimpleExpression -> MINUS Term AddTermStar .)
    SEMICOLON       reduce using rule 45 (SimpleExpression -> MINUS Term AddTermStar .)
    RSQUARE         reduce using rule 45 (SimpleExpression -> MINUS Term AddTermStar .)


state 213

    (53) Factor -> Designator LPAREN ExprList . RPAREN

    RPAREN          shift and go to state 244


state 214

    (44) SimpleExpression -> PLUS Term AddTermStar .

    LANGLE          reduce using rule 44 (SimpleExpression -> PLUS Term AddTermStar .)
    RANGLE          reduce using rule 44 (SimpleExpression -> PLUS Term AddTermStar .)
    GEQ             reduce using rule 44 (SimpleExpression -> PLUS Term AddTermStar .)
    LEQ             reduce using rule 44 (SimpleExpression -> PLUS Term AddTermStar .)
    NOTEQUALS       reduce using rule 44 (SimpleExpression -> PLUS Term AddTermStar .)
    EQUALS          reduce using rule 44 (SimpleExpression -> PLUS Term AddTermStar .)
    COMMA           reduce using rule 44 (SimpleExpression -> PLUS Term AddTermStar .)
    RPAREN          reduce using rule 44 (SimpleExpression -> PLUS Term AddTermStar .)
    OF              reduce using rule 44 (SimpleExpression -> PLUS Term AddTermStar .)
    THEN            reduce using rule 44 (SimpleExpression -> PLUS Term AddTermStar .)
    DO              reduce using rule 44 (SimpleExpression -> PLUS Term AddTermStar .)
    SEMICOLON       reduce using rule 44 (SimpleExpression -> PLUS Term AddTermStar .)
    RSQUARE         reduce using rule 44 (SimpleExpression -> PLUS Term AddTermStar .)


state 215

    (42) RelSimpleStar -> RelOp SimpleExpression . RelSimpleStar
    (42) RelSimpleStar -> . RelOp SimpleExpression RelSimpleStar
    (43) RelSimpleStar -> .
    (87) RelOp -> . LANGLE
    (88) RelOp -> . RANGLE
    (89) RelOp -> . GEQ
    (90) RelOp -> . LEQ
    (91) RelOp -> . NOTEQUALS
    (92) RelOp -> . EQUALS

    OF              reduce using rule 43 (RelSimpleStar -> .)
    RPAREN          reduce using rule 43 (RelSimpleStar -> .)
    THEN            reduce using rule 43 (RelSimpleStar -> .)
    DO              reduce using rule 43 (RelSimpleStar -> .)
    SEMICOLON       reduce using rule 43 (RelSimpleStar -> .)
    COMMA           reduce using rule 43 (RelSimpleStar -> .)
    RSQUARE         reduce using rule 43 (RelSimpleStar -> .)
    LANGLE          shift and go to state 155
    RANGLE          shift and go to state 160
    GEQ             shift and go to state 154
    LEQ             shift and go to state 158
    NOTEQUALS       shift and go to state 153
    EQUALS          shift and go to state 157

    RelOp                          shift and go to state 156
    RelSimpleStar                  shift and go to state 245

state 216

    (47) AddTermStar -> AddOp Term . AddTermStar
    (47) AddTermStar -> . AddOp Term AddTermStar
    (48) AddTermStar -> .
    (93) AddOp -> . PLUS
    (94) AddOp -> . MINUS
    (95) AddOp -> . OR
    (96) AddOp -> . XOR

    LANGLE          reduce using rule 48 (AddTermStar -> .)
    RANGLE          reduce using rule 48 (AddTermStar -> .)
    GEQ             reduce using rule 48 (AddTermStar -> .)
    LEQ             reduce using rule 48 (AddTermStar -> .)
    NOTEQUALS       reduce using rule 48 (AddTermStar -> .)
    EQUALS          reduce using rule 48 (AddTermStar -> .)
    OF              reduce using rule 48 (AddTermStar -> .)
    RPAREN          reduce using rule 48 (AddTermStar -> .)
    THEN            reduce using rule 48 (AddTermStar -> .)
    DO              reduce using rule 48 (AddTermStar -> .)
    SEMICOLON       reduce using rule 48 (AddTermStar -> .)
    COMMA           reduce using rule 48 (AddTermStar -> .)
    RSQUARE         reduce using rule 48 (AddTermStar -> .)
    PLUS            shift and go to state 165
    MINUS           shift and go to state 166
    OR              shift and go to state 164
    XOR             shift and go to state 162

    AddOp                          shift and go to state 161
    AddTermStar                    shift and go to state 246

state 217

    (35) CaseLabel -> NUMBER .

    COLON           reduce using rule 35 (CaseLabel -> NUMBER .)


state 218

    (30) CaseStmt -> CASE Expression OF CaseSelector . ColonCaseSelector END
    (31) CaseStmt -> CASE Expression OF CaseSelector . ColonCaseSelector ELSE CompoundStmt SEMICOLON END
    (32) ColonCaseSelector -> . ColonCaseSelector SEMICOLON CaseSelector
    (33) ColonCaseSelector -> .

    END             reduce using rule 33 (ColonCaseSelector -> .)
    ELSE            reduce using rule 33 (ColonCaseSelector -> .)
    SEMICOLON       reduce using rule 33 (ColonCaseSelector -> .)

    ColonCaseSelector              shift and go to state 247

state 219

    (34) CaseSelector -> CaseLabel . COLON Statement

    COLON           shift and go to state 248


state 220

    (160) LambFunc -> LAMBDA ID COLON . SimpleExpression
    (44) SimpleExpression -> . PLUS Term AddTermStar
    (45) SimpleExpression -> . MINUS Term AddTermStar
    (46) SimpleExpression -> . Term AddTermStar
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 97
    MINUS           shift and go to state 94
    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 99
    Designator                     shift and go to state 96
    Factor                         shift and go to state 93
    SimpleExpression               shift and go to state 249

state 221

    (17) SimpleStatement -> Designator LPAREN ExprList RPAREN .

    SEMICOLON       reduce using rule 17 (SimpleStatement -> Designator LPAREN ExprList RPAREN .)


state 222

    (107) ExprList -> Expression CommaExpression .
    (105) CommaExpression -> CommaExpression . COMMA Expression

    RPAREN          reduce using rule 107 (ExprList -> Expression CommaExpression .)
    RSQUARE         reduce using rule 107 (ExprList -> Expression CommaExpression .)
    COMMA           shift and go to state 250


state 223

    (28) IfStmt -> IF Expression THEN CompoundStmt . ELSE CompoundStmt
    (29) IfStmt -> IF Expression THEN CompoundStmt .

    ELSE            shift and go to state 251
    INHERITED       reduce using rule 29 (IfStmt -> IF Expression THEN CompoundStmt .)
    LPAREN          reduce using rule 29 (IfStmt -> IF Expression THEN CompoundStmt .)
    BREAK           reduce using rule 29 (IfStmt -> IF Expression THEN CompoundStmt .)
    CONTINUE        reduce using rule 29 (IfStmt -> IF Expression THEN CompoundStmt .)
    ID              reduce using rule 29 (IfStmt -> IF Expression THEN CompoundStmt .)
    BEGIN           reduce using rule 29 (IfStmt -> IF Expression THEN CompoundStmt .)
    IF              reduce using rule 29 (IfStmt -> IF Expression THEN CompoundStmt .)
    CASE            reduce using rule 29 (IfStmt -> IF Expression THEN CompoundStmt .)
    REPEAT          reduce using rule 29 (IfStmt -> IF Expression THEN CompoundStmt .)
    WHILE           reduce using rule 29 (IfStmt -> IF Expression THEN CompoundStmt .)
    END             reduce using rule 29 (IfStmt -> IF Expression THEN CompoundStmt .)
    SEMICOLON       reduce using rule 29 (IfStmt -> IF Expression THEN CompoundStmt .)
    UNTIL           reduce using rule 29 (IfStmt -> IF Expression THEN CompoundStmt .)

  ! ELSE            [ reduce using rule 29 (IfStmt -> IF Expression THEN CompoundStmt .) ]


state 224

    (38) RepeatStmt -> REPEAT Statement UNTIL Expression . SEMICOLON

    SEMICOLON       shift and go to state 252


state 225

    (39) WhileStmt -> WHILE Expression DO CompoundStmt .

    UNTIL           reduce using rule 39 (WhileStmt -> WHILE Expression DO CompoundStmt .)
    END             reduce using rule 39 (WhileStmt -> WHILE Expression DO CompoundStmt .)
    ELSE            reduce using rule 39 (WhileStmt -> WHILE Expression DO CompoundStmt .)
    SEMICOLON       reduce using rule 39 (WhileStmt -> WHILE Expression DO CompoundStmt .)
    INHERITED       reduce using rule 39 (WhileStmt -> WHILE Expression DO CompoundStmt .)
    LPAREN          reduce using rule 39 (WhileStmt -> WHILE Expression DO CompoundStmt .)
    BREAK           reduce using rule 39 (WhileStmt -> WHILE Expression DO CompoundStmt .)
    CONTINUE        reduce using rule 39 (WhileStmt -> WHILE Expression DO CompoundStmt .)
    ID              reduce using rule 39 (WhileStmt -> WHILE Expression DO CompoundStmt .)
    BEGIN           reduce using rule 39 (WhileStmt -> WHILE Expression DO CompoundStmt .)
    IF              reduce using rule 39 (WhileStmt -> WHILE Expression DO CompoundStmt .)
    CASE            reduce using rule 39 (WhileStmt -> WHILE Expression DO CompoundStmt .)
    REPEAT          reduce using rule 39 (WhileStmt -> WHILE Expression DO CompoundStmt .)
    WHILE           reduce using rule 39 (WhileStmt -> WHILE Expression DO CompoundStmt .)


state 226

    (153) FuncHeading -> FUNCTION Designator FormalParams COLON Type .

    SEMICOLON       reduce using rule 153 (FuncHeading -> FUNCTION Designator FormalParams COLON Type .)
    RPAREN          reduce using rule 153 (FuncHeading -> FUNCTION Designator FormalParams COLON Type .)


state 227

    (69) PointerType -> POWER ID .

    SEMICOLON       reduce using rule 69 (PointerType -> POWER ID .)
    RPAREN          reduce using rule 69 (PointerType -> POWER ID .)


state 228

    (121) Array -> ARRAY LSQUARE . ArrayBetween RSQUARE OF TypeArray
    (122) ArrayBetween -> . NUMBER DOT DOT NUMBER
    (123) ArrayBetween -> . NUMBER DOT DOT ID
    (124) ArrayBetween -> . ID DOT DOT ID
    (125) ArrayBetween -> . ID DOT DOT NUMBER

    NUMBER          shift and go to state 254
    ID              shift and go to state 255

    ArrayBetween                   shift and go to state 253

state 229

    (162) ObjectHeritage -> LPAREN . IdentList RPAREN
    (132) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (133) IdentList -> . ID CommaIDTypeArgs

    ID              shift and go to state 10

    IdentList                      shift and go to state 256

state 230

    (161) ObjectType -> OBJECT ObjectHeritage . ObjectVis ObjectBody END
    (166) ObjectVis -> . PUBLIC
    (167) ObjectVis -> .

    PUBLIC          shift and go to state 258
    END             reduce using rule 167 (ObjectVis -> .)
    ID              reduce using rule 167 (ObjectVis -> .)
    PROCEDURE       reduce using rule 167 (ObjectVis -> .)
    FUNCTION        reduce using rule 167 (ObjectVis -> .)
    CONSTRUCTOR     reduce using rule 167 (ObjectVis -> .)

    ObjectVis                      shift and go to state 257

state 231

    (180) ClassHeritage -> LPAREN . IdentList RPAREN
    (132) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (133) IdentList -> . ID CommaIDTypeArgs

    ID              shift and go to state 10

    IdentList                      shift and go to state 259

state 232

    (179) ClassType -> CLASS ClassHeritage . ClassVis ClassBody END
    (184) ClassVis -> . PUBLIC
    (185) ClassVis -> .

    PUBLIC          shift and go to state 261
    END             reduce using rule 185 (ClassVis -> .)
    ID              reduce using rule 185 (ClassVis -> .)
    PROCEDURE       reduce using rule 185 (ClassVis -> .)
    FUNCTION        reduce using rule 185 (ClassVis -> .)
    CONSTRUCTOR     reduce using rule 185 (ClassVis -> .)

    ClassVis                       shift and go to state 260

state 233

    (83) TypeDecl -> ID EQUALS TYPE Type .

    SEMICOLON       reduce using rule 83 (TypeDecl -> ID EQUALS TYPE Type .)


state 234

    (84) TypeDecl -> ID EQUALS TYPE RestrictedType .

    SEMICOLON       reduce using rule 84 (TypeDecl -> ID EQUALS TYPE RestrictedType .)


state 235

    (140) ParamIdent -> IdentList COLON Type .

    SEMICOLON       reduce using rule 140 (ParamIdent -> IdentList COLON Type .)
    RPAREN          reduce using rule 140 (ParamIdent -> IdentList COLON Type .)


state 236

    (137) ParamIdentList -> ParamIdent SEMICOLON ParamIdentList .

    RPAREN          reduce using rule 137 (ParamIdentList -> ParamIdent SEMICOLON ParamIdentList .)


state 237

    (112) DesignatorSubElem -> LSQUARE ExprList RSQUARE .

    DOT             reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    LSQUARE         reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    POWER           reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    LPAREN          reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    SEMICOLON       reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    ASSIGNTO        reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    RPAREN          reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    COLON           reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    MULTIPLY        reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    DIVIDE          reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    DIV             reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    MOD             reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    AND             reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    SHL             reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    SHR             reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    DOUBLESTAR      reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    PLUS            reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    MINUS           reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    OR              reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    XOR             reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    LANGLE          reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    RANGLE          reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    GEQ             reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    LEQ             reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    NOTEQUALS       reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    EQUALS          reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    OF              reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    THEN            reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    DO              reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    COMMA           reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    RSQUARE         reduce using rule 112 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)


state 238

    (118) ConstDecl -> ID COLON TypeID EQUALS TypedConst .

    SEMICOLON       reduce using rule 118 (ConstDecl -> ID COLON TypeID EQUALS TypedConst .)


state 239

    (119) TypedConst -> ConstExpr .

    COMMA           reduce using rule 119 (TypedConst -> ConstExpr .)
    RPAREN          reduce using rule 119 (TypedConst -> ConstExpr .)
    SEMICOLON       reduce using rule 119 (TypedConst -> ConstExpr .)


state 240

    (128) ArrayConst -> LPAREN . TypedConst CommaTypedConst RPAREN
    (119) TypedConst -> . ConstExpr
    (120) TypedConst -> . ArrayConst
    (131) ConstExpr -> . NUMBER
    (128) ArrayConst -> . LPAREN TypedConst CommaTypedConst RPAREN

    NUMBER          shift and go to state 134
    LPAREN          shift and go to state 240

    ConstExpr                      shift and go to state 239
    ArrayConst                     shift and go to state 241
    TypedConst                     shift and go to state 262

state 241

    (120) TypedConst -> ArrayConst .

    COMMA           reduce using rule 120 (TypedConst -> ArrayConst .)
    RPAREN          reduce using rule 120 (TypedConst -> ArrayConst .)
    SEMICOLON       reduce using rule 120 (TypedConst -> ArrayConst .)


state 242

    (60) Factor -> TypeID LPAREN Expression RPAREN .

    MULTIPLY        reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    DIV             reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    MOD             reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    AND             reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    SHL             reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    SHR             reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    DOUBLESTAR      reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    PLUS            reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    MINUS           reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    OR              reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    XOR             reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    LANGLE          reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    RANGLE          reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    GEQ             reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    LEQ             reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    NOTEQUALS       reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    EQUALS          reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    OF              reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    THEN            reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    DO              reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    COMMA           reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)
    RSQUARE         reduce using rule 60 (Factor -> TypeID LPAREN Expression RPAREN .)


state 243

    (50) MulFacStar -> MulOp Factor MulFacStar .

    PLUS            reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    MINUS           reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    OR              reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    XOR             reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    LANGLE          reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    RANGLE          reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    GEQ             reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    LEQ             reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    NOTEQUALS       reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    EQUALS          reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    OF              reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    RPAREN          reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    THEN            reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    DO              reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    SEMICOLON       reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    COMMA           reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)
    RSQUARE         reduce using rule 50 (MulFacStar -> MulOp Factor MulFacStar .)


state 244

    (53) Factor -> Designator LPAREN ExprList RPAREN .

    MULTIPLY        reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    DIVIDE          reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    DIV             reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    MOD             reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    AND             reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    SHL             reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    SHR             reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    DOUBLESTAR      reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    PLUS            reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    MINUS           reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    OR              reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    XOR             reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    LANGLE          reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    RANGLE          reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    GEQ             reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    LEQ             reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    NOTEQUALS       reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    EQUALS          reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    OF              reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    RPAREN          reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    THEN            reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    DO              reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    SEMICOLON       reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    COMMA           reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)
    RSQUARE         reduce using rule 53 (Factor -> Designator LPAREN ExprList RPAREN .)


state 245

    (42) RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .

    OF              reduce using rule 42 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    RPAREN          reduce using rule 42 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    THEN            reduce using rule 42 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    DO              reduce using rule 42 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    SEMICOLON       reduce using rule 42 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    COMMA           reduce using rule 42 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    RSQUARE         reduce using rule 42 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)


state 246

    (47) AddTermStar -> AddOp Term AddTermStar .

    LANGLE          reduce using rule 47 (AddTermStar -> AddOp Term AddTermStar .)
    RANGLE          reduce using rule 47 (AddTermStar -> AddOp Term AddTermStar .)
    GEQ             reduce using rule 47 (AddTermStar -> AddOp Term AddTermStar .)
    LEQ             reduce using rule 47 (AddTermStar -> AddOp Term AddTermStar .)
    NOTEQUALS       reduce using rule 47 (AddTermStar -> AddOp Term AddTermStar .)
    EQUALS          reduce using rule 47 (AddTermStar -> AddOp Term AddTermStar .)
    OF              reduce using rule 47 (AddTermStar -> AddOp Term AddTermStar .)
    RPAREN          reduce using rule 47 (AddTermStar -> AddOp Term AddTermStar .)
    THEN            reduce using rule 47 (AddTermStar -> AddOp Term AddTermStar .)
    DO              reduce using rule 47 (AddTermStar -> AddOp Term AddTermStar .)
    SEMICOLON       reduce using rule 47 (AddTermStar -> AddOp Term AddTermStar .)
    COMMA           reduce using rule 47 (AddTermStar -> AddOp Term AddTermStar .)
    RSQUARE         reduce using rule 47 (AddTermStar -> AddOp Term AddTermStar .)


state 247

    (30) CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector . END
    (31) CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector . ELSE CompoundStmt SEMICOLON END
    (32) ColonCaseSelector -> ColonCaseSelector . SEMICOLON CaseSelector

    END             shift and go to state 263
    ELSE            shift and go to state 265
    SEMICOLON       shift and go to state 264


state 248

    (34) CaseSelector -> CaseLabel COLON . Statement
    (14) Statement -> . SimpleStatement SEMICOLON
    (15) Statement -> . StructStmt
    (16) SimpleStatement -> . Designator
    (17) SimpleStatement -> . Designator LPAREN ExprList RPAREN
    (18) SimpleStatement -> . Designator ASSIGNTO Expression
    (19) SimpleStatement -> . INHERITED
    (20) SimpleStatement -> . LPAREN Expression RPAREN
    (21) SimpleStatement -> . BREAK
    (22) SimpleStatement -> . CONTINUE
    (23) StructStmt -> . CompoundStmt
    (24) StructStmt -> . ConditionalStmt
    (25) StructStmt -> . LoopStmt
    (108) Designator -> . ID DesSubEleStar
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (26) ConditionalStmt -> . IfStmt
    (27) ConditionalStmt -> . CaseStmt
    (36) LoopStmt -> . RepeatStmt
    (37) LoopStmt -> . WhileStmt
    (28) IfStmt -> . IF Expression THEN CompoundStmt ELSE CompoundStmt
    (29) IfStmt -> . IF Expression THEN CompoundStmt
    (30) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector END
    (31) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END
    (38) RepeatStmt -> . REPEAT Statement UNTIL Expression SEMICOLON
    (39) WhileStmt -> . WHILE Expression DO CompoundStmt

    INHERITED       shift and go to state 52
    LPAREN          shift and go to state 51
    BREAK           shift and go to state 56
    CONTINUE        shift and go to state 57
    ID              shift and go to state 36
    BEGIN           shift and go to state 17
    IF              shift and go to state 53
    CASE            shift and go to state 45
    REPEAT          shift and go to state 54
    WHILE           shift and go to state 55

    WhileStmt                      shift and go to state 50
    ConditionalStmt                shift and go to state 49
    Designator                     shift and go to state 46
    IfStmt                         shift and go to state 44
    SimpleStatement                shift and go to state 42
    CompoundStmt                   shift and go to state 60
    LoopStmt                       shift and go to state 47
    Statement                      shift and go to state 266
    StructStmt                     shift and go to state 58
    RepeatStmt                     shift and go to state 59
    CaseStmt                       shift and go to state 48

state 249

    (160) LambFunc -> LAMBDA ID COLON SimpleExpression .

    OF              reduce using rule 160 (LambFunc -> LAMBDA ID COLON SimpleExpression .)
    RPAREN          reduce using rule 160 (LambFunc -> LAMBDA ID COLON SimpleExpression .)
    COMMA           reduce using rule 160 (LambFunc -> LAMBDA ID COLON SimpleExpression .)
    RSQUARE         reduce using rule 160 (LambFunc -> LAMBDA ID COLON SimpleExpression .)
    THEN            reduce using rule 160 (LambFunc -> LAMBDA ID COLON SimpleExpression .)
    DO              reduce using rule 160 (LambFunc -> LAMBDA ID COLON SimpleExpression .)
    SEMICOLON       reduce using rule 160 (LambFunc -> LAMBDA ID COLON SimpleExpression .)


state 250

    (105) CommaExpression -> CommaExpression COMMA . Expression
    (40) Expression -> . SimpleExpression RelSimpleStar
    (41) Expression -> . LambFunc
    (44) SimpleExpression -> . PLUS Term AddTermStar
    (45) SimpleExpression -> . MINUS Term AddTermStar
    (46) SimpleExpression -> . Term AddTermStar
    (160) LambFunc -> . LAMBDA ID COLON SimpleExpression
    (49) Term -> . Factor MulFacStar
    (52) Factor -> . Designator
    (53) Factor -> . Designator LPAREN ExprList RPAREN
    (54) Factor -> . USERSTRING
    (55) Factor -> . NUMBER
    (56) Factor -> . LPAREN Expression RPAREN
    (57) Factor -> . NOT Factor
    (58) Factor -> . INHERITED Designator
    (59) Factor -> . INHERITED
    (60) Factor -> . TypeID LPAREN Expression RPAREN
    (108) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 97
    MINUS           shift and go to state 94
    LAMBDA          shift and go to state 104
    USERSTRING      shift and go to state 100
    NUMBER          shift and go to state 92
    LPAREN          shift and go to state 91
    NOT             shift and go to state 103
    INHERITED       shift and go to state 101
    ID              shift and go to state 36
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77

    TypeID                         shift and go to state 90
    Term                           shift and go to state 99
    LambFunc                       shift and go to state 95
    Designator                     shift and go to state 96
    SimpleExpression               shift and go to state 98
    Factor                         shift and go to state 93
    Expression                     shift and go to state 267

state 251

    (28) IfStmt -> IF Expression THEN CompoundStmt ELSE . CompoundStmt
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON

    BEGIN           shift and go to state 17

    CompoundStmt                   shift and go to state 268

state 252

    (38) RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .

    END             reduce using rule 38 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    ELSE            reduce using rule 38 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    SEMICOLON       reduce using rule 38 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    INHERITED       reduce using rule 38 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    LPAREN          reduce using rule 38 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    BREAK           reduce using rule 38 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    CONTINUE        reduce using rule 38 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    ID              reduce using rule 38 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    BEGIN           reduce using rule 38 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    IF              reduce using rule 38 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    CASE            reduce using rule 38 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    REPEAT          reduce using rule 38 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    WHILE           reduce using rule 38 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    UNTIL           reduce using rule 38 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)


state 253

    (121) Array -> ARRAY LSQUARE ArrayBetween . RSQUARE OF TypeArray

    RSQUARE         shift and go to state 269


state 254

    (122) ArrayBetween -> NUMBER . DOT DOT NUMBER
    (123) ArrayBetween -> NUMBER . DOT DOT ID

    DOT             shift and go to state 270


state 255

    (124) ArrayBetween -> ID . DOT DOT ID
    (125) ArrayBetween -> ID . DOT DOT NUMBER

    DOT             shift and go to state 271


state 256

    (162) ObjectHeritage -> LPAREN IdentList . RPAREN

    RPAREN          shift and go to state 272


state 257

    (161) ObjectType -> OBJECT ObjectHeritage ObjectVis . ObjectBody END
    (164) ObjectBody -> . ObjectBody ObjectTypeSection ObjectVarSection ObjectConstSection ObjectMethodList
    (165) ObjectBody -> .

    END             reduce using rule 165 (ObjectBody -> .)
    ID              reduce using rule 165 (ObjectBody -> .)
    PROCEDURE       reduce using rule 165 (ObjectBody -> .)
    FUNCTION        reduce using rule 165 (ObjectBody -> .)
    CONSTRUCTOR     reduce using rule 165 (ObjectBody -> .)

    ObjectBody                     shift and go to state 273

state 258

    (166) ObjectVis -> PUBLIC .

    END             reduce using rule 166 (ObjectVis -> PUBLIC .)
    ID              reduce using rule 166 (ObjectVis -> PUBLIC .)
    PROCEDURE       reduce using rule 166 (ObjectVis -> PUBLIC .)
    FUNCTION        reduce using rule 166 (ObjectVis -> PUBLIC .)
    CONSTRUCTOR     reduce using rule 166 (ObjectVis -> PUBLIC .)


state 259

    (180) ClassHeritage -> LPAREN IdentList . RPAREN

    RPAREN          shift and go to state 274


state 260

    (179) ClassType -> CLASS ClassHeritage ClassVis . ClassBody END
    (182) ClassBody -> . ClassBody ClassTypeSection ClassConstSection ClassVarSection ClassMethodList
    (183) ClassBody -> .

    END             reduce using rule 183 (ClassBody -> .)
    ID              reduce using rule 183 (ClassBody -> .)
    PROCEDURE       reduce using rule 183 (ClassBody -> .)
    FUNCTION        reduce using rule 183 (ClassBody -> .)
    CONSTRUCTOR     reduce using rule 183 (ClassBody -> .)

    ClassBody                      shift and go to state 275

state 261

    (184) ClassVis -> PUBLIC .

    END             reduce using rule 184 (ClassVis -> PUBLIC .)
    ID              reduce using rule 184 (ClassVis -> PUBLIC .)
    PROCEDURE       reduce using rule 184 (ClassVis -> PUBLIC .)
    FUNCTION        reduce using rule 184 (ClassVis -> PUBLIC .)
    CONSTRUCTOR     reduce using rule 184 (ClassVis -> PUBLIC .)


state 262

    (128) ArrayConst -> LPAREN TypedConst . CommaTypedConst RPAREN
    (129) CommaTypedConst -> . COMMA TypedConst CommaTypedConst
    (130) CommaTypedConst -> .

    COMMA           shift and go to state 276
    RPAREN          reduce using rule 130 (CommaTypedConst -> .)

    CommaTypedConst                shift and go to state 277

state 263

    (30) CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .

    INHERITED       reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)
    LPAREN          reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)
    BREAK           reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)
    CONTINUE        reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)
    ID              reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)
    BEGIN           reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)
    IF              reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)
    CASE            reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)
    REPEAT          reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)
    WHILE           reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)
    END             reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)
    UNTIL           reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)
    ELSE            reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)
    SEMICOLON       reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)


state 264

    (32) ColonCaseSelector -> ColonCaseSelector SEMICOLON . CaseSelector
    (34) CaseSelector -> . CaseLabel COLON Statement
    (35) CaseLabel -> . NUMBER

    NUMBER          shift and go to state 217

    CaseLabel                      shift and go to state 219
    CaseSelector                   shift and go to state 278

state 265

    (31) CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE . CompoundStmt SEMICOLON END
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON

    BEGIN           shift and go to state 17

    CompoundStmt                   shift and go to state 279

state 266

    (34) CaseSelector -> CaseLabel COLON Statement .

    END             reduce using rule 34 (CaseSelector -> CaseLabel COLON Statement .)
    ELSE            reduce using rule 34 (CaseSelector -> CaseLabel COLON Statement .)
    SEMICOLON       reduce using rule 34 (CaseSelector -> CaseLabel COLON Statement .)


state 267

    (105) CommaExpression -> CommaExpression COMMA Expression .

    COMMA           reduce using rule 105 (CommaExpression -> CommaExpression COMMA Expression .)
    RPAREN          reduce using rule 105 (CommaExpression -> CommaExpression COMMA Expression .)
    RSQUARE         reduce using rule 105 (CommaExpression -> CommaExpression COMMA Expression .)


state 268

    (28) IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .

    INHERITED       reduce using rule 28 (IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .)
    LPAREN          reduce using rule 28 (IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .)
    BREAK           reduce using rule 28 (IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .)
    CONTINUE        reduce using rule 28 (IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .)
    ID              reduce using rule 28 (IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .)
    BEGIN           reduce using rule 28 (IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .)
    IF              reduce using rule 28 (IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .)
    CASE            reduce using rule 28 (IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .)
    REPEAT          reduce using rule 28 (IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .)
    WHILE           reduce using rule 28 (IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .)
    END             reduce using rule 28 (IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .)
    ELSE            reduce using rule 28 (IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .)
    SEMICOLON       reduce using rule 28 (IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .)
    UNTIL           reduce using rule 28 (IfStmt -> IF Expression THEN CompoundStmt ELSE CompoundStmt .)


state 269

    (121) Array -> ARRAY LSQUARE ArrayBetween RSQUARE . OF TypeArray

    OF              shift and go to state 280


state 270

    (122) ArrayBetween -> NUMBER DOT . DOT NUMBER
    (123) ArrayBetween -> NUMBER DOT . DOT ID

    DOT             shift and go to state 281


state 271

    (124) ArrayBetween -> ID DOT . DOT ID
    (125) ArrayBetween -> ID DOT . DOT NUMBER

    DOT             shift and go to state 282


state 272

    (162) ObjectHeritage -> LPAREN IdentList RPAREN .

    PUBLIC          reduce using rule 162 (ObjectHeritage -> LPAREN IdentList RPAREN .)
    END             reduce using rule 162 (ObjectHeritage -> LPAREN IdentList RPAREN .)
    ID              reduce using rule 162 (ObjectHeritage -> LPAREN IdentList RPAREN .)
    PROCEDURE       reduce using rule 162 (ObjectHeritage -> LPAREN IdentList RPAREN .)
    FUNCTION        reduce using rule 162 (ObjectHeritage -> LPAREN IdentList RPAREN .)
    CONSTRUCTOR     reduce using rule 162 (ObjectHeritage -> LPAREN IdentList RPAREN .)


state 273

    (161) ObjectType -> OBJECT ObjectHeritage ObjectVis ObjectBody . END
    (164) ObjectBody -> ObjectBody . ObjectTypeSection ObjectVarSection ObjectConstSection ObjectMethodList
    (170) ObjectTypeSection -> . ColonTypeDecl
    (171) ObjectTypeSection -> .
    (79) ColonTypeDecl -> . ColonTypeDecl TypeDecl SEMICOLON
    (80) ColonTypeDecl -> . TypeDecl SEMICOLON
    (81) TypeDecl -> . ID EQUALS Type
    (82) TypeDecl -> . ID EQUALS RestrictedType
    (83) TypeDecl -> . ID EQUALS TYPE Type
    (84) TypeDecl -> . ID EQUALS TYPE RestrictedType

    END             shift and go to state 283
    ID              reduce using rule 171 (ObjectTypeSection -> .)
    PROCEDURE       reduce using rule 171 (ObjectTypeSection -> .)
    FUNCTION        reduce using rule 171 (ObjectTypeSection -> .)
    CONSTRUCTOR     reduce using rule 171 (ObjectTypeSection -> .)

  ! END             [ reduce using rule 171 (ObjectTypeSection -> .) ]
  ! ID              [ shift and go to state 70 ]

    TypeDecl                       shift and go to state 68
    ObjectTypeSection              shift and go to state 284
    ColonTypeDecl                  shift and go to state 285

state 274

    (180) ClassHeritage -> LPAREN IdentList RPAREN .

    PUBLIC          reduce using rule 180 (ClassHeritage -> LPAREN IdentList RPAREN .)
    END             reduce using rule 180 (ClassHeritage -> LPAREN IdentList RPAREN .)
    ID              reduce using rule 180 (ClassHeritage -> LPAREN IdentList RPAREN .)
    PROCEDURE       reduce using rule 180 (ClassHeritage -> LPAREN IdentList RPAREN .)
    FUNCTION        reduce using rule 180 (ClassHeritage -> LPAREN IdentList RPAREN .)
    CONSTRUCTOR     reduce using rule 180 (ClassHeritage -> LPAREN IdentList RPAREN .)


state 275

    (179) ClassType -> CLASS ClassHeritage ClassVis ClassBody . END
    (182) ClassBody -> ClassBody . ClassTypeSection ClassConstSection ClassVarSection ClassMethodList
    (186) ClassTypeSection -> . ColonTypeDecl
    (187) ClassTypeSection -> .
    (79) ColonTypeDecl -> . ColonTypeDecl TypeDecl SEMICOLON
    (80) ColonTypeDecl -> . TypeDecl SEMICOLON
    (81) TypeDecl -> . ID EQUALS Type
    (82) TypeDecl -> . ID EQUALS RestrictedType
    (83) TypeDecl -> . ID EQUALS TYPE Type
    (84) TypeDecl -> . ID EQUALS TYPE RestrictedType

    END             shift and go to state 286
    ID              reduce using rule 187 (ClassTypeSection -> .)
    PROCEDURE       reduce using rule 187 (ClassTypeSection -> .)
    FUNCTION        reduce using rule 187 (ClassTypeSection -> .)
    CONSTRUCTOR     reduce using rule 187 (ClassTypeSection -> .)

  ! END             [ reduce using rule 187 (ClassTypeSection -> .) ]
  ! ID              [ shift and go to state 70 ]

    TypeDecl                       shift and go to state 68
    ColonTypeDecl                  shift and go to state 288
    ClassTypeSection               shift and go to state 287

state 276

    (129) CommaTypedConst -> COMMA . TypedConst CommaTypedConst
    (119) TypedConst -> . ConstExpr
    (120) TypedConst -> . ArrayConst
    (131) ConstExpr -> . NUMBER
    (128) ArrayConst -> . LPAREN TypedConst CommaTypedConst RPAREN

    NUMBER          shift and go to state 134
    LPAREN          shift and go to state 240

    ConstExpr                      shift and go to state 239
    ArrayConst                     shift and go to state 241
    TypedConst                     shift and go to state 289

state 277

    (128) ArrayConst -> LPAREN TypedConst CommaTypedConst . RPAREN

    RPAREN          shift and go to state 290


state 278

    (32) ColonCaseSelector -> ColonCaseSelector SEMICOLON CaseSelector .

    END             reduce using rule 32 (ColonCaseSelector -> ColonCaseSelector SEMICOLON CaseSelector .)
    ELSE            reduce using rule 32 (ColonCaseSelector -> ColonCaseSelector SEMICOLON CaseSelector .)
    SEMICOLON       reduce using rule 32 (ColonCaseSelector -> ColonCaseSelector SEMICOLON CaseSelector .)


state 279

    (31) CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt . SEMICOLON END

    SEMICOLON       shift and go to state 291


state 280

    (121) Array -> ARRAY LSQUARE ArrayBetween RSQUARE OF . TypeArray
    (126) TypeArray -> . TypeID
    (127) TypeArray -> . PointerType
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR
    (69) PointerType -> . POWER ID

    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77
    POWER           shift and go to state 187

    PointerType                    shift and go to state 293
    TypeArray                      shift and go to state 294
    TypeID                         shift and go to state 292

state 281

    (122) ArrayBetween -> NUMBER DOT DOT . NUMBER
    (123) ArrayBetween -> NUMBER DOT DOT . ID

    NUMBER          shift and go to state 295
    ID              shift and go to state 296


state 282

    (124) ArrayBetween -> ID DOT DOT . ID
    (125) ArrayBetween -> ID DOT DOT . NUMBER

    ID              shift and go to state 297
    NUMBER          shift and go to state 298


state 283

    (161) ObjectType -> OBJECT ObjectHeritage ObjectVis ObjectBody END .

    SEMICOLON       reduce using rule 161 (ObjectType -> OBJECT ObjectHeritage ObjectVis ObjectBody END .)


state 284

    (164) ObjectBody -> ObjectBody ObjectTypeSection . ObjectVarSection ObjectConstSection ObjectMethodList
    (168) ObjectVarSection -> . ColonVarDecl
    (169) ObjectVarSection -> .
    (143) ColonVarDecl -> . ColonVarDecl VarDecl SEMICOLON
    (144) ColonVarDecl -> . VarDecl SEMICOLON
    (145) VarDecl -> . IdentList COLON Type
    (132) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (133) IdentList -> . ID CommaIDTypeArgs

  ! shift/reduce conflict for ID resolved as shift
    PROCEDURE       reduce using rule 169 (ObjectVarSection -> .)
    FUNCTION        reduce using rule 169 (ObjectVarSection -> .)
    CONSTRUCTOR     reduce using rule 169 (ObjectVarSection -> .)
    END             reduce using rule 169 (ObjectVarSection -> .)
    ID              shift and go to state 10

  ! ID              [ reduce using rule 169 (ObjectVarSection -> .) ]

    ColonVarDecl                   shift and go to state 299
    IdentList                      shift and go to state 65
    VarDecl                        shift and go to state 66
    ObjectVarSection               shift and go to state 300

state 285

    (170) ObjectTypeSection -> ColonTypeDecl .
    (79) ColonTypeDecl -> ColonTypeDecl . TypeDecl SEMICOLON
    (81) TypeDecl -> . ID EQUALS Type
    (82) TypeDecl -> . ID EQUALS RestrictedType
    (83) TypeDecl -> . ID EQUALS TYPE Type
    (84) TypeDecl -> . ID EQUALS TYPE RestrictedType

    PROCEDURE       reduce using rule 170 (ObjectTypeSection -> ColonTypeDecl .)
    FUNCTION        reduce using rule 170 (ObjectTypeSection -> ColonTypeDecl .)
    CONSTRUCTOR     reduce using rule 170 (ObjectTypeSection -> ColonTypeDecl .)
    END             reduce using rule 170 (ObjectTypeSection -> ColonTypeDecl .)
    ID              shift and go to state 70

  ! ID              [ reduce using rule 170 (ObjectTypeSection -> ColonTypeDecl .) ]

    TypeDecl                       shift and go to state 119

state 286

    (179) ClassType -> CLASS ClassHeritage ClassVis ClassBody END .

    SEMICOLON       reduce using rule 179 (ClassType -> CLASS ClassHeritage ClassVis ClassBody END .)


state 287

    (182) ClassBody -> ClassBody ClassTypeSection . ClassConstSection ClassVarSection ClassMethodList
    (188) ClassConstSection -> . ColonConstDecl
    (189) ClassConstSection -> .
    (115) ColonConstDecl -> . ColonConstDecl ConstDecl SEMICOLON
    (116) ColonConstDecl -> . ConstDecl SEMICOLON
    (117) ConstDecl -> . ID EQUALS ConstExpr
    (118) ConstDecl -> . ID COLON TypeID EQUALS TypedConst

  ! shift/reduce conflict for ID resolved as shift
    PROCEDURE       reduce using rule 189 (ClassConstSection -> .)
    FUNCTION        reduce using rule 189 (ClassConstSection -> .)
    CONSTRUCTOR     reduce using rule 189 (ClassConstSection -> .)
    END             reduce using rule 189 (ClassConstSection -> .)
    ID              shift and go to state 40

  ! ID              [ reduce using rule 189 (ClassConstSection -> .) ]

    ColonConstDecl                 shift and go to state 301
    ClassConstSection              shift and go to state 302
    ConstDecl                      shift and go to state 39

state 288

    (186) ClassTypeSection -> ColonTypeDecl .
    (79) ColonTypeDecl -> ColonTypeDecl . TypeDecl SEMICOLON
    (81) TypeDecl -> . ID EQUALS Type
    (82) TypeDecl -> . ID EQUALS RestrictedType
    (83) TypeDecl -> . ID EQUALS TYPE Type
    (84) TypeDecl -> . ID EQUALS TYPE RestrictedType

    PROCEDURE       reduce using rule 186 (ClassTypeSection -> ColonTypeDecl .)
    FUNCTION        reduce using rule 186 (ClassTypeSection -> ColonTypeDecl .)
    CONSTRUCTOR     reduce using rule 186 (ClassTypeSection -> ColonTypeDecl .)
    END             reduce using rule 186 (ClassTypeSection -> ColonTypeDecl .)
    ID              shift and go to state 70

  ! ID              [ reduce using rule 186 (ClassTypeSection -> ColonTypeDecl .) ]

    TypeDecl                       shift and go to state 119

state 289

    (129) CommaTypedConst -> COMMA TypedConst . CommaTypedConst
    (129) CommaTypedConst -> . COMMA TypedConst CommaTypedConst
    (130) CommaTypedConst -> .

    COMMA           shift and go to state 276
    RPAREN          reduce using rule 130 (CommaTypedConst -> .)

    CommaTypedConst                shift and go to state 303

state 290

    (128) ArrayConst -> LPAREN TypedConst CommaTypedConst RPAREN .

    COMMA           reduce using rule 128 (ArrayConst -> LPAREN TypedConst CommaTypedConst RPAREN .)
    RPAREN          reduce using rule 128 (ArrayConst -> LPAREN TypedConst CommaTypedConst RPAREN .)
    SEMICOLON       reduce using rule 128 (ArrayConst -> LPAREN TypedConst CommaTypedConst RPAREN .)


state 291

    (31) CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON . END

    END             shift and go to state 304


state 292

    (126) TypeArray -> TypeID .

    SEMICOLON       reduce using rule 126 (TypeArray -> TypeID .)
    RPAREN          reduce using rule 126 (TypeArray -> TypeID .)


state 293

    (127) TypeArray -> PointerType .

    SEMICOLON       reduce using rule 127 (TypeArray -> PointerType .)
    RPAREN          reduce using rule 127 (TypeArray -> PointerType .)


state 294

    (121) Array -> ARRAY LSQUARE ArrayBetween RSQUARE OF TypeArray .

    SEMICOLON       reduce using rule 121 (Array -> ARRAY LSQUARE ArrayBetween RSQUARE OF TypeArray .)
    RPAREN          reduce using rule 121 (Array -> ARRAY LSQUARE ArrayBetween RSQUARE OF TypeArray .)


state 295

    (122) ArrayBetween -> NUMBER DOT DOT NUMBER .

    RSQUARE         reduce using rule 122 (ArrayBetween -> NUMBER DOT DOT NUMBER .)


state 296

    (123) ArrayBetween -> NUMBER DOT DOT ID .

    RSQUARE         reduce using rule 123 (ArrayBetween -> NUMBER DOT DOT ID .)


state 297

    (124) ArrayBetween -> ID DOT DOT ID .

    RSQUARE         reduce using rule 124 (ArrayBetween -> ID DOT DOT ID .)


state 298

    (125) ArrayBetween -> ID DOT DOT NUMBER .

    RSQUARE         reduce using rule 125 (ArrayBetween -> ID DOT DOT NUMBER .)


state 299

    (168) ObjectVarSection -> ColonVarDecl .
    (143) ColonVarDecl -> ColonVarDecl . VarDecl SEMICOLON
    (145) VarDecl -> . IdentList COLON Type
    (132) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (133) IdentList -> . ID CommaIDTypeArgs

    PROCEDURE       reduce using rule 168 (ObjectVarSection -> ColonVarDecl .)
    FUNCTION        reduce using rule 168 (ObjectVarSection -> ColonVarDecl .)
    CONSTRUCTOR     reduce using rule 168 (ObjectVarSection -> ColonVarDecl .)
    END             reduce using rule 168 (ObjectVarSection -> ColonVarDecl .)
    ID              shift and go to state 10

  ! ID              [ reduce using rule 168 (ObjectVarSection -> ColonVarDecl .) ]

    IdentList                      shift and go to state 65
    VarDecl                        shift and go to state 114

state 300

    (164) ObjectBody -> ObjectBody ObjectTypeSection ObjectVarSection . ObjectConstSection ObjectMethodList
    (172) ObjectConstSection -> . ColonConstDecl
    (173) ObjectConstSection -> .
    (115) ColonConstDecl -> . ColonConstDecl ConstDecl SEMICOLON
    (116) ColonConstDecl -> . ConstDecl SEMICOLON
    (117) ConstDecl -> . ID EQUALS ConstExpr
    (118) ConstDecl -> . ID COLON TypeID EQUALS TypedConst

  ! shift/reduce conflict for ID resolved as shift
    PROCEDURE       reduce using rule 173 (ObjectConstSection -> .)
    FUNCTION        reduce using rule 173 (ObjectConstSection -> .)
    CONSTRUCTOR     reduce using rule 173 (ObjectConstSection -> .)
    END             reduce using rule 173 (ObjectConstSection -> .)
    ID              shift and go to state 40

  ! ID              [ reduce using rule 173 (ObjectConstSection -> .) ]

    ColonConstDecl                 shift and go to state 305
    ObjectConstSection             shift and go to state 306
    ConstDecl                      shift and go to state 39

state 301

    (188) ClassConstSection -> ColonConstDecl .
    (115) ColonConstDecl -> ColonConstDecl . ConstDecl SEMICOLON
    (117) ConstDecl -> . ID EQUALS ConstExpr
    (118) ConstDecl -> . ID COLON TypeID EQUALS TypedConst

    PROCEDURE       reduce using rule 188 (ClassConstSection -> ColonConstDecl .)
    FUNCTION        reduce using rule 188 (ClassConstSection -> ColonConstDecl .)
    CONSTRUCTOR     reduce using rule 188 (ClassConstSection -> ColonConstDecl .)
    END             reduce using rule 188 (ClassConstSection -> ColonConstDecl .)
    ID              shift and go to state 40

  ! ID              [ reduce using rule 188 (ClassConstSection -> ColonConstDecl .) ]

    ConstDecl                      shift and go to state 83

state 302

    (182) ClassBody -> ClassBody ClassTypeSection ClassConstSection . ClassVarSection ClassMethodList
    (190) ClassVarSection -> . ColonVarDecl
    (191) ClassVarSection -> .
    (143) ColonVarDecl -> . ColonVarDecl VarDecl SEMICOLON
    (144) ColonVarDecl -> . VarDecl SEMICOLON
    (145) VarDecl -> . IdentList COLON Type
    (132) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (133) IdentList -> . ID CommaIDTypeArgs

  ! shift/reduce conflict for ID resolved as shift
    PROCEDURE       reduce using rule 191 (ClassVarSection -> .)
    FUNCTION        reduce using rule 191 (ClassVarSection -> .)
    CONSTRUCTOR     reduce using rule 191 (ClassVarSection -> .)
    END             reduce using rule 191 (ClassVarSection -> .)
    ID              shift and go to state 10

  ! ID              [ reduce using rule 191 (ClassVarSection -> .) ]

    ColonVarDecl                   shift and go to state 307
    IdentList                      shift and go to state 65
    VarDecl                        shift and go to state 66
    ClassVarSection                shift and go to state 308

state 303

    (129) CommaTypedConst -> COMMA TypedConst CommaTypedConst .

    RPAREN          reduce using rule 129 (CommaTypedConst -> COMMA TypedConst CommaTypedConst .)


state 304

    (31) CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .

    INHERITED       reduce using rule 31 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .)
    LPAREN          reduce using rule 31 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .)
    BREAK           reduce using rule 31 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .)
    CONTINUE        reduce using rule 31 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .)
    ID              reduce using rule 31 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .)
    BEGIN           reduce using rule 31 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .)
    IF              reduce using rule 31 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .)
    CASE            reduce using rule 31 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .)
    REPEAT          reduce using rule 31 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .)
    WHILE           reduce using rule 31 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .)
    END             reduce using rule 31 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .)
    UNTIL           reduce using rule 31 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .)
    ELSE            reduce using rule 31 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .)
    SEMICOLON       reduce using rule 31 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE CompoundStmt SEMICOLON END .)


state 305

    (172) ObjectConstSection -> ColonConstDecl .
    (115) ColonConstDecl -> ColonConstDecl . ConstDecl SEMICOLON
    (117) ConstDecl -> . ID EQUALS ConstExpr
    (118) ConstDecl -> . ID COLON TypeID EQUALS TypedConst

    PROCEDURE       reduce using rule 172 (ObjectConstSection -> ColonConstDecl .)
    FUNCTION        reduce using rule 172 (ObjectConstSection -> ColonConstDecl .)
    CONSTRUCTOR     reduce using rule 172 (ObjectConstSection -> ColonConstDecl .)
    END             reduce using rule 172 (ObjectConstSection -> ColonConstDecl .)
    ID              shift and go to state 40

  ! ID              [ reduce using rule 172 (ObjectConstSection -> ColonConstDecl .) ]

    ConstDecl                      shift and go to state 83

state 306

    (164) ObjectBody -> ObjectBody ObjectTypeSection ObjectVarSection ObjectConstSection . ObjectMethodList
    (174) ObjectMethodList -> . ObjectMethodHeading
    (175) ObjectMethodList -> .
    (176) ObjectMethodHeading -> . ProcedureHeadingSemicolon
    (177) ObjectMethodHeading -> . FuncHeadingSemicolon
    (178) ObjectMethodHeading -> . ConstrucHeadingSemicolon
    (159) ProcedureHeadingSemicolon -> . PROCEDURE Designator FormalParams SEMICOLON
    (154) FuncHeadingSemicolon -> . FUNCTION Designator FormalParams COLON Type SEMICOLON
    (151) ConstrucHeadingSemicolon -> . CONSTRUCTOR Designator FormalParams SEMICOLON

    END             reduce using rule 175 (ObjectMethodList -> .)
    ID              reduce using rule 175 (ObjectMethodList -> .)
    PROCEDURE       shift and go to state 316
    FUNCTION        shift and go to state 310
    CONSTRUCTOR     shift and go to state 313

  ! PROCEDURE       [ reduce using rule 175 (ObjectMethodList -> .) ]
  ! FUNCTION        [ reduce using rule 175 (ObjectMethodList -> .) ]
  ! CONSTRUCTOR     [ reduce using rule 175 (ObjectMethodList -> .) ]

    FuncHeadingSemicolon           shift and go to state 309
    ProcedureHeadingSemicolon      shift and go to state 311
    ConstrucHeadingSemicolon       shift and go to state 312
    ObjectMethodList               shift and go to state 314
    ObjectMethodHeading            shift and go to state 315

state 307

    (190) ClassVarSection -> ColonVarDecl .
    (143) ColonVarDecl -> ColonVarDecl . VarDecl SEMICOLON
    (145) VarDecl -> . IdentList COLON Type
    (132) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (133) IdentList -> . ID CommaIDTypeArgs

    PROCEDURE       reduce using rule 190 (ClassVarSection -> ColonVarDecl .)
    FUNCTION        reduce using rule 190 (ClassVarSection -> ColonVarDecl .)
    CONSTRUCTOR     reduce using rule 190 (ClassVarSection -> ColonVarDecl .)
    END             reduce using rule 190 (ClassVarSection -> ColonVarDecl .)
    ID              shift and go to state 10

  ! ID              [ reduce using rule 190 (ClassVarSection -> ColonVarDecl .) ]

    IdentList                      shift and go to state 65
    VarDecl                        shift and go to state 114

state 308

    (182) ClassBody -> ClassBody ClassTypeSection ClassConstSection ClassVarSection . ClassMethodList
    (192) ClassMethodList -> . ClassMethodHeading
    (193) ClassMethodList -> .
    (194) ClassMethodHeading -> . ProcedureHeadingSemicolon
    (195) ClassMethodHeading -> . FuncHeadingSemicolon
    (196) ClassMethodHeading -> . ConstrucHeadingSemicolon
    (159) ProcedureHeadingSemicolon -> . PROCEDURE Designator FormalParams SEMICOLON
    (154) FuncHeadingSemicolon -> . FUNCTION Designator FormalParams COLON Type SEMICOLON
    (151) ConstrucHeadingSemicolon -> . CONSTRUCTOR Designator FormalParams SEMICOLON

    END             reduce using rule 193 (ClassMethodList -> .)
    ID              reduce using rule 193 (ClassMethodList -> .)
    PROCEDURE       shift and go to state 316
    FUNCTION        shift and go to state 310
    CONSTRUCTOR     shift and go to state 313

  ! PROCEDURE       [ reduce using rule 193 (ClassMethodList -> .) ]
  ! FUNCTION        [ reduce using rule 193 (ClassMethodList -> .) ]
  ! CONSTRUCTOR     [ reduce using rule 193 (ClassMethodList -> .) ]

    ProcedureHeadingSemicolon      shift and go to state 317
    ConstrucHeadingSemicolon       shift and go to state 318
    ClassMethodHeading             shift and go to state 319
    FuncHeadingSemicolon           shift and go to state 320
    ClassMethodList                shift and go to state 321

state 309

    (177) ObjectMethodHeading -> FuncHeadingSemicolon .

    END             reduce using rule 177 (ObjectMethodHeading -> FuncHeadingSemicolon .)
    ID              reduce using rule 177 (ObjectMethodHeading -> FuncHeadingSemicolon .)
    PROCEDURE       reduce using rule 177 (ObjectMethodHeading -> FuncHeadingSemicolon .)
    FUNCTION        reduce using rule 177 (ObjectMethodHeading -> FuncHeadingSemicolon .)
    CONSTRUCTOR     reduce using rule 177 (ObjectMethodHeading -> FuncHeadingSemicolon .)


state 310

    (154) FuncHeadingSemicolon -> FUNCTION . Designator FormalParams COLON Type SEMICOLON
    (108) Designator -> . ID DesSubEleStar

    ID              shift and go to state 36

    Designator                     shift and go to state 322

state 311

    (176) ObjectMethodHeading -> ProcedureHeadingSemicolon .

    END             reduce using rule 176 (ObjectMethodHeading -> ProcedureHeadingSemicolon .)
    ID              reduce using rule 176 (ObjectMethodHeading -> ProcedureHeadingSemicolon .)
    PROCEDURE       reduce using rule 176 (ObjectMethodHeading -> ProcedureHeadingSemicolon .)
    FUNCTION        reduce using rule 176 (ObjectMethodHeading -> ProcedureHeadingSemicolon .)
    CONSTRUCTOR     reduce using rule 176 (ObjectMethodHeading -> ProcedureHeadingSemicolon .)


state 312

    (178) ObjectMethodHeading -> ConstrucHeadingSemicolon .

    END             reduce using rule 178 (ObjectMethodHeading -> ConstrucHeadingSemicolon .)
    ID              reduce using rule 178 (ObjectMethodHeading -> ConstrucHeadingSemicolon .)
    PROCEDURE       reduce using rule 178 (ObjectMethodHeading -> ConstrucHeadingSemicolon .)
    FUNCTION        reduce using rule 178 (ObjectMethodHeading -> ConstrucHeadingSemicolon .)
    CONSTRUCTOR     reduce using rule 178 (ObjectMethodHeading -> ConstrucHeadingSemicolon .)


state 313

    (151) ConstrucHeadingSemicolon -> CONSTRUCTOR . Designator FormalParams SEMICOLON
    (108) Designator -> . ID DesSubEleStar

    ID              shift and go to state 36

    Designator                     shift and go to state 323

state 314

    (164) ObjectBody -> ObjectBody ObjectTypeSection ObjectVarSection ObjectConstSection ObjectMethodList .

    END             reduce using rule 164 (ObjectBody -> ObjectBody ObjectTypeSection ObjectVarSection ObjectConstSection ObjectMethodList .)
    ID              reduce using rule 164 (ObjectBody -> ObjectBody ObjectTypeSection ObjectVarSection ObjectConstSection ObjectMethodList .)
    PROCEDURE       reduce using rule 164 (ObjectBody -> ObjectBody ObjectTypeSection ObjectVarSection ObjectConstSection ObjectMethodList .)
    FUNCTION        reduce using rule 164 (ObjectBody -> ObjectBody ObjectTypeSection ObjectVarSection ObjectConstSection ObjectMethodList .)
    CONSTRUCTOR     reduce using rule 164 (ObjectBody -> ObjectBody ObjectTypeSection ObjectVarSection ObjectConstSection ObjectMethodList .)


state 315

    (174) ObjectMethodList -> ObjectMethodHeading .

    END             reduce using rule 174 (ObjectMethodList -> ObjectMethodHeading .)
    ID              reduce using rule 174 (ObjectMethodList -> ObjectMethodHeading .)
    PROCEDURE       reduce using rule 174 (ObjectMethodList -> ObjectMethodHeading .)
    FUNCTION        reduce using rule 174 (ObjectMethodList -> ObjectMethodHeading .)
    CONSTRUCTOR     reduce using rule 174 (ObjectMethodList -> ObjectMethodHeading .)


state 316

    (159) ProcedureHeadingSemicolon -> PROCEDURE . Designator FormalParams SEMICOLON
    (108) Designator -> . ID DesSubEleStar

    ID              shift and go to state 36

    Designator                     shift and go to state 324

state 317

    (194) ClassMethodHeading -> ProcedureHeadingSemicolon .

    END             reduce using rule 194 (ClassMethodHeading -> ProcedureHeadingSemicolon .)
    ID              reduce using rule 194 (ClassMethodHeading -> ProcedureHeadingSemicolon .)
    PROCEDURE       reduce using rule 194 (ClassMethodHeading -> ProcedureHeadingSemicolon .)
    FUNCTION        reduce using rule 194 (ClassMethodHeading -> ProcedureHeadingSemicolon .)
    CONSTRUCTOR     reduce using rule 194 (ClassMethodHeading -> ProcedureHeadingSemicolon .)


state 318

    (196) ClassMethodHeading -> ConstrucHeadingSemicolon .

    END             reduce using rule 196 (ClassMethodHeading -> ConstrucHeadingSemicolon .)
    ID              reduce using rule 196 (ClassMethodHeading -> ConstrucHeadingSemicolon .)
    PROCEDURE       reduce using rule 196 (ClassMethodHeading -> ConstrucHeadingSemicolon .)
    FUNCTION        reduce using rule 196 (ClassMethodHeading -> ConstrucHeadingSemicolon .)
    CONSTRUCTOR     reduce using rule 196 (ClassMethodHeading -> ConstrucHeadingSemicolon .)


state 319

    (192) ClassMethodList -> ClassMethodHeading .

    END             reduce using rule 192 (ClassMethodList -> ClassMethodHeading .)
    ID              reduce using rule 192 (ClassMethodList -> ClassMethodHeading .)
    PROCEDURE       reduce using rule 192 (ClassMethodList -> ClassMethodHeading .)
    FUNCTION        reduce using rule 192 (ClassMethodList -> ClassMethodHeading .)
    CONSTRUCTOR     reduce using rule 192 (ClassMethodList -> ClassMethodHeading .)


state 320

    (195) ClassMethodHeading -> FuncHeadingSemicolon .

    END             reduce using rule 195 (ClassMethodHeading -> FuncHeadingSemicolon .)
    ID              reduce using rule 195 (ClassMethodHeading -> FuncHeadingSemicolon .)
    PROCEDURE       reduce using rule 195 (ClassMethodHeading -> FuncHeadingSemicolon .)
    FUNCTION        reduce using rule 195 (ClassMethodHeading -> FuncHeadingSemicolon .)
    CONSTRUCTOR     reduce using rule 195 (ClassMethodHeading -> FuncHeadingSemicolon .)


state 321

    (182) ClassBody -> ClassBody ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .

    END             reduce using rule 182 (ClassBody -> ClassBody ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .)
    ID              reduce using rule 182 (ClassBody -> ClassBody ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .)
    PROCEDURE       reduce using rule 182 (ClassBody -> ClassBody ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .)
    FUNCTION        reduce using rule 182 (ClassBody -> ClassBody ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .)
    CONSTRUCTOR     reduce using rule 182 (ClassBody -> ClassBody ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .)


state 322

    (154) FuncHeadingSemicolon -> FUNCTION Designator . FormalParams COLON Type SEMICOLON
    (155) FormalParams -> . LPAREN ParamIdentList RPAREN
    (156) FormalParams -> .

    LPAREN          shift and go to state 79
    COLON           reduce using rule 156 (FormalParams -> .)

    FormalParams                   shift and go to state 325

state 323

    (151) ConstrucHeadingSemicolon -> CONSTRUCTOR Designator . FormalParams SEMICOLON
    (155) FormalParams -> . LPAREN ParamIdentList RPAREN
    (156) FormalParams -> .

    LPAREN          shift and go to state 79
    SEMICOLON       reduce using rule 156 (FormalParams -> .)

    FormalParams                   shift and go to state 326

state 324

    (159) ProcedureHeadingSemicolon -> PROCEDURE Designator . FormalParams SEMICOLON
    (155) FormalParams -> . LPAREN ParamIdentList RPAREN
    (156) FormalParams -> .

    LPAREN          shift and go to state 79
    SEMICOLON       reduce using rule 156 (FormalParams -> .)

    FormalParams                   shift and go to state 327

state 325

    (154) FuncHeadingSemicolon -> FUNCTION Designator FormalParams . COLON Type SEMICOLON

    COLON           shift and go to state 328


state 326

    (151) ConstrucHeadingSemicolon -> CONSTRUCTOR Designator FormalParams . SEMICOLON

    SEMICOLON       shift and go to state 329


state 327

    (159) ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams . SEMICOLON

    SEMICOLON       shift and go to state 330


state 328

    (154) FuncHeadingSemicolon -> FUNCTION Designator FormalParams COLON . Type SEMICOLON
    (61) Type -> . TypeID
    (62) Type -> . SimpleType
    (63) Type -> . PointerType
    (64) Type -> . StringType
    (65) Type -> . ProcedureType
    (66) Type -> . Array
    (67) Type -> . ID
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR
    (68) SimpleType -> . DOUBLE
    (69) PointerType -> . POWER ID
    (70) StringType -> . STRING
    (71) ProcedureType -> . ProcedureHeading
    (72) ProcedureType -> . FuncHeading
    (121) Array -> . ARRAY LSQUARE ArrayBetween RSQUARE OF TypeArray
    (158) ProcedureHeading -> . PROCEDURE Designator FormalParams
    (153) FuncHeading -> . FUNCTION Designator FormalParams COLON Type

    ID              shift and go to state 190
    INTEGER         shift and go to state 78
    REAL            shift and go to state 74
    CHAR            shift and go to state 77
    DOUBLE          shift and go to state 191
    POWER           shift and go to state 187
    STRING          shift and go to state 189
    ARRAY           shift and go to state 188
    PROCEDURE       shift and go to state 20
    FUNCTION        shift and go to state 22

    TypeID                         shift and go to state 180
    ProcedureType                  shift and go to state 184
    FuncHeading                    shift and go to state 185
    SimpleType                     shift and go to state 186
    StringType                     shift and go to state 183
    ProcedureHeading               shift and go to state 181
    PointerType                    shift and go to state 192
    Array                          shift and go to state 193
    Type                           shift and go to state 331

state 329

    (151) ConstrucHeadingSemicolon -> CONSTRUCTOR Designator FormalParams SEMICOLON .

    END             reduce using rule 151 (ConstrucHeadingSemicolon -> CONSTRUCTOR Designator FormalParams SEMICOLON .)
    ID              reduce using rule 151 (ConstrucHeadingSemicolon -> CONSTRUCTOR Designator FormalParams SEMICOLON .)
    PROCEDURE       reduce using rule 151 (ConstrucHeadingSemicolon -> CONSTRUCTOR Designator FormalParams SEMICOLON .)
    FUNCTION        reduce using rule 151 (ConstrucHeadingSemicolon -> CONSTRUCTOR Designator FormalParams SEMICOLON .)
    CONSTRUCTOR     reduce using rule 151 (ConstrucHeadingSemicolon -> CONSTRUCTOR Designator FormalParams SEMICOLON .)


state 330

    (159) ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .

    END             reduce using rule 159 (ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .)
    ID              reduce using rule 159 (ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .)
    PROCEDURE       reduce using rule 159 (ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .)
    FUNCTION        reduce using rule 159 (ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .)
    CONSTRUCTOR     reduce using rule 159 (ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .)


state 331

    (154) FuncHeadingSemicolon -> FUNCTION Designator FormalParams COLON Type . SEMICOLON

    SEMICOLON       shift and go to state 332


state 332

    (154) FuncHeadingSemicolon -> FUNCTION Designator FormalParams COLON Type SEMICOLON .

    END             reduce using rule 154 (FuncHeadingSemicolon -> FUNCTION Designator FormalParams COLON Type SEMICOLON .)
    ID              reduce using rule 154 (FuncHeadingSemicolon -> FUNCTION Designator FormalParams COLON Type SEMICOLON .)
    PROCEDURE       reduce using rule 154 (FuncHeadingSemicolon -> FUNCTION Designator FormalParams COLON Type SEMICOLON .)
    FUNCTION        reduce using rule 154 (FuncHeadingSemicolon -> FUNCTION Designator FormalParams COLON Type SEMICOLON .)
    CONSTRUCTOR     reduce using rule 154 (FuncHeadingSemicolon -> FUNCTION Designator FormalParams COLON Type SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 284 resolved as shift
WARNING: shift/reduce conflict for ID in state 287 resolved as shift
WARNING: shift/reduce conflict for ID in state 300 resolved as shift
WARNING: shift/reduce conflict for ID in state 302 resolved as shift


# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'PLUS MINUS MULTIPLY DIVIDE EQUALS NOTEQUALS LANGLE RANGLE LSQUARE RSQUARE DOT DOTDOT COMMA INVERTCOMMA INVERTDOUBLECOMMA LPAREN RPAREN COLON SEMICOLON POWER ATRATE LCURLY RCURLY AMPERSAND PERCENT DOUBLESTAR ASSIGNTO LEQ GEQ DOUBLESLASH RANGE NUMBER CHARACTER UNDERSCORE ID USERSTRING COMMENT ONE ARRAY CONSTANT TO PROGRAM INHERITED VAR TYPE UNTIL REAL DO STRING ELSE BREAK NOT INTEGER MOD CASE SHR DOUBLE WHILE CONTINUE DIV SHL PROCEDURE AND FUNCTION THEN CHAR AS IF END FOR SELF PUBLIC BEGIN REPEAT OBJECT XOR CLASS OF CONSTRUCTOR OR LAMBDA Goal : Program  Program : PROGRAM ID  SEMICOLON Block  Block : CompoundStmt\n    | DeclSection CompoundStmt DeclSection : DeclSection WhichSection\n    |  WhichSection : ConstSection\n    | TypeSection\n    | VarSection\n    | ProcedureDeclSection  CompoundStmt : BEGIN StmtList END SEMICOLON  StmtList : Statement SEMICOLON StmtList\n    | Statement SEMICOLON  Statement : SimpleStatement\n    | StructStmt \n    |  SimpleStatement : Designator\n    | Designator LPAREN ExprList RPAREN\n    | Designator ASSIGNTO Expression\n    | INHERITED\n    | LPAREN Expression RPAREN StructStmt : CompoundStmt\n    | ConditionalStmt \n    | LoopStmt  ConditionalStmt : IfStmt SEMICOLON\n    | CaseStmt SEMICOLON  IfStmt : IF Expression THEN Statement \n    | IF Expression THEN Statement ELSE Statement  CaseStmt : CASE Expression OF CaseSelector ColonCaseSelector END\n    | CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END  ColonCaseSelector : ColonCaseSelector SEMICOLON CaseSelector \n    |  CaseSelector : CaseLabel COLON Statement  CaseLabel : NUMBER  LoopStmt : RepeatStmt\n    | WhileStmt  RepeatStmt : REPEAT Statement UNTIL Expression SEMICOLON  WhileStmt : WHILE Expression DO Statement  Expression : SimpleExpression RelSimpleStar  RelSimpleStar : RelOp SimpleExpression RelSimpleStar\n    |  SimpleExpression : PLUS Term AddTermStar\n    | MINUS Term AddTermStar \n    | Term AddTermStar  AddTermStar : AddOp Term AddTermStar\n    |  Term : Factor MulFacStar  MulFacStar : MulOp Factor MulFacStar\n    |  Factor : Designator \n    | Designator LPAREN ExprList RPAREN\n    | USERSTRING\n    | NUMBER\n    | LPAREN Expression RPAREN\n    | NOT Factor\n    | INHERITED Designator\n    | INHERITED\n    | TypeID LPAREN Expression RPAREN\n    | LPAREN LambFunc RPAREN  Type : TypeID\n    | SimpleType\n    | PointerType\n    | StringType\n    | ProcedureType \n    | Array \n    | ID SimpleType : OrdinalType\n    | RealType  PointerType : POWER ID  StringType : STRING  ProcedureType : ProcedureHeading\n    | FuncHeading\n     TypeArgs : LPAREN TypeID RPAREN\n    | LPAREN STRING RPAREN  TypeID : INTEGER\n    | REAL\n    | CHAR  OrdinalType : INTEGER RealType : DOUBLE TypeSection : TYPE ColonTypeDecl  ColonTypeDecl : ColonTypeDecl TypeDecl SEMICOLON \n    |  TypeDecl : ID EQUALS Type\n    | ID EQUALS RestrictedType\n    | ID EQUALS TYPE Type\n    | ID EQUALS TYPE RestrictedType  RestrictedType : ObjectType\n    | ClassType  RelOp : LANGLE\n    | RANGLE\n    | GEQ\n    | LEQ\n    | NOTEQUALS\n    | EQUALS AddOp : PLUS\n    | MINUS\n    | OR\n    | XOR  MulOp : MULTIPLY\n    | DIVIDE\n    | DIV\n    | MOD\n    | AND\n    | SHL\n    | SHR  CommaExpression : CommaExpression COMMA Expression\n    |  ExprList : Expression CommaExpression Designator : ID DesSubEleStar DesSubEleStar : DesSubEleStar DesignatorSubElem \n    |  DesignatorSubElem : DOT ID\n    | LSQUARE ExprList RSQUARE\n    | POWER SEMICOLON  ConstSection : CONSTANT ColonConstDecl\n    |  ColonConstDecl : ColonConstDecl ConstDecl SEMICOLON\n    |  ConstDecl : ID EQUALS ConstExpr\n    | ID COLON TypeID EQUALS TypedConst  TypedConst : ConstExpr\n    | ArrayConst  Array : ARRAY LSQUARE ONE DOTDOT OrdinalType RSQUARE OF TypeArray  TypeArray : TypeID\n    | PointerType  ArrayConst : LPAREN TypedConst CommaTypedConst RPAREN  CommaTypedConst : CommaTypedConst COMMA TypedConst \n    |  ConstExpr :  IdentList : ID TypeArgs CommaIDTypeArgs\n    | ID CommaIDTypeArgs CommaIDTypeArgs : CommaIDTypeArgs COMMA ID TypeArgs\n    | CommaIDTypeArgs COMMA ID                 \n    |  ParamIdentList : ParamIdent COMMA ParamIdentList\n    | ParamIdent\n    |  ParamIdent : ID COLON Type\n    | ID  VarSection : VAR ColonVarDecl  ColonVarDecl : VarDecl SEMICOLON ColonVarDecl\n    |  VarDecl : IdentList COLON Type ProcedureDeclSection : ProcedureDecl\n    | FuncDecl\n    | ConstrucDecl\n    | LambFuncDecl  ConstrucDecl : ConstrucHeading SEMICOLON Block  ConstrucHeading : CONSTRUCTOR Designator FormalParams  ConstrucHeadingSemicolon : CONSTRUCTOR Designator FormalParams SEMICOLON  FuncDecl : FuncHeading SEMICOLON Block  FuncHeading : FUNCTION Designator FormalParams COLON Type  FuncHeadingSemicolon : FUNCTION Designator FormalParams COLON Type SEMICOLON  FormalParams : LPAREN ParamIdentList RPAREN\n    |  ProcedureDecl : ProcedureHeading SEMICOLON Block  ProcedureHeading : PROCEDURE Designator FormalParams  ProcedureHeadingSemicolon : PROCEDURE Designator FormalParams SEMICOLON  LambFuncDecl : ID COLON SimpleExpression  LambFunc : ID LPAREN ConstExpr RPAREN  ObjectType : OBJECT ObjectHeritage ObjectBody END ObjectHeritage : LPAREN IdentList RPAREN\n    |  ObjectBody : ObjectBody ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList\n    |  ObjectVis : PUBLIC\n    |  ObjectVarSection : ColonVarDecl\n    |  ObjectTypeSection : ColonTypeDecl \n    |  ObjectConstSection : ColonConstDecl \n    |  ObjectMethodList : ObjectMethodHeading \n    |  ObjectMethodHeading : ProcedureHeadingSemicolon\n    | FuncHeadingSemicolon \n    | ConstrucHeadingSemicolon  ClassType : CLASS ClassHeritage ClassBody END ClassHeritage : LPAREN IdentList RPAREN\n    |  ClassBody : ClassBody ClassVis ClassTypeSection ClassConstSection ClassVarSection ClassMethodList\n    |  ClassVis : PUBLIC\n    |  ClassTypeSection : ColonTypeDecl \n    |  ClassConstSection : ColonConstDecl \n    |  ClassVarSection : ColonVarDecl \n    |  ClassMethodList : ClassMethodHeading \n    |  ClassMethodHeading : ProcedureHeadingSemicolon\n    | FuncHeadingSemicolon \n    | ConstrucHeadingSemicolon '
    
_lr_action_items = {'REAL':([34,40,43,44,59,67,71,73,80,81,82,97,101,108,112,114,115,116,117,118,119,120,122,124,125,127,128,129,130,131,132,133,134,135,137,146,151,157,158,182,206,221,230,284,316,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,-103,-100,-105,65,-99,-101,-104,-102,65,65,-98,-97,-95,-96,-93,-91,-89,65,-94,-92,-90,65,65,65,65,65,65,65,65,65,65,]),'DO':([42,68,70,72,74,76,77,78,85,87,113,121,123,126,136,138,140,147,184,186,187,188,190,191,192,198,200,222,224,225,226,227,231,],[-111,-53,-49,-50,-52,-46,-41,-57,-109,150,-47,-46,-46,-44,-39,-56,-55,-110,-59,-54,-49,-43,-42,-46,-41,-114,-112,-58,-48,-51,-45,-40,-113,]),'CONSTANT':([5,6,8,10,12,14,15,17,19,21,22,23,24,26,28,29,42,50,51,52,55,60,61,68,70,72,74,76,78,85,91,94,98,102,103,107,113,121,123,126,138,140,147,155,176,181,184,186,187,188,190,191,198,200,222,224,225,226,231,],[-6,15,-3,-146,-144,-10,-118,-145,-7,-147,-8,-142,-9,-5,-82,-4,-111,-6,-115,-6,-140,-6,-80,-53,-49,-50,-52,-46,-57,-109,-156,-151,-142,-159,-148,-11,-47,-46,-46,-44,-56,-55,-110,-117,-141,-81,-59,-54,-49,-43,-42,-46,-114,-112,-58,-48,-51,-45,-113,]),'LSQUARE':([42,85,110,147,168,198,200,231,],[-111,146,-111,-110,211,-114,-112,-113,]),'NOTEQUALS':([42,68,70,72,74,76,77,78,85,110,113,121,123,126,138,140,147,184,186,187,188,190,191,192,198,200,222,224,225,226,231,],[-111,-53,-49,-50,-52,-46,130,-57,-109,-111,-47,-46,-46,-44,-56,-55,-110,-59,-54,-49,-43,-42,-46,130,-114,-112,-58,-48,-51,-45,-113,]),'OBJECT':([182,221,],[215,215,]),'THEN':([42,68,70,72,74,76,77,78,85,86,113,121,123,126,136,138,140,147,184,186,187,188,190,191,192,198,200,222,224,225,226,227,231,],[-111,-53,-49,-50,-52,-46,-41,-57,-109,149,-47,-46,-46,-44,-39,-56,-55,-110,-59,-54,-49,-43,-42,-46,-41,-114,-112,-58,-48,-51,-45,-40,-113,]),'NUMBER':([34,40,43,44,59,67,71,73,80,81,82,108,112,114,115,116,117,118,119,120,122,124,125,127,128,129,130,131,132,133,134,135,137,139,146,151,230,247,],[68,68,68,68,68,68,68,68,68,68,68,68,-103,-100,-105,68,-99,-101,-104,-102,68,68,-98,-97,-95,-96,-93,-91,-89,68,-94,-92,-90,193,68,68,68,193,]),'CHAR':([34,40,43,44,59,67,71,73,80,81,82,97,101,108,112,114,115,116,117,118,119,120,122,124,125,127,128,129,130,131,132,133,134,135,137,146,151,157,158,182,206,221,230,284,316,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,-103,-100,-105,69,-99,-101,-104,-102,69,69,-98,-97,-95,-96,-93,-91,-89,69,-94,-92,-90,69,69,69,69,69,69,69,69,69,69,]),'WHILE':([7,45,62,149,150,229,232,248,],[44,44,44,44,44,44,44,44,]),'PROGRAM':([0,],[2,]),'CONSTRUCTOR':([5,6,8,10,12,14,15,17,19,21,22,23,24,26,28,29,42,50,51,52,55,60,61,68,70,72,74,76,78,85,91,94,98,102,103,107,113,121,123,126,138,140,147,155,176,181,184,186,187,188,190,191,198,200,215,217,222,224,225,226,231,240,242,258,260,266,268,269,270,271,273,277,278,279,280,285,286,287,288,293,294,295,296,297,299,301,302,303,305,306,307,308,309,317,318,320,],[-6,11,-3,-146,-144,-10,-118,-145,-7,-147,-8,-142,-9,-5,-82,-4,-111,-6,-115,-6,-140,-6,-80,-53,-49,-50,-52,-46,-57,-109,-156,-151,-142,-159,-148,-11,-47,-46,-46,-44,-56,-55,-110,-117,-141,-81,-59,-54,-49,-43,-42,-46,-114,-112,-163,-181,-58,-48,-51,-45,-113,-165,-183,-167,-185,-162,-142,-166,-180,-82,-184,-168,-82,-186,-118,-118,-170,-188,-142,-172,300,-190,300,-177,-176,-178,-164,-174,-194,-196,-192,-195,-182,-150,-158,-153,]),'MULTIPLY':([42,68,70,72,74,78,85,110,138,140,147,184,186,187,198,200,222,225,231,],[-111,-53,117,-50,-52,-57,-109,-111,-56,-55,-110,-59,-54,117,-114,-112,-58,-51,-113,]),'XOR':([42,68,70,72,74,76,78,85,110,113,121,123,138,140,147,184,186,187,191,198,200,222,224,225,231,],[-111,-53,-49,-50,-52,125,-57,-109,-111,-47,125,125,-56,-55,-110,-59,-54,-49,125,-114,-112,-58,-48,-51,-113,]),'DIV':([42,68,70,72,74,78,85,110,138,140,147,184,186,187,198,200,222,225,231,],[-111,-53,118,-50,-52,-57,-109,-111,-56,-55,-110,-59,-54,118,-114,-112,-58,-51,-113,]),'ONE':([211,],[237,]),'MINUS':([34,40,42,43,44,59,67,68,70,72,74,76,78,81,82,85,108,110,113,121,122,123,130,131,132,133,134,135,137,138,140,146,147,151,184,186,187,191,198,200,222,224,225,230,231,],[71,71,-111,71,71,71,71,-53,-49,-50,-52,129,-57,71,71,-109,71,-111,-47,129,71,129,-93,-91,-89,71,-94,-92,-90,-56,-55,71,-110,71,-59,-54,-49,129,-114,-112,-58,-48,-51,71,-113,]),'DOT':([42,85,110,147,198,200,231,],[-111,148,-111,-110,-114,-112,-113,]),'STRING':([97,101,158,182,206,221,316,],[169,180,169,169,169,169,169,]),'CASE':([7,45,62,149,150,229,232,248,],[34,34,34,34,34,34,34,34,]),'BEGIN':([5,6,7,8,10,12,14,15,17,19,21,22,23,24,26,28,29,42,45,50,51,52,55,60,61,62,68,70,72,74,76,78,85,91,94,98,102,103,107,113,121,123,126,138,140,147,149,150,155,176,181,184,186,187,188,190,191,198,200,222,224,225,226,229,231,232,248,],[7,7,7,-3,-146,-144,-10,-118,-145,-7,-147,-8,-142,-9,-5,-82,-4,-111,7,7,-115,7,-140,7,-80,7,-53,-49,-50,-52,-46,-57,-109,-156,-151,-142,-159,-148,-11,-47,-46,-46,-44,-56,-55,-110,7,7,-117,-141,-81,-59,-54,-49,-43,-42,-46,-114,-112,-58,-48,-51,-45,7,-113,7,7,]),'LANGLE':([42,68,70,72,74,76,77,78,85,110,113,121,123,126,138,140,147,184,186,187,188,190,191,192,198,200,222,224,225,226,231,],[-111,-53,-49,-50,-52,-46,132,-57,-109,-111,-47,-46,-46,-44,-56,-55,-110,-59,-54,-49,-43,-42,-46,132,-114,-112,-58,-48,-51,-45,-113,]),'RPAREN':([42,53,58,65,68,69,70,72,74,75,76,77,78,84,85,89,95,99,100,109,110,111,113,121,123,126,136,138,140,142,143,147,152,153,154,159,160,162,163,164,165,167,169,170,171,172,173,174,175,178,179,180,183,184,185,186,187,188,189,190,191,192,197,198,200,204,205,209,210,212,213,214,222,223,224,225,226,227,231,234,235,238,245,250,253,254,255,257,259,263,275,282,283,289,290,291,292,],[-111,-155,-134,-76,-53,-77,-49,-50,-52,-75,-46,-41,-57,144,-109,-137,-157,-131,-134,184,-111,186,-47,-46,-46,-44,-39,-56,-55,196,-107,-110,-136,205,-139,-60,-71,-63,-64,-72,-61,-75,-70,-67,-66,-68,-79,-62,-65,-130,213,214,222,-59,-129,-54,-49,-43,225,-42,-46,-41,-108,-114,-112,-137,-154,-152,-69,-133,-73,-74,-58,245,-48,-51,-45,-40,-113,-135,-138,-132,-160,-106,-121,-129,-122,266,270,-128,283,-129,-126,-127,-124,-125,-123,]),'SEMICOLON':([4,7,13,16,27,30,31,33,35,36,37,38,39,41,42,46,47,48,49,53,57,62,63,64,65,68,69,70,72,74,75,76,77,78,83,85,90,92,95,104,107,113,121,123,126,136,138,140,141,144,145,147,149,150,156,159,160,161,162,163,164,165,167,169,170,171,172,173,174,175,184,186,187,188,190,191,192,194,196,198,200,201,202,203,205,207,209,210,216,218,219,220,222,224,225,226,227,228,229,231,232,233,236,243,244,246,248,249,251,252,253,255,261,262,267,272,281,283,290,291,292,311,312,314,315,319,],[5,-16,50,52,60,62,-14,64,-17,-24,83,-23,-36,-20,-111,-15,-35,-22,-155,-155,98,-16,107,-25,-76,-53,-77,-49,-50,-52,-75,-46,-41,-57,-26,-109,-149,155,-157,181,-11,-47,-46,-46,-44,-39,-56,-55,-19,-21,198,-110,-16,-16,-129,-60,-71,-143,-63,-64,-72,-61,-75,-70,-67,-66,-68,-79,-62,-65,-59,-54,-49,-43,-42,-46,-41,-32,-18,-114,-112,-27,-38,233,-154,-119,-152,-69,-83,-87,-84,-88,-58,-48,-51,-45,-40,247,-16,-113,-16,-37,-129,-85,-86,-29,-16,-33,-28,-120,-121,-122,-31,274,-161,-179,-30,-126,-124,-125,-123,-155,-155,317,318,320,]),'ID':([2,5,6,7,8,10,11,12,14,15,17,18,19,20,21,22,23,24,26,28,29,34,40,42,43,44,45,50,51,52,55,59,60,61,62,67,68,70,71,72,73,74,76,78,80,81,82,85,89,91,94,97,98,102,103,107,108,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,137,138,140,146,147,148,149,150,151,155,158,166,176,177,181,182,184,186,187,188,190,191,198,200,204,206,215,217,221,222,224,225,226,229,230,231,232,239,240,241,242,248,258,260,266,268,269,270,271,273,277,278,279,280,285,286,287,288,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,316,317,318,320,],[4,-6,25,42,-3,-146,42,-144,-10,-118,-145,42,-7,42,-147,-8,58,-9,-5,-82,-4,42,42,-111,42,42,42,-6,93,-6,-140,42,-6,105,42,110,-53,-49,42,-50,42,-52,-46,42,42,42,42,-109,154,-156,-151,171,58,-159,-148,-11,42,-103,-47,-100,-105,42,-99,-101,-104,-102,-46,42,-46,42,-98,-44,-97,-95,-96,-93,-91,-89,42,-94,-92,-90,-56,-55,42,-110,200,42,42,42,-117,171,210,-141,212,-81,171,-59,-54,-49,-43,-42,-46,-114,-112,154,171,-163,-181,171,-58,-48,-51,-45,42,42,-113,42,58,-165,58,-183,42,-167,-185,-162,58,-166,-180,-82,-184,-168,-82,105,-118,-118,105,93,58,93,-175,-190,-193,-177,42,-176,42,-178,-164,-174,42,-194,-196,-192,-195,-182,171,-150,-158,-153,]),'DOTDOT':([237,],[256,]),'COLON':([25,42,54,56,58,85,93,96,99,100,147,154,178,193,195,198,200,205,212,213,214,231,238,310,313,],[59,-111,-155,97,-134,-109,157,158,-131,-134,-110,206,-130,-34,229,-114,-112,-154,-133,-73,-74,-113,-132,-155,316,]),'USERSTRING':([34,40,43,44,59,67,71,73,80,81,82,108,112,114,115,116,117,118,119,120,122,124,125,127,128,129,130,131,132,133,134,135,137,146,151,230,],[74,74,74,74,74,74,74,74,74,74,74,74,-103,-100,-105,74,-99,-101,-104,-102,74,74,-98,-97,-95,-96,-93,-91,-89,74,-94,-92,-90,74,74,74,]),'PLUS':([34,40,42,43,44,59,67,68,70,72,74,76,78,81,82,85,108,110,113,121,122,123,130,131,132,133,134,135,137,138,140,146,147,151,184,186,187,191,198,200,222,224,225,230,231,],[73,73,-111,73,73,73,73,-53,-49,-50,-52,128,-57,73,73,-109,73,-111,-47,128,73,128,-93,-91,-89,73,-94,-92,-90,-56,-55,73,-110,73,-59,-54,-49,128,-114,-112,-58,-48,-51,73,-113,]),'ARRAY':([97,158,182,206,221,316,],[168,168,168,168,168,168,]),'CLASS':([182,221,],[217,217,]),'$end':([1,3,8,9,29,107,],[0,-1,-3,-2,-4,-11,]),'FUNCTION':([5,6,8,10,12,14,15,17,19,21,22,23,24,26,28,29,42,50,51,52,55,60,61,68,70,72,74,76,78,85,91,94,97,98,102,103,107,113,121,123,126,138,140,147,155,158,176,181,182,184,186,187,188,190,191,198,200,206,215,217,221,222,224,225,226,231,240,242,258,260,266,268,269,270,271,273,277,278,279,280,285,286,287,288,293,294,295,296,297,299,301,302,303,305,306,307,308,309,316,317,318,320,],[-6,20,-3,-146,-144,-10,-118,-145,-7,-147,-8,-142,-9,-5,-82,-4,-111,-6,-115,-6,-140,-6,-80,-53,-49,-50,-52,-46,-57,-109,-156,-151,20,-142,-159,-148,-11,-47,-46,-46,-44,-56,-55,-110,-117,20,-141,-81,20,-59,-54,-49,-43,-42,-46,-114,-112,20,-163,-181,20,-58,-48,-51,-45,-113,-165,-183,-167,-185,-162,-142,-166,-180,-82,-184,-168,-82,-186,-118,-118,-170,-188,-142,-172,298,-190,298,-177,-176,-178,-164,-174,-194,-196,-192,-195,-182,20,-150,-158,-153,]),'RSQUARE':([42,68,70,72,74,76,77,78,85,113,121,123,126,136,138,140,143,147,184,186,187,188,190,191,192,197,198,199,200,222,224,225,226,227,231,250,264,265,],[-111,-53,-49,-50,-52,-46,-41,-57,-109,-47,-46,-46,-44,-39,-56,-55,-107,-110,-59,-54,-49,-43,-42,-46,-41,-108,-114,231,-112,-58,-48,-51,-45,-40,-113,-106,276,-78,]),'SHR':([42,68,70,72,74,78,85,110,138,140,147,184,186,187,198,200,222,225,231,],[-111,-53,115,-50,-52,-57,-109,-111,-56,-55,-110,-59,-54,115,-114,-112,-58,-51,-113,]),'REPEAT':([7,45,62,149,150,229,232,248,],[45,45,45,45,45,45,45,45,]),'END':([31,32,35,36,38,39,41,42,46,47,48,62,64,68,70,72,74,76,77,78,83,85,98,106,107,113,121,123,126,136,138,140,141,144,147,150,155,176,181,184,186,187,188,190,191,192,194,196,198,200,202,215,217,222,224,225,226,227,228,229,231,233,240,242,249,258,260,261,266,268,269,270,271,273,274,277,278,279,280,285,286,287,288,293,294,295,296,297,299,301,302,303,305,306,307,308,309,317,318,320,],[-14,63,-17,-24,-23,-36,-20,-111,-15,-35,-22,-13,-25,-53,-49,-50,-52,-46,-41,-57,-26,-109,-142,-12,-11,-47,-46,-46,-44,-39,-56,-55,-19,-21,-110,-16,-117,-141,-81,-59,-54,-49,-43,-42,-46,-41,-32,-18,-114,-112,-38,-163,-181,-58,-48,-51,-45,-40,246,-16,-113,-37,-165,-183,-33,267,272,-31,-162,-142,-166,-180,-82,-184,281,-168,-82,-186,-118,-118,-170,-188,-142,-172,-175,-190,-193,-177,-176,-178,-164,-174,-194,-196,-192,-195,-182,-150,-158,-153,]),'DIVIDE':([42,68,70,72,74,78,85,110,138,140,147,184,186,187,198,200,222,225,231,],[-111,-53,114,-50,-52,-57,-109,-111,-56,-55,-110,-59,-54,114,-114,-112,-58,-51,-113,]),'DOUBLE':([97,158,182,206,221,316,],[173,173,173,173,173,173,]),'GEQ':([42,68,70,72,74,76,77,78,85,110,113,121,123,126,138,140,147,184,186,187,188,190,191,192,198,200,222,224,225,226,231,],[-111,-53,-49,-50,-52,-46,131,-57,-109,-111,-47,-46,-46,-44,-56,-55,-110,-59,-54,-49,-43,-42,-46,131,-114,-112,-58,-48,-51,-45,-113,]),'ELSE':([31,35,36,38,39,41,42,46,47,48,64,68,70,72,74,76,77,78,83,85,107,113,121,123,126,136,138,140,141,144,147,149,150,184,186,187,188,190,191,192,194,196,198,200,201,202,222,224,225,226,227,228,229,231,233,249,261,],[-14,-17,-24,-23,-36,-20,-111,-15,-35,-22,-25,-53,-49,-50,-52,-46,-41,-57,-26,-109,-11,-47,-46,-46,-44,-39,-56,-55,-19,-21,-110,-16,-16,-59,-54,-49,-43,-42,-46,-41,-32,-18,-114,-112,232,-38,-58,-48,-51,-45,-40,248,-16,-113,-37,-33,-31,]),'EQUALS':([42,65,68,69,70,72,74,75,76,77,78,85,93,105,110,113,121,123,126,138,140,147,184,186,187,188,190,191,192,198,200,208,222,224,225,226,231,],[-111,-76,-53,-77,-49,-50,-52,-75,-46,134,-57,-109,156,182,-111,-47,-46,-46,-44,-56,-55,-110,-59,-54,-49,-43,-42,-46,134,-114,-112,236,-58,-48,-51,-45,-113,]),'LPAREN':([7,34,35,40,42,43,44,45,49,53,54,58,59,62,65,66,67,69,71,72,73,75,80,81,82,85,108,110,112,114,115,116,117,118,119,120,122,124,125,127,128,129,130,131,132,133,134,135,137,146,147,149,150,151,198,200,212,215,217,229,230,231,232,236,248,254,282,310,311,312,],[40,67,82,67,-111,67,67,40,89,89,89,101,67,40,-76,108,67,-77,67,122,67,-75,67,67,67,-109,67,185,-103,-100,-105,67,-99,-101,-104,-102,67,67,-98,-97,-95,-96,-93,-91,-89,67,-94,-92,-90,67,-110,40,40,67,-114,-112,101,239,241,40,67,-113,40,254,40,254,254,89,89,89,]),'INHERITED':([7,34,40,43,44,45,59,62,67,71,73,80,81,82,108,112,114,115,116,117,118,119,120,122,124,125,127,128,129,130,131,132,133,134,135,137,146,149,150,151,229,230,232,248,],[41,78,78,78,78,41,78,41,78,78,78,78,78,78,78,-103,-100,-105,78,-99,-101,-104,-102,78,78,-98,-97,-95,-96,-93,-91,-89,78,-94,-92,-90,78,41,41,78,41,78,41,41,]),'VAR':([5,6,8,10,12,14,15,17,19,21,22,23,24,26,28,29,42,50,51,52,55,60,61,68,70,72,74,76,78,85,91,94,98,102,103,107,113,121,123,126,138,140,147,155,176,181,184,186,187,188,190,191,198,200,222,224,225,226,231,],[-6,23,-3,-146,-144,-10,-118,-145,-7,-147,-8,-142,-9,-5,-82,-4,-111,-6,-115,-6,-140,-6,-80,-53,-49,-50,-52,-46,-57,-109,-156,-151,-142,-159,-148,-11,-47,-46,-46,-44,-56,-55,-110,-117,-141,-81,-59,-54,-49,-43,-42,-46,-114,-112,-58,-48,-51,-45,-113,]),'RANGLE':([42,68,70,72,74,76,77,78,85,110,113,121,123,126,138,140,147,184,186,187,188,190,191,192,198,200,222,224,225,226,231,],[-111,-53,-49,-50,-52,-46,137,-57,-109,-111,-47,-46,-46,-44,-56,-55,-110,-59,-54,-49,-43,-42,-46,137,-114,-112,-58,-48,-51,-45,-113,]),'SHL':([42,68,70,72,74,78,85,110,138,140,147,184,186,187,198,200,222,225,231,],[-111,-53,119,-50,-52,-57,-109,-111,-56,-55,-110,-59,-54,119,-114,-112,-58,-51,-113,]),'UNTIL':([31,35,36,38,39,41,42,45,46,47,48,64,68,70,72,74,76,77,78,83,85,88,107,113,121,123,126,136,138,140,141,144,147,150,184,186,187,188,190,191,192,196,198,200,202,222,224,225,226,227,231,233,],[-14,-17,-24,-23,-36,-20,-111,-16,-15,-35,-22,-25,-53,-49,-50,-52,-46,-41,-57,-26,-109,151,-11,-47,-46,-46,-44,-39,-56,-55,-19,-21,-110,-16,-59,-54,-49,-43,-42,-46,-41,-18,-114,-112,-38,-58,-48,-51,-45,-40,-113,-37,]),'PROCEDURE':([5,6,8,10,12,14,15,17,19,21,22,23,24,26,28,29,42,50,51,52,55,60,61,68,70,72,74,76,78,85,91,94,97,98,102,103,107,113,121,123,126,138,140,147,155,158,176,181,182,184,186,187,188,190,191,198,200,206,215,217,221,222,224,225,226,231,240,242,258,260,266,268,269,270,271,273,277,278,279,280,285,286,287,288,293,294,295,296,297,299,301,302,303,305,306,307,308,309,316,317,318,320,],[-6,18,-3,-146,-144,-10,-118,-145,-7,-147,-8,-142,-9,-5,-82,-4,-111,-6,-115,-6,-140,-6,-80,-53,-49,-50,-52,-46,-57,-109,-156,-151,18,-142,-159,-148,-11,-47,-46,-46,-44,-56,-55,-110,-117,18,-141,-81,18,-59,-54,-49,-43,-42,-46,-114,-112,18,-163,-181,18,-58,-48,-51,-45,-113,-165,-183,-167,-185,-162,-142,-166,-180,-82,-184,-168,-82,-186,-118,-118,-170,-188,-142,-172,304,-190,304,-177,-176,-178,-164,-174,-194,-196,-192,-195,-182,18,-150,-158,-153,]),'IF':([7,45,62,149,150,229,232,248,],[43,43,43,43,43,43,43,43,]),'AND':([42,68,70,72,74,78,85,110,138,140,147,184,186,187,198,200,222,225,231,],[-111,-53,112,-50,-52,-57,-109,-111,-56,-55,-110,-59,-54,112,-114,-112,-58,-51,-113,]),'POWER':([42,85,97,110,147,158,182,198,200,206,221,231,284,316,],[-111,145,166,-111,-110,166,166,-114,-112,166,166,-113,166,166,]),'ASSIGNTO':([35,42,85,147,198,200,231,],[81,-111,-109,-110,-114,-112,-113,]),'INTEGER':([34,40,43,44,59,67,71,73,80,81,82,97,101,108,112,114,115,116,117,118,119,120,122,124,125,127,128,129,130,131,132,133,134,135,137,146,151,157,158,182,206,221,230,256,284,316,],[75,75,75,75,75,75,75,75,75,75,75,167,75,75,-103,-100,-105,75,-99,-101,-104,-102,75,75,-98,-97,-95,-96,-93,-91,-89,75,-94,-92,-90,75,75,75,167,167,167,167,75,265,75,167,]),'PUBLIC':([98,155,176,181,215,217,240,242,258,260,266,268,269,270,271,273,277,278,279,280,285,286,287,288,293,294,295,296,297,299,301,302,303,305,306,307,308,309,317,318,320,],[-142,-117,-141,-81,-163,-181,-165,-183,269,273,-162,-142,-166,-180,-82,-184,-168,-82,-186,-118,-118,-170,-188,-142,-172,-175,-190,-193,-177,-176,-178,-164,-174,-194,-196,-192,-195,-182,-150,-158,-153,]),'LEQ':([42,68,70,72,74,76,77,78,85,110,113,121,123,126,138,140,147,184,186,187,188,190,191,192,198,200,222,224,225,226,231,],[-111,-53,-49,-50,-52,-46,135,-57,-109,-111,-47,-46,-46,-44,-56,-55,-110,-59,-54,-49,-43,-42,-46,135,-114,-112,-58,-48,-51,-45,-113,]),'OF':([42,68,70,72,74,76,77,78,79,85,113,121,123,126,136,138,140,147,184,186,187,188,190,191,192,198,200,222,224,225,226,227,231,276,],[-111,-53,-49,-50,-52,-46,-41,-57,139,-109,-47,-46,-46,-44,-39,-56,-55,-110,-59,-54,-49,-43,-42,-46,-41,-114,-112,-58,-48,-51,-45,-40,-113,284,]),'NOT':([34,40,43,44,59,67,71,73,80,81,82,108,112,114,115,116,117,118,119,120,122,124,125,127,128,129,130,131,132,133,134,135,137,146,151,230,],[80,80,80,80,80,80,80,80,80,80,80,80,-103,-100,-105,80,-99,-101,-104,-102,80,80,-98,-97,-95,-96,-93,-91,-89,80,-94,-92,-90,80,80,80,]),'COMMA':([42,53,58,65,68,69,70,72,74,75,76,77,78,85,95,99,100,113,121,123,126,136,138,140,143,147,152,154,159,160,162,163,164,165,167,169,170,171,172,173,174,175,178,184,186,187,188,190,191,192,197,198,200,205,209,210,212,213,214,222,224,225,226,227,231,235,238,250,253,254,255,263,275,282,283,289,290,291,292,],[-111,-155,-134,-76,-53,-77,-49,-50,-52,-75,-46,-41,-57,-109,-157,177,-134,-47,-46,-46,-44,-39,-56,-55,-107,-110,204,-139,-60,-71,-63,-64,-72,-61,-75,-70,-67,-66,-68,-79,-62,-65,177,-59,-54,-49,-43,-42,-46,-41,230,-114,-112,-154,-152,-69,-133,-73,-74,-58,-48,-51,-45,-40,-113,-138,-132,-106,-121,-129,-122,-128,282,-129,-126,-127,-124,-125,-123,]),'TYPE':([5,6,8,10,12,14,15,17,19,21,22,23,24,26,28,29,42,50,51,52,55,60,61,68,70,72,74,76,78,85,91,94,98,102,103,107,113,121,123,126,138,140,147,155,176,181,182,184,186,187,188,190,191,198,200,222,224,225,226,231,],[-6,28,-3,-146,-144,-10,-118,-145,-7,-147,-8,-142,-9,-5,-82,-4,-111,-6,-115,-6,-140,-6,-80,-53,-49,-50,-52,-46,-57,-109,-156,-151,-142,-159,-148,-11,-47,-46,-46,-44,-56,-55,-110,-117,-141,-81,221,-59,-54,-49,-43,-42,-46,-114,-112,-58,-48,-51,-45,-113,]),'OR':([42,68,70,72,74,76,78,85,110,113,121,123,138,140,147,184,186,187,191,198,200,222,224,225,231,],[-111,-53,-49,-50,-52,127,-57,-109,-111,-47,127,127,-56,-55,-110,-59,-54,-49,127,-114,-112,-58,-48,-51,-113,]),'MOD':([42,68,70,72,74,78,85,110,138,140,147,184,186,187,198,200,222,225,231,],[-111,-53,120,-50,-52,-57,-109,-111,-56,-55,-110,-59,-54,120,-114,-112,-58,-51,-113,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ClassVis':([260,],[271,]),'IdentList':([23,98,239,241,268,288,],[56,56,257,259,56,56,]),'ColonConstDecl':([15,280,285,],[51,287,293,]),'Goal':([0,],[1,]),'AddTermStar':([76,121,123,191,],[126,188,190,226,]),'ConstExpr':([156,185,236,254,282,],[207,223,253,253,253,]),'ConstrucHeading':([6,],[27,]),'FuncHeadingSemicolon':([294,296,],[297,308,]),'Statement':([7,45,62,149,150,229,232,248,],[30,88,30,201,202,249,251,262,]),'ProcedureHeading':([6,97,158,182,206,221,316,],[13,160,160,160,160,160,160,]),'ProcedureDeclSection':([6,],[14,]),'ClassHeritage':([217,],[242,]),'IfStmt':([7,45,62,149,150,229,232,248,],[33,33,33,33,33,33,33,33,]),'ColonVarDecl':([23,98,268,288,],[55,176,277,295,]),'MulFacStar':([70,187,],[113,224,]),'LambFunc':([67,],[109,]),'CommaTypedConst':([263,],[275,]),'Designator':([7,11,18,20,34,40,43,44,45,59,62,67,71,73,78,80,81,82,108,116,122,124,133,146,149,150,151,229,230,232,248,298,300,304,],[35,49,53,54,72,72,72,72,35,72,35,72,72,72,138,72,72,72,72,72,72,72,72,72,35,35,72,35,72,35,35,310,311,312,]),'ColonTypeDecl':([28,271,278,],[61,279,286,]),'ObjectVis':([258,],[268,]),'MulOp':([70,187,],[116,116,]),'ClassTypeSection':([271,],[280,]),'ConstSection':([6,],[19,]),'ObjectType':([182,221,],[218,218,]),'ConditionalStmt':([7,45,62,149,150,229,232,248,],[38,38,38,38,38,38,38,38,]),'LambFuncDecl':([6,],[21,]),'VarSection':([6,],[24,]),'ExprList':([82,122,146,],[142,189,199,]),'CommaIDTypeArgs':([58,100,],[99,178,]),'RelOp':([77,192,],[133,133,]),'VarDecl':([23,98,268,288,],[57,57,57,57,]),'TypeArgs':([58,212,],[100,238,]),'ColonCaseSelector':([194,],[228,]),'FormalParams':([49,53,54,310,311,312,],[90,95,96,313,314,315,]),'ObjectHeritage':([215,],[240,]),'RepeatStmt':([7,45,62,149,150,229,232,248,],[47,47,47,47,47,47,47,47,]),'CompoundStmt':([5,6,7,45,50,52,60,62,149,150,229,232,248,],[8,29,48,48,8,8,8,48,48,48,48,48,48,]),'ArrayConst':([236,254,282,],[255,255,255,]),'TypeID':([34,40,43,44,59,67,71,73,80,81,82,97,101,108,116,122,124,133,146,151,157,158,182,206,221,230,284,316,],[66,66,66,66,66,66,66,66,66,66,66,159,179,66,66,66,66,66,66,66,208,159,159,159,159,66,290,159,]),'ConstrucDecl':([6,],[10,]),'SimpleStatement':([7,45,62,149,150,229,232,248,],[31,31,31,31,31,31,31,31,]),'Factor':([34,40,43,44,59,67,71,73,80,81,82,108,116,122,124,133,146,151,230,],[70,70,70,70,70,70,70,70,140,70,70,70,187,70,70,70,70,70,70,]),'Type':([97,158,182,206,221,316,],[161,209,216,235,243,319,]),'TypeArray':([284,],[292,]),'StringType':([97,158,182,206,221,316,],[162,162,162,162,162,162,]),'ProcedureType':([97,158,182,206,221,316,],[163,163,163,163,163,163,]),'FuncHeading':([6,97,158,182,206,221,316,],[16,164,164,164,164,164,164,]),'FuncDecl':([6,],[17,]),'ObjectMethodHeading':([294,],[303,]),'CaseStmt':([7,45,62,149,150,229,232,248,],[37,37,37,37,37,37,37,37,]),'AddOp':([76,121,123,191,],[124,124,124,124,]),'Term':([34,40,43,44,59,67,71,73,81,82,108,122,124,133,146,151,230,],[76,76,76,76,76,76,121,123,76,76,76,76,191,76,76,76,76,]),'DesSubEleStar':([42,110,],[85,85,]),'StructStmt':([7,45,62,149,150,229,232,248,],[46,46,46,46,46,46,46,46,]),'PointerType':([97,158,182,206,221,284,316,],[174,174,174,174,174,291,174,]),'RelSimpleStar':([77,192,],[136,227,]),'Block':([5,50,52,60,],[9,91,94,103,]),'ProcedureHeadingSemicolon':([294,296,],[299,305,]),'WhichSection':([6,],[26,]),'ClassMethodHeading':([296,],[307,]),'ObjectBody':([240,],[258,]),'DeclSection':([5,50,52,60,],[6,6,6,6,]),'ClassConstSection':([280,],[288,]),'ProcedureDecl':([6,],[12,]),'Program':([0,],[3,]),'SimpleType':([97,158,182,206,221,316,],[165,165,165,165,165,165,]),'CaseSelector':([139,247,],[194,261,]),'ClassBody':([242,],[260,]),'ParamIdent':([89,204,],[152,152,]),'ObjectVarSection':([268,],[278,]),'TypeSection':([6,],[22,]),'ObjectTypeSection':([278,],[285,]),'OrdinalType':([97,158,182,206,221,256,316,],[170,170,170,170,170,264,170,]),'ObjectMethodList':([294,],[302,]),'Expression':([34,40,43,44,67,81,82,108,122,146,151,230,],[79,84,86,87,111,141,143,183,143,143,203,250,]),'TypedConst':([236,254,282,],[252,263,289,]),'ClassType':([182,221,],[220,220,]),'CommaExpression':([143,],[197,]),'ConstDecl':([51,287,293,],[92,92,92,]),'CaseLabel':([139,247,],[195,195,]),'StmtList':([7,62,],[32,106,]),'ClassVarSection':([288,],[296,]),'ConstrucHeadingSemicolon':([294,296,],[301,306,]),'LoopStmt':([7,45,62,149,150,229,232,248,],[36,36,36,36,36,36,36,36,]),'SimpleExpression':([34,40,43,44,59,67,81,82,108,122,133,146,151,230,],[77,77,77,77,102,77,77,77,77,77,192,77,77,77,]),'ParamIdentList':([89,204,],[153,234,]),'TypeDecl':([61,279,286,],[104,104,104,]),'RestrictedType':([182,221,],[219,244,]),'WhileStmt':([7,45,62,149,150,229,232,248,],[39,39,39,39,39,39,39,39,]),'ClassMethodList':([296,],[309,]),'RealType':([97,158,182,206,221,316,],[172,172,172,172,172,172,]),'ObjectConstSection':([285,],[294,]),'DesignatorSubElem':([85,],[147,]),'Array':([97,158,182,206,221,316,],[175,175,175,175,175,175,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Goal","S'",1,None,None,None),
  ('Goal -> Program','Goal',1,'p_Goal','parser.py',17),
  ('Program -> PROGRAM ID SEMICOLON Block','Program',4,'p_Program','parser.py',20),
  ('Block -> CompoundStmt','Block',1,'p_Block','parser.py',23),
  ('Block -> DeclSection CompoundStmt','Block',2,'p_Block','parser.py',24),
  ('DeclSection -> DeclSection WhichSection','DeclSection',2,'p_DeclSection','parser.py',27),
  ('DeclSection -> <empty>','DeclSection',0,'p_DeclSection','parser.py',28),
  ('WhichSection -> ConstSection','WhichSection',1,'p_WhichSection','parser.py',31),
  ('WhichSection -> TypeSection','WhichSection',1,'p_WhichSection','parser.py',32),
  ('WhichSection -> VarSection','WhichSection',1,'p_WhichSection','parser.py',33),
  ('WhichSection -> ProcedureDeclSection','WhichSection',1,'p_WhichSection','parser.py',34),
  ('CompoundStmt -> BEGIN StmtList END SEMICOLON','CompoundStmt',4,'p_CompoundStmt','parser.py',37),
  ('StmtList -> Statement SEMICOLON StmtList','StmtList',3,'p_StmtList','parser.py',40),
  ('StmtList -> Statement SEMICOLON','StmtList',2,'p_StmtList','parser.py',41),
  ('Statement -> SimpleStatement','Statement',1,'p_Statement','parser.py',44),
  ('Statement -> StructStmt','Statement',1,'p_Statement','parser.py',45),
  ('Statement -> <empty>','Statement',0,'p_Statement','parser.py',46),
  ('SimpleStatement -> Designator','SimpleStatement',1,'p_SimpleStatement','parser.py',49),
  ('SimpleStatement -> Designator LPAREN ExprList RPAREN','SimpleStatement',4,'p_SimpleStatement','parser.py',50),
  ('SimpleStatement -> Designator ASSIGNTO Expression','SimpleStatement',3,'p_SimpleStatement','parser.py',51),
  ('SimpleStatement -> INHERITED','SimpleStatement',1,'p_SimpleStatement','parser.py',52),
  ('SimpleStatement -> LPAREN Expression RPAREN','SimpleStatement',3,'p_SimpleStatement','parser.py',53),
  ('StructStmt -> CompoundStmt','StructStmt',1,'p_StructStmt','parser.py',56),
  ('StructStmt -> ConditionalStmt','StructStmt',1,'p_StructStmt','parser.py',57),
  ('StructStmt -> LoopStmt','StructStmt',1,'p_StructStmt','parser.py',58),
  ('ConditionalStmt -> IfStmt SEMICOLON','ConditionalStmt',2,'p_ConditionalStmt','parser.py',61),
  ('ConditionalStmt -> CaseStmt SEMICOLON','ConditionalStmt',2,'p_ConditionalStmt','parser.py',62),
  ('IfStmt -> IF Expression THEN Statement','IfStmt',4,'p_IfStmt','parser.py',65),
  ('IfStmt -> IF Expression THEN Statement ELSE Statement','IfStmt',6,'p_IfStmt','parser.py',66),
  ('CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END','CaseStmt',6,'p_CaseStmt','parser.py',69),
  ('CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END','CaseStmt',9,'p_CaseStmt','parser.py',70),
  ('ColonCaseSelector -> ColonCaseSelector SEMICOLON CaseSelector','ColonCaseSelector',3,'p_ColonCaseSelector','parser.py',73),
  ('ColonCaseSelector -> <empty>','ColonCaseSelector',0,'p_ColonCaseSelector','parser.py',74),
  ('CaseSelector -> CaseLabel COLON Statement','CaseSelector',3,'p_CaseSelector','parser.py',77),
  ('CaseLabel -> NUMBER','CaseLabel',1,'p_CaseLabel','parser.py',81),
  ('LoopStmt -> RepeatStmt','LoopStmt',1,'p_LoopStmt','parser.py',85),
  ('LoopStmt -> WhileStmt','LoopStmt',1,'p_LoopStmt','parser.py',86),
  ('RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON','RepeatStmt',5,'p_RepeatStmt','parser.py',89),
  ('WhileStmt -> WHILE Expression DO Statement','WhileStmt',4,'p_WhileStmt','parser.py',93),
  ('Expression -> SimpleExpression RelSimpleStar','Expression',2,'p_Expression','parser.py',96),
  ('RelSimpleStar -> RelOp SimpleExpression RelSimpleStar','RelSimpleStar',3,'p_RelSimpleStar','parser.py',99),
  ('RelSimpleStar -> <empty>','RelSimpleStar',0,'p_RelSimpleStar','parser.py',100),
  ('SimpleExpression -> PLUS Term AddTermStar','SimpleExpression',3,'p_SimpleExpression','parser.py',103),
  ('SimpleExpression -> MINUS Term AddTermStar','SimpleExpression',3,'p_SimpleExpression','parser.py',104),
  ('SimpleExpression -> Term AddTermStar','SimpleExpression',2,'p_SimpleExpression','parser.py',105),
  ('AddTermStar -> AddOp Term AddTermStar','AddTermStar',3,'p_AddTermStar','parser.py',108),
  ('AddTermStar -> <empty>','AddTermStar',0,'p_AddTermStar','parser.py',109),
  ('Term -> Factor MulFacStar','Term',2,'p_Term','parser.py',112),
  ('MulFacStar -> MulOp Factor MulFacStar','MulFacStar',3,'p_MulFacStar','parser.py',115),
  ('MulFacStar -> <empty>','MulFacStar',0,'p_MulFacStar','parser.py',116),
  ('Factor -> Designator','Factor',1,'p_Factor','parser.py',119),
  ('Factor -> Designator LPAREN ExprList RPAREN','Factor',4,'p_Factor','parser.py',120),
  ('Factor -> USERSTRING','Factor',1,'p_Factor','parser.py',121),
  ('Factor -> NUMBER','Factor',1,'p_Factor','parser.py',122),
  ('Factor -> LPAREN Expression RPAREN','Factor',3,'p_Factor','parser.py',123),
  ('Factor -> NOT Factor','Factor',2,'p_Factor','parser.py',124),
  ('Factor -> INHERITED Designator','Factor',2,'p_Factor','parser.py',125),
  ('Factor -> INHERITED','Factor',1,'p_Factor','parser.py',126),
  ('Factor -> TypeID LPAREN Expression RPAREN','Factor',4,'p_Factor','parser.py',127),
  ('Factor -> LPAREN LambFunc RPAREN','Factor',3,'p_Factor','parser.py',128),
  ('Type -> TypeID','Type',1,'p_Type','parser.py',132),
  ('Type -> SimpleType','Type',1,'p_Type','parser.py',133),
  ('Type -> PointerType','Type',1,'p_Type','parser.py',134),
  ('Type -> StringType','Type',1,'p_Type','parser.py',135),
  ('Type -> ProcedureType','Type',1,'p_Type','parser.py',136),
  ('Type -> Array','Type',1,'p_Type','parser.py',137),
  ('Type -> ID','Type',1,'p_Type','parser.py',138),
  ('SimpleType -> OrdinalType','SimpleType',1,'p_SimpleType','parser.py',141),
  ('SimpleType -> RealType','SimpleType',1,'p_SimpleType','parser.py',142),
  ('PointerType -> POWER ID','PointerType',2,'p_PointerType','parser.py',145),
  ('StringType -> STRING','StringType',1,'p_StringType','parser.py',148),
  ('ProcedureType -> ProcedureHeading','ProcedureType',1,'p_ProcedureType','parser.py',151),
  ('ProcedureType -> FuncHeading','ProcedureType',1,'p_ProcedureType','parser.py',152),
  ('TypeArgs -> LPAREN TypeID RPAREN','TypeArgs',3,'p_TypeArgs','parser.py',157),
  ('TypeArgs -> LPAREN STRING RPAREN','TypeArgs',3,'p_TypeArgs','parser.py',158),
  ('TypeID -> INTEGER','TypeID',1,'p_TypeID','parser.py',161),
  ('TypeID -> REAL','TypeID',1,'p_TypeID','parser.py',162),
  ('TypeID -> CHAR','TypeID',1,'p_TypeID','parser.py',163),
  ('OrdinalType -> INTEGER','OrdinalType',1,'p_OrdinalType','parser.py',166),
  ('RealType -> DOUBLE','RealType',1,'p_RealType','parser.py',169),
  ('TypeSection -> TYPE ColonTypeDecl','TypeSection',2,'p_TypeSection','parser.py',173),
  ('ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON','ColonTypeDecl',3,'p_ColonTypeDecl','parser.py',176),
  ('ColonTypeDecl -> <empty>','ColonTypeDecl',0,'p_ColonTypeDecl','parser.py',177),
  ('TypeDecl -> ID EQUALS Type','TypeDecl',3,'p_TypeDecl','parser.py',180),
  ('TypeDecl -> ID EQUALS RestrictedType','TypeDecl',3,'p_TypeDecl','parser.py',181),
  ('TypeDecl -> ID EQUALS TYPE Type','TypeDecl',4,'p_TypeDecl','parser.py',182),
  ('TypeDecl -> ID EQUALS TYPE RestrictedType','TypeDecl',4,'p_TypeDecl','parser.py',183),
  ('RestrictedType -> ObjectType','RestrictedType',1,'p_RestrictedType','parser.py',186),
  ('RestrictedType -> ClassType','RestrictedType',1,'p_RestrictedType','parser.py',187),
  ('RelOp -> LANGLE','RelOp',1,'p_RelOp','parser.py',190),
  ('RelOp -> RANGLE','RelOp',1,'p_RelOp','parser.py',191),
  ('RelOp -> GEQ','RelOp',1,'p_RelOp','parser.py',192),
  ('RelOp -> LEQ','RelOp',1,'p_RelOp','parser.py',193),
  ('RelOp -> NOTEQUALS','RelOp',1,'p_RelOp','parser.py',194),
  ('RelOp -> EQUALS','RelOp',1,'p_RelOp','parser.py',195),
  ('AddOp -> PLUS','AddOp',1,'p_AddOp','parser.py',198),
  ('AddOp -> MINUS','AddOp',1,'p_AddOp','parser.py',199),
  ('AddOp -> OR','AddOp',1,'p_AddOp','parser.py',200),
  ('AddOp -> XOR','AddOp',1,'p_AddOp','parser.py',201),
  ('MulOp -> MULTIPLY','MulOp',1,'p_MulOp','parser.py',204),
  ('MulOp -> DIVIDE','MulOp',1,'p_MulOp','parser.py',205),
  ('MulOp -> DIV','MulOp',1,'p_MulOp','parser.py',206),
  ('MulOp -> MOD','MulOp',1,'p_MulOp','parser.py',207),
  ('MulOp -> AND','MulOp',1,'p_MulOp','parser.py',208),
  ('MulOp -> SHL','MulOp',1,'p_MulOp','parser.py',209),
  ('MulOp -> SHR','MulOp',1,'p_MulOp','parser.py',210),
  ('CommaExpression -> CommaExpression COMMA Expression','CommaExpression',3,'p_CommaExpression','parser.py',213),
  ('CommaExpression -> <empty>','CommaExpression',0,'p_CommaExpression','parser.py',214),
  ('ExprList -> Expression CommaExpression','ExprList',2,'p_ExprList','parser.py',217),
  ('Designator -> ID DesSubEleStar','Designator',2,'p_Designator','parser.py',220),
  ('DesSubEleStar -> DesSubEleStar DesignatorSubElem','DesSubEleStar',2,'p_DesSubEleStar','parser.py',223),
  ('DesSubEleStar -> <empty>','DesSubEleStar',0,'p_DesSubEleStar','parser.py',224),
  ('DesignatorSubElem -> DOT ID','DesignatorSubElem',2,'p_DesignatorSubElem','parser.py',227),
  ('DesignatorSubElem -> LSQUARE ExprList RSQUARE','DesignatorSubElem',3,'p_DesignatorSubElem','parser.py',228),
  ('DesignatorSubElem -> POWER SEMICOLON','DesignatorSubElem',2,'p_DesignatorSubElem','parser.py',229),
  ('ConstSection -> CONSTANT ColonConstDecl','ConstSection',2,'p_ConstSection','parser.py',233),
  ('ConstSection -> <empty>','ConstSection',0,'p_ConstSection','parser.py',234),
  ('ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON','ColonConstDecl',3,'p_ColonConstDecl','parser.py',237),
  ('ColonConstDecl -> <empty>','ColonConstDecl',0,'p_ColonConstDecl','parser.py',238),
  ('ConstDecl -> ID EQUALS ConstExpr','ConstDecl',3,'p_ConstDecl','parser.py',241),
  ('ConstDecl -> ID COLON TypeID EQUALS TypedConst','ConstDecl',5,'p_ConstDecl','parser.py',242),
  ('TypedConst -> ConstExpr','TypedConst',1,'p_TypedConst','parser.py',245),
  ('TypedConst -> ArrayConst','TypedConst',1,'p_TypedConst','parser.py',246),
  ('Array -> ARRAY LSQUARE ONE DOTDOT OrdinalType RSQUARE OF TypeArray','Array',8,'p_Array','parser.py',249),
  ('TypeArray -> TypeID','TypeArray',1,'p_TypeArray','parser.py',252),
  ('TypeArray -> PointerType','TypeArray',1,'p_TypeArray','parser.py',253),
  ('ArrayConst -> LPAREN TypedConst CommaTypedConst RPAREN','ArrayConst',4,'p_ArrayConst','parser.py',256),
  ('CommaTypedConst -> CommaTypedConst COMMA TypedConst','CommaTypedConst',3,'p_CommaTypedConst','parser.py',259),
  ('CommaTypedConst -> <empty>','CommaTypedConst',0,'p_CommaTypedConst','parser.py',260),
  ('ConstExpr -> <empty>','ConstExpr',0,'p_ConstExpr','parser.py',263),
  ('IdentList -> ID TypeArgs CommaIDTypeArgs','IdentList',3,'p_IdentList','parser.py',267),
  ('IdentList -> ID CommaIDTypeArgs','IdentList',2,'p_IdentList','parser.py',268),
  ('CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID TypeArgs','CommaIDTypeArgs',4,'p_CommaIDTypeArgs','parser.py',271),
  ('CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID','CommaIDTypeArgs',3,'p_CommaIDTypeArgs','parser.py',272),
  ('CommaIDTypeArgs -> <empty>','CommaIDTypeArgs',0,'p_CommaIDTypeArgs','parser.py',273),
  ('ParamIdentList -> ParamIdent COMMA ParamIdentList','ParamIdentList',3,'p_ParamIdentList','parser.py',277),
  ('ParamIdentList -> ParamIdent','ParamIdentList',1,'p_ParamIdentList','parser.py',278),
  ('ParamIdentList -> <empty>','ParamIdentList',0,'p_ParamIdentList','parser.py',279),
  ('ParamIdent -> ID COLON Type','ParamIdent',3,'p_ParamIdent','parser.py',282),
  ('ParamIdent -> ID','ParamIdent',1,'p_ParamIdent','parser.py',283),
  ('VarSection -> VAR ColonVarDecl','VarSection',2,'p_VarSection','parser.py',287),
  ('ColonVarDecl -> VarDecl SEMICOLON ColonVarDecl','ColonVarDecl',3,'p_ColonVarDecl','parser.py',290),
  ('ColonVarDecl -> <empty>','ColonVarDecl',0,'p_ColonVarDecl','parser.py',291),
  ('VarDecl -> IdentList COLON Type','VarDecl',3,'p_VarDecl','parser.py',294),
  ('ProcedureDeclSection -> ProcedureDecl','ProcedureDeclSection',1,'p_ProcedureDeclSection','parser.py',297),
  ('ProcedureDeclSection -> FuncDecl','ProcedureDeclSection',1,'p_ProcedureDeclSection','parser.py',298),
  ('ProcedureDeclSection -> ConstrucDecl','ProcedureDeclSection',1,'p_ProcedureDeclSection','parser.py',299),
  ('ProcedureDeclSection -> LambFuncDecl','ProcedureDeclSection',1,'p_ProcedureDeclSection','parser.py',300),
  ('ConstrucDecl -> ConstrucHeading SEMICOLON Block','ConstrucDecl',3,'p_ConstrucDecl','parser.py',304),
  ('ConstrucHeading -> CONSTRUCTOR Designator FormalParams','ConstrucHeading',3,'p_ConstrucHeading','parser.py',307),
  ('ConstrucHeadingSemicolon -> CONSTRUCTOR Designator FormalParams SEMICOLON','ConstrucHeadingSemicolon',4,'p_ConstrucHeadingSemicolon','parser.py',310),
  ('FuncDecl -> FuncHeading SEMICOLON Block','FuncDecl',3,'p_FuncDecl','parser.py',313),
  ('FuncHeading -> FUNCTION Designator FormalParams COLON Type','FuncHeading',5,'p_FuncHeading','parser.py',316),
  ('FuncHeadingSemicolon -> FUNCTION Designator FormalParams COLON Type SEMICOLON','FuncHeadingSemicolon',6,'p_FuncHeadingSemicolon','parser.py',319),
  ('FormalParams -> LPAREN ParamIdentList RPAREN','FormalParams',3,'p_FormalParams','parser.py',323),
  ('FormalParams -> <empty>','FormalParams',0,'p_FormalParams','parser.py',324),
  ('ProcedureDecl -> ProcedureHeading SEMICOLON Block','ProcedureDecl',3,'p_ProcedureDecl','parser.py',327),
  ('ProcedureHeading -> PROCEDURE Designator FormalParams','ProcedureHeading',3,'p_ProcedureHeading','parser.py',331),
  ('ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON','ProcedureHeadingSemicolon',4,'p_ProcedureHeadingSemicolon','parser.py',334),
  ('LambFuncDecl -> ID COLON SimpleExpression','LambFuncDecl',3,'p_LambFuncDecl','parser.py',339),
  ('LambFunc -> ID LPAREN ConstExpr RPAREN','LambFunc',4,'p_LambFunc','parser.py',342),
  ('ObjectType -> OBJECT ObjectHeritage ObjectBody END','ObjectType',4,'p_ObjectType','parser.py',350),
  ('ObjectHeritage -> LPAREN IdentList RPAREN','ObjectHeritage',3,'p_ObjectHeritage','parser.py',353),
  ('ObjectHeritage -> <empty>','ObjectHeritage',0,'p_ObjectHeritage','parser.py',354),
  ('ObjectBody -> ObjectBody ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList','ObjectBody',6,'p_ObjectBody','parser.py',358),
  ('ObjectBody -> <empty>','ObjectBody',0,'p_ObjectBody','parser.py',359),
  ('ObjectVis -> PUBLIC','ObjectVis',1,'p_ObjectVis','parser.py',362),
  ('ObjectVis -> <empty>','ObjectVis',0,'p_ObjectVis','parser.py',363),
  ('ObjectVarSection -> ColonVarDecl','ObjectVarSection',1,'p_ObjectVarSection','parser.py',366),
  ('ObjectVarSection -> <empty>','ObjectVarSection',0,'p_ObjectVarSection','parser.py',367),
  ('ObjectTypeSection -> ColonTypeDecl','ObjectTypeSection',1,'p_ObjectTypeSection','parser.py',370),
  ('ObjectTypeSection -> <empty>','ObjectTypeSection',0,'p_ObjectTypeSection','parser.py',371),
  ('ObjectConstSection -> ColonConstDecl','ObjectConstSection',1,'p_ObjectConstSection','parser.py',374),
  ('ObjectConstSection -> <empty>','ObjectConstSection',0,'p_ObjectConstSection','parser.py',375),
  ('ObjectMethodList -> ObjectMethodHeading','ObjectMethodList',1,'p_ObjectMethodList','parser.py',378),
  ('ObjectMethodList -> <empty>','ObjectMethodList',0,'p_ObjectMethodList','parser.py',379),
  ('ObjectMethodHeading -> ProcedureHeadingSemicolon','ObjectMethodHeading',1,'p_ObjectMethodHeading','parser.py',382),
  ('ObjectMethodHeading -> FuncHeadingSemicolon','ObjectMethodHeading',1,'p_ObjectMethodHeading','parser.py',383),
  ('ObjectMethodHeading -> ConstrucHeadingSemicolon','ObjectMethodHeading',1,'p_ObjectMethodHeading','parser.py',384),
  ('ClassType -> CLASS ClassHeritage ClassBody END','ClassType',4,'p_ClassType','parser.py',391),
  ('ClassHeritage -> LPAREN IdentList RPAREN','ClassHeritage',3,'p_ClassHeritage','parser.py',394),
  ('ClassHeritage -> <empty>','ClassHeritage',0,'p_ClassHeritage','parser.py',395),
  ('ClassBody -> ClassBody ClassVis ClassTypeSection ClassConstSection ClassVarSection ClassMethodList','ClassBody',6,'p_ClassBody','parser.py',398),
  ('ClassBody -> <empty>','ClassBody',0,'p_ClassBody','parser.py',399),
  ('ClassVis -> PUBLIC','ClassVis',1,'p_ClassVis','parser.py',402),
  ('ClassVis -> <empty>','ClassVis',0,'p_ClassVis','parser.py',403),
  ('ClassTypeSection -> ColonTypeDecl','ClassTypeSection',1,'p_ClassTypeSection','parser.py',406),
  ('ClassTypeSection -> <empty>','ClassTypeSection',0,'p_ClassTypeSection','parser.py',407),
  ('ClassConstSection -> ColonConstDecl','ClassConstSection',1,'p_ClassConstSection','parser.py',410),
  ('ClassConstSection -> <empty>','ClassConstSection',0,'p_ClassConstSection','parser.py',411),
  ('ClassVarSection -> ColonVarDecl','ClassVarSection',1,'p_ClassVarSection','parser.py',414),
  ('ClassVarSection -> <empty>','ClassVarSection',0,'p_ClassVarSection','parser.py',415),
  ('ClassMethodList -> ClassMethodHeading','ClassMethodList',1,'p_ClassMethodList','parser.py',418),
  ('ClassMethodList -> <empty>','ClassMethodList',0,'p_ClassMethodList','parser.py',419),
  ('ClassMethodHeading -> ProcedureHeadingSemicolon','ClassMethodHeading',1,'p_ClassMethodHeading','parser.py',422),
  ('ClassMethodHeading -> FuncHeadingSemicolon','ClassMethodHeading',1,'p_ClassMethodHeading','parser.py',423),
  ('ClassMethodHeading -> ConstrucHeadingSemicolon','ClassMethodHeading',1,'p_ClassMethodHeading','parser.py',424),
]

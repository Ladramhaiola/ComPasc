Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    ATRATE
    CHARACTER
    LCURLY
    UNDERSCORE
    DOUBLESTAR
    INVERTDOUBLECOMMA
    FOR
    RCURLY
    LAMBDA
    TO
    COMMENT
    INVERTCOMMA
    PERCENT
    AS
    DOUBLESLASH
    RANGE
    AMPERSAND
    SELF
    BREAK
    CONTINUE

Grammar

Rule 0     S' -> Goal
Rule 1     Goal -> Program
Rule 2     Program -> PROGRAM ID SEMICOLON Block
Rule 3     Block -> CompoundStmt
Rule 4     Block -> DeclSection CompoundStmt
Rule 5     DeclSection -> DeclSection WhichSection
Rule 6     DeclSection -> <empty>
Rule 7     WhichSection -> ConstSection
Rule 8     WhichSection -> TypeSection
Rule 9     WhichSection -> VarSection
Rule 10    WhichSection -> ProcedureDeclSection
Rule 11    CompoundStmt -> BEGIN StmtList END SEMICOLON
Rule 12    StmtList -> StmtList Statement SEMICOLON
Rule 13    StmtList -> Statement SEMICOLON
Rule 14    Statement -> SimpleStatement
Rule 15    Statement -> StructStmt
Rule 16    Statement -> <empty>
Rule 17    SimpleStatement -> Designator
Rule 18    SimpleStatement -> Designator LPAREN ExprList RPAREN
Rule 19    SimpleStatement -> Designator ASSIGNTO Expression
Rule 20    SimpleStatement -> INHERITED
Rule 21    SimpleStatement -> LPAREN Expression RPAREN
Rule 22    StructStmt -> CompoundStmt
Rule 23    StructStmt -> ConditionalStmt
Rule 24    StructStmt -> LoopStmt
Rule 25    ConditionalStmt -> IfStmt SEMICOLON
Rule 26    ConditionalStmt -> CaseStmt SEMICOLON
Rule 27    IfStmt -> IF Expression THEN Statement
Rule 28    IfStmt -> IF Expression THEN Statement ELSE Statement
Rule 29    CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END
Rule 30    CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END
Rule 31    ColonCaseSelector -> ColonCaseSelector SEMICOLON CaseSelector
Rule 32    ColonCaseSelector -> <empty>
Rule 33    CaseSelector -> CaseLabel COLON Statement
Rule 34    CaseLabel -> NUMBER
Rule 35    LoopStmt -> RepeatStmt
Rule 36    LoopStmt -> WhileStmt
Rule 37    RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON
Rule 38    WhileStmt -> WHILE Expression DO Statement SEMICOLON
Rule 39    Expression -> SimpleExpression RelSimpleStar
Rule 40    RelSimpleStar -> RelOp SimpleExpression RelSimpleStar
Rule 41    RelSimpleStar -> <empty>
Rule 42    SimpleExpression -> PLUS Term AddTermStar
Rule 43    SimpleExpression -> MINUS Term AddTermStar
Rule 44    SimpleExpression -> Term AddTermStar
Rule 45    AddTermStar -> AddOp Term AddTermStar
Rule 46    AddTermStar -> <empty>
Rule 47    Term -> Factor MulFacStar
Rule 48    MulFacStar -> MulOp Factor MulFacStar
Rule 49    MulFacStar -> <empty>
Rule 50    Factor -> Designator
Rule 51    Factor -> Designator LPAREN ExprList RPAREN
Rule 52    Factor -> USERSTRING
Rule 53    Factor -> NUMBER
Rule 54    Factor -> LPAREN Expression RPAREN
Rule 55    Factor -> NOT Factor
Rule 56    Factor -> INHERITED Designator
Rule 57    Factor -> INHERITED
Rule 58    Factor -> TypeID LPAREN Expression RPAREN
Rule 59    Factor -> LPAREN LambFunc RPAREN
Rule 60    Type -> TypeID
Rule 61    Type -> SimpleType
Rule 62    Type -> PointerType
Rule 63    Type -> StringType
Rule 64    Type -> ProcedureType
Rule 65    Type -> Array
Rule 66    Type -> ID
Rule 67    SimpleType -> OrdinalType
Rule 68    SimpleType -> RealType
Rule 69    PointerType -> POWER ID
Rule 70    StringType -> STRING
Rule 71    ProcedureType -> ProcedureHeading
Rule 72    ProcedureType -> FuncHeading
Rule 73    TypeArgs -> LANGLE TypeID RANGLE
Rule 74    TypeArgs -> LANGLE STRING RANGLE
Rule 75    TypeID -> INTEGER
Rule 76    TypeID -> REAL
Rule 77    TypeID -> CHAR
Rule 78    OrdinalType -> INTEGER
Rule 79    RealType -> DOUBLE
Rule 80    TypeSection -> TYPE ColonTypeDecl
Rule 81    TypeSection -> ColonTypeDecl
Rule 82    ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON
Rule 83    ColonTypeDecl -> <empty>
Rule 84    TypeDecl -> ID EQUALS Type
Rule 85    TypeDecl -> ID EQUALS RestrictedType
Rule 86    TypeDecl -> ID EQUALS TYPE Type
Rule 87    TypeDecl -> ID EQUALS TYPE RestrictedType
Rule 88    RestrictedType -> ObjectType
Rule 89    RestrictedType -> ClassType
Rule 90    RelOp -> LANGLE
Rule 91    RelOp -> RANGLE
Rule 92    RelOp -> GEQ
Rule 93    RelOp -> LEQ
Rule 94    RelOp -> NOTEQUALS
Rule 95    RelOp -> EQUALS
Rule 96    AddOp -> PLUS
Rule 97    AddOp -> MINUS
Rule 98    AddOp -> OR
Rule 99    AddOp -> XOR
Rule 100   MulOp -> MULTIPLY
Rule 101   MulOp -> DIVIDE
Rule 102   MulOp -> DIV
Rule 103   MulOp -> MOD
Rule 104   MulOp -> AND
Rule 105   MulOp -> SHL
Rule 106   MulOp -> SHR
Rule 107   CommaExpression -> CommaExpression COMMA Expression
Rule 108   CommaExpression -> <empty>
Rule 109   ExprList -> Expression CommaExpression
Rule 110   Designator -> ID DesSubEleStar
Rule 111   DesSubEleStar -> DesSubEleStar DesignatorSubElem
Rule 112   DesSubEleStar -> <empty>
Rule 113   DesignatorSubElem -> DOT ID
Rule 114   DesignatorSubElem -> LSQUARE ExprList RSQUARE
Rule 115   DesignatorSubElem -> POWER SEMICOLON
Rule 116   ConstSection -> CONSTANT ColonConstDecl
Rule 117   ConstSection -> <empty>
Rule 118   ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON
Rule 119   ColonConstDecl -> <empty>
Rule 120   ConstDecl -> ID EQUALS ConstExpr
Rule 121   ConstDecl -> ID COLON TypeID EQUALS TypedConst
Rule 122   TypedConst -> ConstExpr
Rule 123   TypedConst -> ArrayConst
Rule 124   Array -> ARRAY LSQUARE ONE DOTDOT OrdinalType RSQUARE OF TypeArray
Rule 125   TypeArray -> TypeID
Rule 126   TypeArray -> PointerType
Rule 127   ArrayConst -> LPAREN TypedConst CommaTypedConst RPAREN
Rule 128   CommaTypedConst -> CommaTypedConst COMMA TypedConst
Rule 129   CommaTypedConst -> <empty>
Rule 130   ConstExpr -> <empty>
Rule 131   IdentList -> ID TypeArgs CommaIDTypeArgs
Rule 132   IdentList -> ID CommaIDTypeArgs
Rule 133   CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID TypeArgs
Rule 134   CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID
Rule 135   CommaIDTypeArgs -> <empty>
Rule 136   VarSection -> VAR ColonVarDecl
Rule 137   VarSection -> ColonVarDecl
Rule 138   ColonVarDecl -> VarDecl SEMICOLON ColonVarDecl
Rule 139   ColonVarDecl -> <empty>
Rule 140   VarDecl -> IdentList COLON Type
Rule 141   ProcedureDeclSection -> ProcedureDecl
Rule 142   ProcedureDeclSection -> FuncDecl
Rule 143   ProcedureDeclSection -> ConstrucDecl
Rule 144   ProcedureDeclSection -> LambFuncDecl
Rule 145   ConstrucDecl -> ConstrucHeading SEMICOLON Block
Rule 146   ConstrucHeading -> CONSTRUCTOR ID FormalParams
Rule 147   FuncDecl -> FuncHeading SEMICOLON Block
Rule 148   FuncHeading -> FUNCTION ID LPAREN FormalParams RPAREN
Rule 149   FuncHeadingSemicolon -> FUNCTION ID LPAREN FormalParams RPAREN SEMICOLON
Rule 150   FormalParams -> IdentList
Rule 151   FormalParams -> <empty>
Rule 152   ProcedureDecl -> ProcedureHeading SEMICOLON Block
Rule 153   ProcedureHeading -> PROCEDURE Designator FormalParams
Rule 154   ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON
Rule 155   LambFuncDecl -> ID COLON SimpleExpression
Rule 156   LambFunc -> ID LPAREN ConstExpr RPAREN
Rule 157   ObjectType -> OBJECT ObjectHeritage ObjectBody END
Rule 158   ObjectHeritage -> LPAREN IdentList RPAREN
Rule 159   ObjectHeritage -> <empty>
Rule 160   ObjectBody -> ObjectBody ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList
Rule 161   ObjectBody -> <empty>
Rule 162   ObjectVis -> PUBLIC
Rule 163   ObjectVis -> <empty>
Rule 164   ObjectVarSection -> VarSection
Rule 165   ObjectVarSection -> <empty>
Rule 166   ObjectTypeSection -> TypeSection
Rule 167   ObjectTypeSection -> <empty>
Rule 168   ObjectConstSection -> ConstSection
Rule 169   ObjectConstSection -> <empty>
Rule 170   ObjectMethodList -> ObjectMethodHeading
Rule 171   ObjectMethodList -> <empty>
Rule 172   ObjectMethodHeading -> ProcedureHeadingSemicolon
Rule 173   ObjectMethodHeading -> FuncHeadingSemicolon
Rule 174   ClassType -> CLASS ClassHeritage ClassBody END
Rule 175   ClassHeritage -> LPAREN IdentList RPAREN
Rule 176   ClassHeritage -> <empty>
Rule 177   ClassBody -> ClassBody ClassVis ClassTypeSection ClassConstSection ClassVarSection ClassMethodList
Rule 178   ClassBody -> <empty>
Rule 179   ClassVis -> PUBLIC
Rule 180   ClassVis -> <empty>
Rule 181   ClassTypeSection -> TypeSection
Rule 182   ClassTypeSection -> <empty>
Rule 183   ClassConstSection -> ConstSection
Rule 184   ClassConstSection -> <empty>
Rule 185   ClassVarSection -> VarSection
Rule 186   ClassVarSection -> <empty>
Rule 187   ClassMethodList -> ClassMethodHeading
Rule 188   ClassMethodList -> <empty>
Rule 189   ClassMethodHeading -> ProcedureHeadingSemicolon
Rule 190   ClassMethodHeading -> FuncHeadingSemicolon

Terminals, with rules where they appear

AMPERSAND            : 
AND                  : 104
ARRAY                : 124
AS                   : 
ASSIGNTO             : 19
ATRATE               : 
BEGIN                : 11
BREAK                : 
CASE                 : 29 30
CHAR                 : 77
CHARACTER            : 
CLASS                : 174
COLON                : 33 121 140 155
COMMA                : 107 128 133 134
COMMENT              : 
CONSTANT             : 116
CONSTRUCTOR          : 146
CONTINUE             : 
DIV                  : 102
DIVIDE               : 101
DO                   : 38
DOT                  : 113
DOTDOT               : 124
DOUBLE               : 79
DOUBLESLASH          : 
DOUBLESTAR           : 
ELSE                 : 28 30
END                  : 11 29 30 157 174
EQUALS               : 84 85 86 87 95 120 121
FOR                  : 
FUNCTION             : 148 149
GEQ                  : 92
ID                   : 2 66 69 84 85 86 87 110 113 120 121 131 132 133 134 146 148 149 155 156
IF                   : 27 28
INHERITED            : 20 56 57
INTEGER              : 75 78
INVERTCOMMA          : 
INVERTDOUBLECOMMA    : 
LAMBDA               : 
LANGLE               : 73 74 90
LCURLY               : 
LEQ                  : 93
LPAREN               : 18 21 51 54 58 59 127 148 149 156 158 175
LSQUARE              : 114 124
MINUS                : 43 97
MOD                  : 103
MULTIPLY             : 100
NOT                  : 55
NOTEQUALS            : 94
NUMBER               : 34 53
OBJECT               : 157
OF                   : 29 30 124
ONE                  : 124
OR                   : 98
PERCENT              : 
PLUS                 : 42 96
POWER                : 69 115
PROCEDURE            : 153 154
PROGRAM              : 2
PUBLIC               : 162 179
RANGE                : 
RANGLE               : 73 74 91
RCURLY               : 
REAL                 : 76
REPEAT               : 37
RPAREN               : 18 21 51 54 58 59 127 148 149 156 158 175
RSQUARE              : 114 124
SELF                 : 
SEMICOLON            : 2 11 12 13 25 26 30 31 37 38 82 115 118 138 145 147 149 152 154
SHL                  : 105
SHR                  : 106
STRING               : 70 74
THEN                 : 27 28
TO                   : 
TYPE                 : 80 86 87
UNDERSCORE           : 
UNTIL                : 37
USERSTRING           : 52
VAR                  : 136
WHILE                : 38
XOR                  : 99
error                : 

Nonterminals, with rules where they appear

AddOp                : 45
AddTermStar          : 42 43 44 45
Array                : 65
ArrayConst           : 123
Block                : 2 145 147 152
CaseLabel            : 33
CaseSelector         : 29 30 31
CaseStmt             : 26
ClassBody            : 174 177
ClassConstSection    : 177
ClassHeritage        : 174
ClassMethodHeading   : 187
ClassMethodList      : 177
ClassType            : 89
ClassTypeSection     : 177
ClassVarSection      : 177
ClassVis             : 177
ColonCaseSelector    : 29 30 31
ColonConstDecl       : 116 118
ColonTypeDecl        : 80 81 82
ColonVarDecl         : 136 137 138
CommaExpression      : 107 109
CommaIDTypeArgs      : 131 132 133 134
CommaTypedConst      : 127 128
CompoundStmt         : 3 4 22
ConditionalStmt      : 23
ConstDecl            : 118
ConstExpr            : 120 122 156
ConstSection         : 7 168 183
ConstrucDecl         : 143
ConstrucHeading      : 145
DeclSection          : 4 5
DesSubEleStar        : 110 111
Designator           : 17 18 19 50 51 56 153 154
DesignatorSubElem    : 111
ExprList             : 18 51 114
Expression           : 19 21 27 28 29 30 37 38 54 58 107 109
Factor               : 47 48 55
FormalParams         : 146 148 149 153 154
FuncDecl             : 142
FuncHeading          : 72 147
FuncHeadingSemicolon : 173 190
Goal                 : 0
IdentList            : 140 150 158 175
IfStmt               : 25
LambFunc             : 59
LambFuncDecl         : 144
LoopStmt             : 24
MulFacStar           : 47 48
MulOp                : 48
ObjectBody           : 157 160
ObjectConstSection   : 160
ObjectHeritage       : 157
ObjectMethodHeading  : 170
ObjectMethodList     : 160
ObjectType           : 88
ObjectTypeSection    : 160
ObjectVarSection     : 160
ObjectVis            : 160
OrdinalType          : 67 124
PointerType          : 62 126
ProcedureDecl        : 141
ProcedureDeclSection : 10
ProcedureHeading     : 71 152
ProcedureHeadingSemicolon : 172 189
ProcedureType        : 64
Program              : 1
RealType             : 68
RelOp                : 40
RelSimpleStar        : 39 40
RepeatStmt           : 35
RestrictedType       : 85 87
SimpleExpression     : 39 40 155
SimpleStatement      : 14
SimpleType           : 61
Statement            : 12 13 27 28 28 30 33 37 38
StmtList             : 11 12
StringType           : 63
StructStmt           : 15
Term                 : 42 43 44 45
Type                 : 84 86 140
TypeArgs             : 131 133
TypeArray            : 124
TypeDecl             : 82
TypeID               : 58 60 73 121 125
TypeSection          : 8 166 181
TypedConst           : 121 127 128
VarDecl              : 138
VarSection           : 9 164 185
WhichSection         : 5
WhileStmt            : 36

Parsing method: LALR

state 0

    (0) S' -> . Goal
    (1) Goal -> . Program
    (2) Program -> . PROGRAM ID SEMICOLON Block

    PROGRAM         shift and go to state 2

    Program                        shift and go to state 3
    Goal                           shift and go to state 1

state 1

    (0) S' -> Goal .



state 2

    (2) Program -> PROGRAM . ID SEMICOLON Block

    ID              shift and go to state 4


state 3

    (1) Goal -> Program .

    $end            reduce using rule 1 (Goal -> Program .)


state 4

    (2) Program -> PROGRAM ID . SEMICOLON Block

    SEMICOLON       shift and go to state 5


state 5

    (2) Program -> PROGRAM ID SEMICOLON . Block
    (3) Block -> . CompoundStmt
    (4) Block -> . DeclSection CompoundStmt
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (5) DeclSection -> . DeclSection WhichSection
    (6) DeclSection -> .

  ! shift/reduce conflict for BEGIN resolved as shift
    BEGIN           shift and go to state 7
    CONSTANT        reduce using rule 6 (DeclSection -> .)
    TYPE            reduce using rule 6 (DeclSection -> .)
    VAR             reduce using rule 6 (DeclSection -> .)
    ID              reduce using rule 6 (DeclSection -> .)
    PROCEDURE       reduce using rule 6 (DeclSection -> .)
    FUNCTION        reduce using rule 6 (DeclSection -> .)
    CONSTRUCTOR     reduce using rule 6 (DeclSection -> .)

  ! BEGIN           [ reduce using rule 6 (DeclSection -> .) ]

    DeclSection                    shift and go to state 6
    CompoundStmt                   shift and go to state 8
    Block                          shift and go to state 9

state 6

    (4) Block -> DeclSection . CompoundStmt
    (5) DeclSection -> DeclSection . WhichSection
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (7) WhichSection -> . ConstSection
    (8) WhichSection -> . TypeSection
    (9) WhichSection -> . VarSection
    (10) WhichSection -> . ProcedureDeclSection
    (116) ConstSection -> . CONSTANT ColonConstDecl
    (117) ConstSection -> .
    (80) TypeSection -> . TYPE ColonTypeDecl
    (81) TypeSection -> . ColonTypeDecl
    (136) VarSection -> . VAR ColonVarDecl
    (137) VarSection -> . ColonVarDecl
    (141) ProcedureDeclSection -> . ProcedureDecl
    (142) ProcedureDeclSection -> . FuncDecl
    (143) ProcedureDeclSection -> . ConstrucDecl
    (144) ProcedureDeclSection -> . LambFuncDecl
    (82) ColonTypeDecl -> . ColonTypeDecl TypeDecl SEMICOLON
    (83) ColonTypeDecl -> .
    (138) ColonVarDecl -> . VarDecl SEMICOLON ColonVarDecl
    (139) ColonVarDecl -> .
    (152) ProcedureDecl -> . ProcedureHeading SEMICOLON Block
    (147) FuncDecl -> . FuncHeading SEMICOLON Block
    (145) ConstrucDecl -> . ConstrucHeading SEMICOLON Block
    (155) LambFuncDecl -> . ID COLON SimpleExpression
    (140) VarDecl -> . IdentList COLON Type
    (153) ProcedureHeading -> . PROCEDURE Designator FormalParams
    (148) FuncHeading -> . FUNCTION ID LPAREN FormalParams RPAREN
    (146) ConstrucHeading -> . CONSTRUCTOR ID FormalParams
    (131) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (132) IdentList -> . ID CommaIDTypeArgs

  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for CONSTANT resolved as shift
  ! shift/reduce conflict for TYPE resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 83 (ColonTypeDecl -> .)
  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for CONSTANT resolved as shift
  ! shift/reduce conflict for TYPE resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for PROCEDURE resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for CONSTRUCTOR resolved using rule 83 (ColonTypeDecl -> .)
  ! shift/reduce conflict for BEGIN resolved as shift
  ! shift/reduce conflict for CONSTANT resolved as shift
  ! shift/reduce conflict for TYPE resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for CONSTRUCTOR resolved using rule 83 (ColonTypeDecl -> .)
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for PROCEDURE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for CONSTRUCTOR resolved as shift
    BEGIN           shift and go to state 7
    CONSTANT        shift and go to state 25
    TYPE            shift and go to state 32
    VAR             shift and go to state 26
    ID              shift and go to state 28
    PROCEDURE       shift and go to state 20
    FUNCTION        shift and go to state 22
    CONSTRUCTOR     shift and go to state 12

  ! BEGIN           [ reduce using rule 117 (ConstSection -> .) ]
  ! CONSTANT        [ reduce using rule 117 (ConstSection -> .) ]
  ! TYPE            [ reduce using rule 117 (ConstSection -> .) ]
  ! VAR             [ reduce using rule 117 (ConstSection -> .) ]
  ! ID              [ reduce using rule 117 (ConstSection -> .) ]
  ! PROCEDURE       [ reduce using rule 117 (ConstSection -> .) ]
  ! FUNCTION        [ reduce using rule 117 (ConstSection -> .) ]
  ! CONSTRUCTOR     [ reduce using rule 117 (ConstSection -> .) ]
  ! ID              [ reduce using rule 83 (ColonTypeDecl -> .) ]
  ! BEGIN           [ reduce using rule 83 (ColonTypeDecl -> .) ]
  ! CONSTANT        [ reduce using rule 83 (ColonTypeDecl -> .) ]
  ! TYPE            [ reduce using rule 83 (ColonTypeDecl -> .) ]
  ! VAR             [ reduce using rule 83 (ColonTypeDecl -> .) ]
  ! PROCEDURE       [ reduce using rule 83 (ColonTypeDecl -> .) ]
  ! FUNCTION        [ reduce using rule 83 (ColonTypeDecl -> .) ]
  ! CONSTRUCTOR     [ reduce using rule 83 (ColonTypeDecl -> .) ]
  ! BEGIN           [ reduce using rule 139 (ColonVarDecl -> .) ]
  ! CONSTANT        [ reduce using rule 139 (ColonVarDecl -> .) ]
  ! TYPE            [ reduce using rule 139 (ColonVarDecl -> .) ]
  ! VAR             [ reduce using rule 139 (ColonVarDecl -> .) ]
  ! ID              [ reduce using rule 139 (ColonVarDecl -> .) ]
  ! PROCEDURE       [ reduce using rule 139 (ColonVarDecl -> .) ]
  ! FUNCTION        [ reduce using rule 139 (ColonVarDecl -> .) ]
  ! CONSTRUCTOR     [ reduce using rule 139 (ColonVarDecl -> .) ]

    IdentList                      shift and go to state 10
    ConstrucDecl                   shift and go to state 11
    ConstrucHeading                shift and go to state 31
    ProcedureHeading               shift and go to state 14
    ProcedureDeclSection           shift and go to state 15
    ColonVarDecl                   shift and go to state 16
    FuncHeading                    shift and go to state 17
    FuncDecl                       shift and go to state 18
    ColonTypeDecl                  shift and go to state 19
    ConstSection                   shift and go to state 21
    LambFuncDecl                   shift and go to state 23
    TypeSection                    shift and go to state 24
    VarSection                     shift and go to state 27
    WhichSection                   shift and go to state 29
    VarDecl                        shift and go to state 30
    ProcedureDecl                  shift and go to state 13
    CompoundStmt                   shift and go to state 33

state 7

    (11) CompoundStmt -> BEGIN . StmtList END SEMICOLON
    (12) StmtList -> . StmtList Statement SEMICOLON
    (13) StmtList -> . Statement SEMICOLON
    (14) Statement -> . SimpleStatement
    (15) Statement -> . StructStmt
    (16) Statement -> .
    (17) SimpleStatement -> . Designator
    (18) SimpleStatement -> . Designator LPAREN ExprList RPAREN
    (19) SimpleStatement -> . Designator ASSIGNTO Expression
    (20) SimpleStatement -> . INHERITED
    (21) SimpleStatement -> . LPAREN Expression RPAREN
    (22) StructStmt -> . CompoundStmt
    (23) StructStmt -> . ConditionalStmt
    (24) StructStmt -> . LoopStmt
    (110) Designator -> . ID DesSubEleStar
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (25) ConditionalStmt -> . IfStmt SEMICOLON
    (26) ConditionalStmt -> . CaseStmt SEMICOLON
    (35) LoopStmt -> . RepeatStmt
    (36) LoopStmt -> . WhileStmt
    (27) IfStmt -> . IF Expression THEN Statement
    (28) IfStmt -> . IF Expression THEN Statement ELSE Statement
    (29) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector END
    (30) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END
    (37) RepeatStmt -> . REPEAT Statement UNTIL Expression SEMICOLON
    (38) WhileStmt -> . WHILE Expression DO Statement SEMICOLON

    SEMICOLON       reduce using rule 16 (Statement -> .)
    INHERITED       shift and go to state 45
    LPAREN          shift and go to state 44
    ID              shift and go to state 46
    BEGIN           shift and go to state 7
    IF              shift and go to state 47
    CASE            shift and go to state 38
    REPEAT          shift and go to state 49
    WHILE           shift and go to state 48

    WhileStmt                      shift and go to state 43
    StmtList                       shift and go to state 36
    Designator                     shift and go to state 39
    IfStmt                         shift and go to state 37
    SimpleStatement                shift and go to state 35
    CompoundStmt                   shift and go to state 52
    LoopStmt                       shift and go to state 40
    Statement                      shift and go to state 34
    StructStmt                     shift and go to state 50
    RepeatStmt                     shift and go to state 51
    CaseStmt                       shift and go to state 41
    ConditionalStmt                shift and go to state 42

state 8

    (3) Block -> CompoundStmt .

    BEGIN           reduce using rule 3 (Block -> CompoundStmt .)
    CONSTANT        reduce using rule 3 (Block -> CompoundStmt .)
    TYPE            reduce using rule 3 (Block -> CompoundStmt .)
    VAR             reduce using rule 3 (Block -> CompoundStmt .)
    ID              reduce using rule 3 (Block -> CompoundStmt .)
    PROCEDURE       reduce using rule 3 (Block -> CompoundStmt .)
    FUNCTION        reduce using rule 3 (Block -> CompoundStmt .)
    CONSTRUCTOR     reduce using rule 3 (Block -> CompoundStmt .)
    $end            reduce using rule 3 (Block -> CompoundStmt .)


state 9

    (2) Program -> PROGRAM ID SEMICOLON Block .

    $end            reduce using rule 2 (Program -> PROGRAM ID SEMICOLON Block .)


state 10

    (140) VarDecl -> IdentList . COLON Type

    COLON           shift and go to state 53


state 11

    (143) ProcedureDeclSection -> ConstrucDecl .

    BEGIN           reduce using rule 143 (ProcedureDeclSection -> ConstrucDecl .)
    CONSTANT        reduce using rule 143 (ProcedureDeclSection -> ConstrucDecl .)
    TYPE            reduce using rule 143 (ProcedureDeclSection -> ConstrucDecl .)
    VAR             reduce using rule 143 (ProcedureDeclSection -> ConstrucDecl .)
    ID              reduce using rule 143 (ProcedureDeclSection -> ConstrucDecl .)
    PROCEDURE       reduce using rule 143 (ProcedureDeclSection -> ConstrucDecl .)
    FUNCTION        reduce using rule 143 (ProcedureDeclSection -> ConstrucDecl .)
    CONSTRUCTOR     reduce using rule 143 (ProcedureDeclSection -> ConstrucDecl .)


state 12

    (146) ConstrucHeading -> CONSTRUCTOR . ID FormalParams

    ID              shift and go to state 54


state 13

    (141) ProcedureDeclSection -> ProcedureDecl .

    BEGIN           reduce using rule 141 (ProcedureDeclSection -> ProcedureDecl .)
    CONSTANT        reduce using rule 141 (ProcedureDeclSection -> ProcedureDecl .)
    TYPE            reduce using rule 141 (ProcedureDeclSection -> ProcedureDecl .)
    VAR             reduce using rule 141 (ProcedureDeclSection -> ProcedureDecl .)
    ID              reduce using rule 141 (ProcedureDeclSection -> ProcedureDecl .)
    PROCEDURE       reduce using rule 141 (ProcedureDeclSection -> ProcedureDecl .)
    FUNCTION        reduce using rule 141 (ProcedureDeclSection -> ProcedureDecl .)
    CONSTRUCTOR     reduce using rule 141 (ProcedureDeclSection -> ProcedureDecl .)


state 14

    (152) ProcedureDecl -> ProcedureHeading . SEMICOLON Block

    SEMICOLON       shift and go to state 55


state 15

    (10) WhichSection -> ProcedureDeclSection .

    BEGIN           reduce using rule 10 (WhichSection -> ProcedureDeclSection .)
    CONSTANT        reduce using rule 10 (WhichSection -> ProcedureDeclSection .)
    TYPE            reduce using rule 10 (WhichSection -> ProcedureDeclSection .)
    VAR             reduce using rule 10 (WhichSection -> ProcedureDeclSection .)
    ID              reduce using rule 10 (WhichSection -> ProcedureDeclSection .)
    PROCEDURE       reduce using rule 10 (WhichSection -> ProcedureDeclSection .)
    FUNCTION        reduce using rule 10 (WhichSection -> ProcedureDeclSection .)
    CONSTRUCTOR     reduce using rule 10 (WhichSection -> ProcedureDeclSection .)


state 16

    (137) VarSection -> ColonVarDecl .

    PROCEDURE       reduce using rule 137 (VarSection -> ColonVarDecl .)
    FUNCTION        reduce using rule 137 (VarSection -> ColonVarDecl .)
    END             reduce using rule 137 (VarSection -> ColonVarDecl .)
    PUBLIC          reduce using rule 137 (VarSection -> ColonVarDecl .)
    TYPE            reduce using rule 137 (VarSection -> ColonVarDecl .)
    CONSTANT        reduce using rule 137 (VarSection -> ColonVarDecl .)
    VAR             reduce using rule 137 (VarSection -> ColonVarDecl .)
    ID              reduce using rule 137 (VarSection -> ColonVarDecl .)
    BEGIN           reduce using rule 137 (VarSection -> ColonVarDecl .)
    CONSTRUCTOR     reduce using rule 137 (VarSection -> ColonVarDecl .)


state 17

    (147) FuncDecl -> FuncHeading . SEMICOLON Block

    SEMICOLON       shift and go to state 56


state 18

    (142) ProcedureDeclSection -> FuncDecl .

    BEGIN           reduce using rule 142 (ProcedureDeclSection -> FuncDecl .)
    CONSTANT        reduce using rule 142 (ProcedureDeclSection -> FuncDecl .)
    TYPE            reduce using rule 142 (ProcedureDeclSection -> FuncDecl .)
    VAR             reduce using rule 142 (ProcedureDeclSection -> FuncDecl .)
    ID              reduce using rule 142 (ProcedureDeclSection -> FuncDecl .)
    PROCEDURE       reduce using rule 142 (ProcedureDeclSection -> FuncDecl .)
    FUNCTION        reduce using rule 142 (ProcedureDeclSection -> FuncDecl .)
    CONSTRUCTOR     reduce using rule 142 (ProcedureDeclSection -> FuncDecl .)


state 19

    (81) TypeSection -> ColonTypeDecl .
    (82) ColonTypeDecl -> ColonTypeDecl . TypeDecl SEMICOLON
    (84) TypeDecl -> . ID EQUALS Type
    (85) TypeDecl -> . ID EQUALS RestrictedType
    (86) TypeDecl -> . ID EQUALS TYPE Type
    (87) TypeDecl -> . ID EQUALS TYPE RestrictedType

  ! shift/reduce conflict for ID resolved as shift
    CONSTANT        reduce using rule 81 (TypeSection -> ColonTypeDecl .)
    VAR             reduce using rule 81 (TypeSection -> ColonTypeDecl .)
    PROCEDURE       reduce using rule 81 (TypeSection -> ColonTypeDecl .)
    FUNCTION        reduce using rule 81 (TypeSection -> ColonTypeDecl .)
    END             reduce using rule 81 (TypeSection -> ColonTypeDecl .)
    PUBLIC          reduce using rule 81 (TypeSection -> ColonTypeDecl .)
    TYPE            reduce using rule 81 (TypeSection -> ColonTypeDecl .)
    BEGIN           reduce using rule 81 (TypeSection -> ColonTypeDecl .)
    CONSTRUCTOR     reduce using rule 81 (TypeSection -> ColonTypeDecl .)
    ID              shift and go to state 58

  ! ID              [ reduce using rule 81 (TypeSection -> ColonTypeDecl .) ]

    TypeDecl                       shift and go to state 57

state 20

    (153) ProcedureHeading -> PROCEDURE . Designator FormalParams
    (110) Designator -> . ID DesSubEleStar

    ID              shift and go to state 46

    Designator                     shift and go to state 59

state 21

    (7) WhichSection -> ConstSection .

    BEGIN           reduce using rule 7 (WhichSection -> ConstSection .)
    CONSTANT        reduce using rule 7 (WhichSection -> ConstSection .)
    TYPE            reduce using rule 7 (WhichSection -> ConstSection .)
    VAR             reduce using rule 7 (WhichSection -> ConstSection .)
    ID              reduce using rule 7 (WhichSection -> ConstSection .)
    PROCEDURE       reduce using rule 7 (WhichSection -> ConstSection .)
    FUNCTION        reduce using rule 7 (WhichSection -> ConstSection .)
    CONSTRUCTOR     reduce using rule 7 (WhichSection -> ConstSection .)


state 22

    (148) FuncHeading -> FUNCTION . ID LPAREN FormalParams RPAREN

    ID              shift and go to state 60


state 23

    (144) ProcedureDeclSection -> LambFuncDecl .

    BEGIN           reduce using rule 144 (ProcedureDeclSection -> LambFuncDecl .)
    CONSTANT        reduce using rule 144 (ProcedureDeclSection -> LambFuncDecl .)
    TYPE            reduce using rule 144 (ProcedureDeclSection -> LambFuncDecl .)
    VAR             reduce using rule 144 (ProcedureDeclSection -> LambFuncDecl .)
    ID              reduce using rule 144 (ProcedureDeclSection -> LambFuncDecl .)
    PROCEDURE       reduce using rule 144 (ProcedureDeclSection -> LambFuncDecl .)
    FUNCTION        reduce using rule 144 (ProcedureDeclSection -> LambFuncDecl .)
    CONSTRUCTOR     reduce using rule 144 (ProcedureDeclSection -> LambFuncDecl .)


state 24

    (8) WhichSection -> TypeSection .

    BEGIN           reduce using rule 8 (WhichSection -> TypeSection .)
    CONSTANT        reduce using rule 8 (WhichSection -> TypeSection .)
    TYPE            reduce using rule 8 (WhichSection -> TypeSection .)
    VAR             reduce using rule 8 (WhichSection -> TypeSection .)
    ID              reduce using rule 8 (WhichSection -> TypeSection .)
    PROCEDURE       reduce using rule 8 (WhichSection -> TypeSection .)
    FUNCTION        reduce using rule 8 (WhichSection -> TypeSection .)
    CONSTRUCTOR     reduce using rule 8 (WhichSection -> TypeSection .)


state 25

    (116) ConstSection -> CONSTANT . ColonConstDecl
    (118) ColonConstDecl -> . ColonConstDecl ConstDecl SEMICOLON
    (119) ColonConstDecl -> .

    ID              reduce using rule 119 (ColonConstDecl -> .)
    BEGIN           reduce using rule 119 (ColonConstDecl -> .)
    CONSTANT        reduce using rule 119 (ColonConstDecl -> .)
    TYPE            reduce using rule 119 (ColonConstDecl -> .)
    VAR             reduce using rule 119 (ColonConstDecl -> .)
    PROCEDURE       reduce using rule 119 (ColonConstDecl -> .)
    FUNCTION        reduce using rule 119 (ColonConstDecl -> .)
    CONSTRUCTOR     reduce using rule 119 (ColonConstDecl -> .)
    END             reduce using rule 119 (ColonConstDecl -> .)
    PUBLIC          reduce using rule 119 (ColonConstDecl -> .)

    ColonConstDecl                 shift and go to state 61

state 26

    (136) VarSection -> VAR . ColonVarDecl
    (138) ColonVarDecl -> . VarDecl SEMICOLON ColonVarDecl
    (139) ColonVarDecl -> .
    (140) VarDecl -> . IdentList COLON Type
    (131) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (132) IdentList -> . ID CommaIDTypeArgs

  ! shift/reduce conflict for ID resolved as shift
    BEGIN           reduce using rule 139 (ColonVarDecl -> .)
    CONSTANT        reduce using rule 139 (ColonVarDecl -> .)
    TYPE            reduce using rule 139 (ColonVarDecl -> .)
    VAR             reduce using rule 139 (ColonVarDecl -> .)
    PROCEDURE       reduce using rule 139 (ColonVarDecl -> .)
    FUNCTION        reduce using rule 139 (ColonVarDecl -> .)
    CONSTRUCTOR     reduce using rule 139 (ColonVarDecl -> .)
    END             reduce using rule 139 (ColonVarDecl -> .)
    PUBLIC          reduce using rule 139 (ColonVarDecl -> .)
    ID              shift and go to state 63

  ! ID              [ reduce using rule 139 (ColonVarDecl -> .) ]

    ColonVarDecl                   shift and go to state 62
    IdentList                      shift and go to state 10
    VarDecl                        shift and go to state 30

state 27

    (9) WhichSection -> VarSection .

    BEGIN           reduce using rule 9 (WhichSection -> VarSection .)
    CONSTANT        reduce using rule 9 (WhichSection -> VarSection .)
    TYPE            reduce using rule 9 (WhichSection -> VarSection .)
    VAR             reduce using rule 9 (WhichSection -> VarSection .)
    ID              reduce using rule 9 (WhichSection -> VarSection .)
    PROCEDURE       reduce using rule 9 (WhichSection -> VarSection .)
    FUNCTION        reduce using rule 9 (WhichSection -> VarSection .)
    CONSTRUCTOR     reduce using rule 9 (WhichSection -> VarSection .)


state 28

    (155) LambFuncDecl -> ID . COLON SimpleExpression
    (131) IdentList -> ID . TypeArgs CommaIDTypeArgs
    (132) IdentList -> ID . CommaIDTypeArgs
    (73) TypeArgs -> . LANGLE TypeID RANGLE
    (74) TypeArgs -> . LANGLE STRING RANGLE
    (133) CommaIDTypeArgs -> . CommaIDTypeArgs COMMA ID TypeArgs
    (134) CommaIDTypeArgs -> . CommaIDTypeArgs COMMA ID
    (135) CommaIDTypeArgs -> .

  ! shift/reduce conflict for COLON resolved as shift
    COLON           shift and go to state 67
    LANGLE          shift and go to state 65
    COMMA           reduce using rule 135 (CommaIDTypeArgs -> .)

  ! COLON           [ reduce using rule 135 (CommaIDTypeArgs -> .) ]

    CommaIDTypeArgs                shift and go to state 64
    TypeArgs                       shift and go to state 66

state 29

    (5) DeclSection -> DeclSection WhichSection .

    BEGIN           reduce using rule 5 (DeclSection -> DeclSection WhichSection .)
    CONSTANT        reduce using rule 5 (DeclSection -> DeclSection WhichSection .)
    TYPE            reduce using rule 5 (DeclSection -> DeclSection WhichSection .)
    VAR             reduce using rule 5 (DeclSection -> DeclSection WhichSection .)
    ID              reduce using rule 5 (DeclSection -> DeclSection WhichSection .)
    PROCEDURE       reduce using rule 5 (DeclSection -> DeclSection WhichSection .)
    FUNCTION        reduce using rule 5 (DeclSection -> DeclSection WhichSection .)
    CONSTRUCTOR     reduce using rule 5 (DeclSection -> DeclSection WhichSection .)


state 30

    (138) ColonVarDecl -> VarDecl . SEMICOLON ColonVarDecl

    SEMICOLON       shift and go to state 68


state 31

    (145) ConstrucDecl -> ConstrucHeading . SEMICOLON Block

    SEMICOLON       shift and go to state 69


state 32

    (80) TypeSection -> TYPE . ColonTypeDecl
    (82) ColonTypeDecl -> . ColonTypeDecl TypeDecl SEMICOLON
    (83) ColonTypeDecl -> .

    ID              reduce using rule 83 (ColonTypeDecl -> .)
    BEGIN           reduce using rule 83 (ColonTypeDecl -> .)
    CONSTANT        reduce using rule 83 (ColonTypeDecl -> .)
    TYPE            reduce using rule 83 (ColonTypeDecl -> .)
    VAR             reduce using rule 83 (ColonTypeDecl -> .)
    PROCEDURE       reduce using rule 83 (ColonTypeDecl -> .)
    FUNCTION        reduce using rule 83 (ColonTypeDecl -> .)
    CONSTRUCTOR     reduce using rule 83 (ColonTypeDecl -> .)
    END             reduce using rule 83 (ColonTypeDecl -> .)
    PUBLIC          reduce using rule 83 (ColonTypeDecl -> .)

    ColonTypeDecl                  shift and go to state 70

state 33

    (4) Block -> DeclSection CompoundStmt .

    BEGIN           reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    CONSTANT        reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    TYPE            reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    VAR             reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    ID              reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    PROCEDURE       reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    FUNCTION        reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    CONSTRUCTOR     reduce using rule 4 (Block -> DeclSection CompoundStmt .)
    $end            reduce using rule 4 (Block -> DeclSection CompoundStmt .)


state 34

    (13) StmtList -> Statement . SEMICOLON

    SEMICOLON       shift and go to state 71


state 35

    (14) Statement -> SimpleStatement .

    SEMICOLON       reduce using rule 14 (Statement -> SimpleStatement .)
    END             reduce using rule 14 (Statement -> SimpleStatement .)
    ELSE            reduce using rule 14 (Statement -> SimpleStatement .)
    UNTIL           reduce using rule 14 (Statement -> SimpleStatement .)


state 36

    (11) CompoundStmt -> BEGIN StmtList . END SEMICOLON
    (12) StmtList -> StmtList . Statement SEMICOLON
    (14) Statement -> . SimpleStatement
    (15) Statement -> . StructStmt
    (16) Statement -> .
    (17) SimpleStatement -> . Designator
    (18) SimpleStatement -> . Designator LPAREN ExprList RPAREN
    (19) SimpleStatement -> . Designator ASSIGNTO Expression
    (20) SimpleStatement -> . INHERITED
    (21) SimpleStatement -> . LPAREN Expression RPAREN
    (22) StructStmt -> . CompoundStmt
    (23) StructStmt -> . ConditionalStmt
    (24) StructStmt -> . LoopStmt
    (110) Designator -> . ID DesSubEleStar
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (25) ConditionalStmt -> . IfStmt SEMICOLON
    (26) ConditionalStmt -> . CaseStmt SEMICOLON
    (35) LoopStmt -> . RepeatStmt
    (36) LoopStmt -> . WhileStmt
    (27) IfStmt -> . IF Expression THEN Statement
    (28) IfStmt -> . IF Expression THEN Statement ELSE Statement
    (29) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector END
    (30) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END
    (37) RepeatStmt -> . REPEAT Statement UNTIL Expression SEMICOLON
    (38) WhileStmt -> . WHILE Expression DO Statement SEMICOLON

    END             shift and go to state 73
    SEMICOLON       reduce using rule 16 (Statement -> .)
    INHERITED       shift and go to state 45
    LPAREN          shift and go to state 44
    ID              shift and go to state 46
    BEGIN           shift and go to state 7
    IF              shift and go to state 47
    CASE            shift and go to state 38
    REPEAT          shift and go to state 49
    WHILE           shift and go to state 48

    WhileStmt                      shift and go to state 43
    Designator                     shift and go to state 39
    IfStmt                         shift and go to state 37
    SimpleStatement                shift and go to state 35
    CompoundStmt                   shift and go to state 52
    LoopStmt                       shift and go to state 40
    Statement                      shift and go to state 72
    StructStmt                     shift and go to state 50
    RepeatStmt                     shift and go to state 51
    CaseStmt                       shift and go to state 41
    ConditionalStmt                shift and go to state 42

state 37

    (25) ConditionalStmt -> IfStmt . SEMICOLON

    SEMICOLON       shift and go to state 74


state 38

    (29) CaseStmt -> CASE . Expression OF CaseSelector ColonCaseSelector END
    (30) CaseStmt -> CASE . Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END
    (39) Expression -> . SimpleExpression RelSimpleStar
    (42) SimpleExpression -> . PLUS Term AddTermStar
    (43) SimpleExpression -> . MINUS Term AddTermStar
    (44) SimpleExpression -> . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 83
    MINUS           shift and go to state 81
    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 86
    Designator                     shift and go to state 82
    Factor                         shift and go to state 80
    SimpleExpression               shift and go to state 87
    Expression                     shift and go to state 89

state 39

    (17) SimpleStatement -> Designator .
    (18) SimpleStatement -> Designator . LPAREN ExprList RPAREN
    (19) SimpleStatement -> Designator . ASSIGNTO Expression

    SEMICOLON       reduce using rule 17 (SimpleStatement -> Designator .)
    END             reduce using rule 17 (SimpleStatement -> Designator .)
    ELSE            reduce using rule 17 (SimpleStatement -> Designator .)
    UNTIL           reduce using rule 17 (SimpleStatement -> Designator .)
    LPAREN          shift and go to state 92
    ASSIGNTO        shift and go to state 91


state 40

    (24) StructStmt -> LoopStmt .

    UNTIL           reduce using rule 24 (StructStmt -> LoopStmt .)
    ELSE            reduce using rule 24 (StructStmt -> LoopStmt .)
    SEMICOLON       reduce using rule 24 (StructStmt -> LoopStmt .)
    END             reduce using rule 24 (StructStmt -> LoopStmt .)


state 41

    (26) ConditionalStmt -> CaseStmt . SEMICOLON

    SEMICOLON       shift and go to state 93


state 42

    (23) StructStmt -> ConditionalStmt .

    UNTIL           reduce using rule 23 (StructStmt -> ConditionalStmt .)
    ELSE            reduce using rule 23 (StructStmt -> ConditionalStmt .)
    SEMICOLON       reduce using rule 23 (StructStmt -> ConditionalStmt .)
    END             reduce using rule 23 (StructStmt -> ConditionalStmt .)


state 43

    (36) LoopStmt -> WhileStmt .

    ELSE            reduce using rule 36 (LoopStmt -> WhileStmt .)
    SEMICOLON       reduce using rule 36 (LoopStmt -> WhileStmt .)
    END             reduce using rule 36 (LoopStmt -> WhileStmt .)
    UNTIL           reduce using rule 36 (LoopStmt -> WhileStmt .)


state 44

    (21) SimpleStatement -> LPAREN . Expression RPAREN
    (39) Expression -> . SimpleExpression RelSimpleStar
    (42) SimpleExpression -> . PLUS Term AddTermStar
    (43) SimpleExpression -> . MINUS Term AddTermStar
    (44) SimpleExpression -> . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 83
    MINUS           shift and go to state 81
    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 86
    Designator                     shift and go to state 82
    Factor                         shift and go to state 80
    SimpleExpression               shift and go to state 87
    Expression                     shift and go to state 94

state 45

    (20) SimpleStatement -> INHERITED .

    SEMICOLON       reduce using rule 20 (SimpleStatement -> INHERITED .)
    END             reduce using rule 20 (SimpleStatement -> INHERITED .)
    ELSE            reduce using rule 20 (SimpleStatement -> INHERITED .)
    UNTIL           reduce using rule 20 (SimpleStatement -> INHERITED .)


state 46

    (110) Designator -> ID . DesSubEleStar
    (111) DesSubEleStar -> . DesSubEleStar DesignatorSubElem
    (112) DesSubEleStar -> .

    DOT             reduce using rule 112 (DesSubEleStar -> .)
    LSQUARE         reduce using rule 112 (DesSubEleStar -> .)
    POWER           reduce using rule 112 (DesSubEleStar -> .)
    LPAREN          reduce using rule 112 (DesSubEleStar -> .)
    ASSIGNTO        reduce using rule 112 (DesSubEleStar -> .)
    SEMICOLON       reduce using rule 112 (DesSubEleStar -> .)
    ID              reduce using rule 112 (DesSubEleStar -> .)
    MULTIPLY        reduce using rule 112 (DesSubEleStar -> .)
    DIVIDE          reduce using rule 112 (DesSubEleStar -> .)
    DIV             reduce using rule 112 (DesSubEleStar -> .)
    MOD             reduce using rule 112 (DesSubEleStar -> .)
    AND             reduce using rule 112 (DesSubEleStar -> .)
    SHL             reduce using rule 112 (DesSubEleStar -> .)
    SHR             reduce using rule 112 (DesSubEleStar -> .)
    PLUS            reduce using rule 112 (DesSubEleStar -> .)
    MINUS           reduce using rule 112 (DesSubEleStar -> .)
    OR              reduce using rule 112 (DesSubEleStar -> .)
    XOR             reduce using rule 112 (DesSubEleStar -> .)
    LANGLE          reduce using rule 112 (DesSubEleStar -> .)
    RANGLE          reduce using rule 112 (DesSubEleStar -> .)
    GEQ             reduce using rule 112 (DesSubEleStar -> .)
    LEQ             reduce using rule 112 (DesSubEleStar -> .)
    NOTEQUALS       reduce using rule 112 (DesSubEleStar -> .)
    EQUALS          reduce using rule 112 (DesSubEleStar -> .)
    OF              reduce using rule 112 (DesSubEleStar -> .)
    RPAREN          reduce using rule 112 (DesSubEleStar -> .)
    THEN            reduce using rule 112 (DesSubEleStar -> .)
    DO              reduce using rule 112 (DesSubEleStar -> .)
    UNTIL           reduce using rule 112 (DesSubEleStar -> .)
    BEGIN           reduce using rule 112 (DesSubEleStar -> .)
    CONSTANT        reduce using rule 112 (DesSubEleStar -> .)
    TYPE            reduce using rule 112 (DesSubEleStar -> .)
    VAR             reduce using rule 112 (DesSubEleStar -> .)
    PROCEDURE       reduce using rule 112 (DesSubEleStar -> .)
    FUNCTION        reduce using rule 112 (DesSubEleStar -> .)
    CONSTRUCTOR     reduce using rule 112 (DesSubEleStar -> .)
    ELSE            reduce using rule 112 (DesSubEleStar -> .)
    END             reduce using rule 112 (DesSubEleStar -> .)
    COMMA           reduce using rule 112 (DesSubEleStar -> .)
    RSQUARE         reduce using rule 112 (DesSubEleStar -> .)

    DesSubEleStar                  shift and go to state 95

state 47

    (27) IfStmt -> IF . Expression THEN Statement
    (28) IfStmt -> IF . Expression THEN Statement ELSE Statement
    (39) Expression -> . SimpleExpression RelSimpleStar
    (42) SimpleExpression -> . PLUS Term AddTermStar
    (43) SimpleExpression -> . MINUS Term AddTermStar
    (44) SimpleExpression -> . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 83
    MINUS           shift and go to state 81
    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 86
    Designator                     shift and go to state 82
    Factor                         shift and go to state 80
    SimpleExpression               shift and go to state 87
    Expression                     shift and go to state 96

state 48

    (38) WhileStmt -> WHILE . Expression DO Statement SEMICOLON
    (39) Expression -> . SimpleExpression RelSimpleStar
    (42) SimpleExpression -> . PLUS Term AddTermStar
    (43) SimpleExpression -> . MINUS Term AddTermStar
    (44) SimpleExpression -> . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 83
    MINUS           shift and go to state 81
    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 86
    Designator                     shift and go to state 82
    Factor                         shift and go to state 80
    SimpleExpression               shift and go to state 87
    Expression                     shift and go to state 97

state 49

    (37) RepeatStmt -> REPEAT . Statement UNTIL Expression SEMICOLON
    (14) Statement -> . SimpleStatement
    (15) Statement -> . StructStmt
    (16) Statement -> .
    (17) SimpleStatement -> . Designator
    (18) SimpleStatement -> . Designator LPAREN ExprList RPAREN
    (19) SimpleStatement -> . Designator ASSIGNTO Expression
    (20) SimpleStatement -> . INHERITED
    (21) SimpleStatement -> . LPAREN Expression RPAREN
    (22) StructStmt -> . CompoundStmt
    (23) StructStmt -> . ConditionalStmt
    (24) StructStmt -> . LoopStmt
    (110) Designator -> . ID DesSubEleStar
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (25) ConditionalStmt -> . IfStmt SEMICOLON
    (26) ConditionalStmt -> . CaseStmt SEMICOLON
    (35) LoopStmt -> . RepeatStmt
    (36) LoopStmt -> . WhileStmt
    (27) IfStmt -> . IF Expression THEN Statement
    (28) IfStmt -> . IF Expression THEN Statement ELSE Statement
    (29) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector END
    (30) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END
    (37) RepeatStmt -> . REPEAT Statement UNTIL Expression SEMICOLON
    (38) WhileStmt -> . WHILE Expression DO Statement SEMICOLON

    UNTIL           reduce using rule 16 (Statement -> .)
    INHERITED       shift and go to state 45
    LPAREN          shift and go to state 44
    ID              shift and go to state 46
    BEGIN           shift and go to state 7
    IF              shift and go to state 47
    CASE            shift and go to state 38
    REPEAT          shift and go to state 49
    WHILE           shift and go to state 48

    WhileStmt                      shift and go to state 43
    ConditionalStmt                shift and go to state 42
    Designator                     shift and go to state 39
    IfStmt                         shift and go to state 37
    SimpleStatement                shift and go to state 35
    CompoundStmt                   shift and go to state 52
    LoopStmt                       shift and go to state 40
    Statement                      shift and go to state 98
    StructStmt                     shift and go to state 50
    RepeatStmt                     shift and go to state 51
    CaseStmt                       shift and go to state 41

state 50

    (15) Statement -> StructStmt .

    SEMICOLON       reduce using rule 15 (Statement -> StructStmt .)
    END             reduce using rule 15 (Statement -> StructStmt .)
    ELSE            reduce using rule 15 (Statement -> StructStmt .)
    UNTIL           reduce using rule 15 (Statement -> StructStmt .)


state 51

    (35) LoopStmt -> RepeatStmt .

    ELSE            reduce using rule 35 (LoopStmt -> RepeatStmt .)
    SEMICOLON       reduce using rule 35 (LoopStmt -> RepeatStmt .)
    END             reduce using rule 35 (LoopStmt -> RepeatStmt .)
    UNTIL           reduce using rule 35 (LoopStmt -> RepeatStmt .)


state 52

    (22) StructStmt -> CompoundStmt .

    UNTIL           reduce using rule 22 (StructStmt -> CompoundStmt .)
    ELSE            reduce using rule 22 (StructStmt -> CompoundStmt .)
    SEMICOLON       reduce using rule 22 (StructStmt -> CompoundStmt .)
    END             reduce using rule 22 (StructStmt -> CompoundStmt .)


state 53

    (140) VarDecl -> IdentList COLON . Type
    (60) Type -> . TypeID
    (61) Type -> . SimpleType
    (62) Type -> . PointerType
    (63) Type -> . StringType
    (64) Type -> . ProcedureType
    (65) Type -> . Array
    (66) Type -> . ID
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR
    (67) SimpleType -> . OrdinalType
    (68) SimpleType -> . RealType
    (69) PointerType -> . POWER ID
    (70) StringType -> . STRING
    (71) ProcedureType -> . ProcedureHeading
    (72) ProcedureType -> . FuncHeading
    (124) Array -> . ARRAY LSQUARE ONE DOTDOT OrdinalType RSQUARE OF TypeArray
    (78) OrdinalType -> . INTEGER
    (79) RealType -> . DOUBLE
    (153) ProcedureHeading -> . PROCEDURE Designator FormalParams
    (148) FuncHeading -> . FUNCTION ID LPAREN FormalParams RPAREN

    ID              shift and go to state 111
    INTEGER         shift and go to state 107
    REAL            shift and go to state 75
    CHAR            shift and go to state 79
    POWER           shift and go to state 106
    STRING          shift and go to state 109
    ARRAY           shift and go to state 108
    DOUBLE          shift and go to state 113
    PROCEDURE       shift and go to state 20
    FUNCTION        shift and go to state 22

    TypeID                         shift and go to state 99
    ProcedureType                  shift and go to state 103
    SimpleType                     shift and go to state 105
    StringType                     shift and go to state 102
    FuncHeading                    shift and go to state 104
    OrdinalType                    shift and go to state 110
    ProcedureHeading               shift and go to state 100
    PointerType                    shift and go to state 114
    RealType                       shift and go to state 112
    Array                          shift and go to state 115
    Type                           shift and go to state 101

state 54

    (146) ConstrucHeading -> CONSTRUCTOR ID . FormalParams
    (150) FormalParams -> . IdentList
    (151) FormalParams -> .
    (131) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (132) IdentList -> . ID CommaIDTypeArgs

    SEMICOLON       reduce using rule 151 (FormalParams -> .)
    ID              shift and go to state 63

    IdentList                      shift and go to state 116
    FormalParams                   shift and go to state 117

state 55

    (152) ProcedureDecl -> ProcedureHeading SEMICOLON . Block
    (3) Block -> . CompoundStmt
    (4) Block -> . DeclSection CompoundStmt
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (5) DeclSection -> . DeclSection WhichSection
    (6) DeclSection -> .

  ! shift/reduce conflict for BEGIN resolved as shift
    BEGIN           shift and go to state 7
    CONSTANT        reduce using rule 6 (DeclSection -> .)
    TYPE            reduce using rule 6 (DeclSection -> .)
    VAR             reduce using rule 6 (DeclSection -> .)
    ID              reduce using rule 6 (DeclSection -> .)
    PROCEDURE       reduce using rule 6 (DeclSection -> .)
    FUNCTION        reduce using rule 6 (DeclSection -> .)
    CONSTRUCTOR     reduce using rule 6 (DeclSection -> .)

  ! BEGIN           [ reduce using rule 6 (DeclSection -> .) ]

    DeclSection                    shift and go to state 6
    CompoundStmt                   shift and go to state 8
    Block                          shift and go to state 118

state 56

    (147) FuncDecl -> FuncHeading SEMICOLON . Block
    (3) Block -> . CompoundStmt
    (4) Block -> . DeclSection CompoundStmt
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (5) DeclSection -> . DeclSection WhichSection
    (6) DeclSection -> .

  ! shift/reduce conflict for BEGIN resolved as shift
    BEGIN           shift and go to state 7
    CONSTANT        reduce using rule 6 (DeclSection -> .)
    TYPE            reduce using rule 6 (DeclSection -> .)
    VAR             reduce using rule 6 (DeclSection -> .)
    ID              reduce using rule 6 (DeclSection -> .)
    PROCEDURE       reduce using rule 6 (DeclSection -> .)
    FUNCTION        reduce using rule 6 (DeclSection -> .)
    CONSTRUCTOR     reduce using rule 6 (DeclSection -> .)

  ! BEGIN           [ reduce using rule 6 (DeclSection -> .) ]

    DeclSection                    shift and go to state 6
    CompoundStmt                   shift and go to state 8
    Block                          shift and go to state 119

state 57

    (82) ColonTypeDecl -> ColonTypeDecl TypeDecl . SEMICOLON

    SEMICOLON       shift and go to state 120


state 58

    (84) TypeDecl -> ID . EQUALS Type
    (85) TypeDecl -> ID . EQUALS RestrictedType
    (86) TypeDecl -> ID . EQUALS TYPE Type
    (87) TypeDecl -> ID . EQUALS TYPE RestrictedType

    EQUALS          shift and go to state 121


state 59

    (153) ProcedureHeading -> PROCEDURE Designator . FormalParams
    (150) FormalParams -> . IdentList
    (151) FormalParams -> .
    (131) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (132) IdentList -> . ID CommaIDTypeArgs

    SEMICOLON       reduce using rule 151 (FormalParams -> .)
    ID              shift and go to state 63

    IdentList                      shift and go to state 116
    FormalParams                   shift and go to state 122

state 60

    (148) FuncHeading -> FUNCTION ID . LPAREN FormalParams RPAREN

    LPAREN          shift and go to state 123


state 61

    (116) ConstSection -> CONSTANT ColonConstDecl .
    (118) ColonConstDecl -> ColonConstDecl . ConstDecl SEMICOLON
    (120) ConstDecl -> . ID EQUALS ConstExpr
    (121) ConstDecl -> . ID COLON TypeID EQUALS TypedConst

  ! shift/reduce conflict for ID resolved as shift
    BEGIN           reduce using rule 116 (ConstSection -> CONSTANT ColonConstDecl .)
    CONSTANT        reduce using rule 116 (ConstSection -> CONSTANT ColonConstDecl .)
    TYPE            reduce using rule 116 (ConstSection -> CONSTANT ColonConstDecl .)
    VAR             reduce using rule 116 (ConstSection -> CONSTANT ColonConstDecl .)
    PROCEDURE       reduce using rule 116 (ConstSection -> CONSTANT ColonConstDecl .)
    FUNCTION        reduce using rule 116 (ConstSection -> CONSTANT ColonConstDecl .)
    CONSTRUCTOR     reduce using rule 116 (ConstSection -> CONSTANT ColonConstDecl .)
    END             reduce using rule 116 (ConstSection -> CONSTANT ColonConstDecl .)
    PUBLIC          reduce using rule 116 (ConstSection -> CONSTANT ColonConstDecl .)
    ID              shift and go to state 125

  ! ID              [ reduce using rule 116 (ConstSection -> CONSTANT ColonConstDecl .) ]

    ConstDecl                      shift and go to state 124

state 62

    (136) VarSection -> VAR ColonVarDecl .

    PROCEDURE       reduce using rule 136 (VarSection -> VAR ColonVarDecl .)
    FUNCTION        reduce using rule 136 (VarSection -> VAR ColonVarDecl .)
    END             reduce using rule 136 (VarSection -> VAR ColonVarDecl .)
    PUBLIC          reduce using rule 136 (VarSection -> VAR ColonVarDecl .)
    TYPE            reduce using rule 136 (VarSection -> VAR ColonVarDecl .)
    CONSTANT        reduce using rule 136 (VarSection -> VAR ColonVarDecl .)
    VAR             reduce using rule 136 (VarSection -> VAR ColonVarDecl .)
    ID              reduce using rule 136 (VarSection -> VAR ColonVarDecl .)
    BEGIN           reduce using rule 136 (VarSection -> VAR ColonVarDecl .)
    CONSTRUCTOR     reduce using rule 136 (VarSection -> VAR ColonVarDecl .)


state 63

    (131) IdentList -> ID . TypeArgs CommaIDTypeArgs
    (132) IdentList -> ID . CommaIDTypeArgs
    (73) TypeArgs -> . LANGLE TypeID RANGLE
    (74) TypeArgs -> . LANGLE STRING RANGLE
    (133) CommaIDTypeArgs -> . CommaIDTypeArgs COMMA ID TypeArgs
    (134) CommaIDTypeArgs -> . CommaIDTypeArgs COMMA ID
    (135) CommaIDTypeArgs -> .

    LANGLE          shift and go to state 65
    COMMA           reduce using rule 135 (CommaIDTypeArgs -> .)
    COLON           reduce using rule 135 (CommaIDTypeArgs -> .)
    SEMICOLON       reduce using rule 135 (CommaIDTypeArgs -> .)
    RPAREN          reduce using rule 135 (CommaIDTypeArgs -> .)

    CommaIDTypeArgs                shift and go to state 64
    TypeArgs                       shift and go to state 66

state 64

    (132) IdentList -> ID CommaIDTypeArgs .
    (133) CommaIDTypeArgs -> CommaIDTypeArgs . COMMA ID TypeArgs
    (134) CommaIDTypeArgs -> CommaIDTypeArgs . COMMA ID

    COLON           reduce using rule 132 (IdentList -> ID CommaIDTypeArgs .)
    SEMICOLON       reduce using rule 132 (IdentList -> ID CommaIDTypeArgs .)
    RPAREN          reduce using rule 132 (IdentList -> ID CommaIDTypeArgs .)
    COMMA           shift and go to state 126


state 65

    (73) TypeArgs -> LANGLE . TypeID RANGLE
    (74) TypeArgs -> LANGLE . STRING RANGLE
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    STRING          shift and go to state 128
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 127

state 66

    (131) IdentList -> ID TypeArgs . CommaIDTypeArgs
    (133) CommaIDTypeArgs -> . CommaIDTypeArgs COMMA ID TypeArgs
    (134) CommaIDTypeArgs -> . CommaIDTypeArgs COMMA ID
    (135) CommaIDTypeArgs -> .

    COMMA           reduce using rule 135 (CommaIDTypeArgs -> .)
    COLON           reduce using rule 135 (CommaIDTypeArgs -> .)
    SEMICOLON       reduce using rule 135 (CommaIDTypeArgs -> .)
    RPAREN          reduce using rule 135 (CommaIDTypeArgs -> .)

    CommaIDTypeArgs                shift and go to state 129

state 67

    (155) LambFuncDecl -> ID COLON . SimpleExpression
    (42) SimpleExpression -> . PLUS Term AddTermStar
    (43) SimpleExpression -> . MINUS Term AddTermStar
    (44) SimpleExpression -> . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 83
    MINUS           shift and go to state 81
    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 86
    Designator                     shift and go to state 82
    Factor                         shift and go to state 80
    SimpleExpression               shift and go to state 130

state 68

    (138) ColonVarDecl -> VarDecl SEMICOLON . ColonVarDecl
    (138) ColonVarDecl -> . VarDecl SEMICOLON ColonVarDecl
    (139) ColonVarDecl -> .
    (140) VarDecl -> . IdentList COLON Type
    (131) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (132) IdentList -> . ID CommaIDTypeArgs

  ! shift/reduce conflict for ID resolved as shift
    BEGIN           reduce using rule 139 (ColonVarDecl -> .)
    CONSTANT        reduce using rule 139 (ColonVarDecl -> .)
    TYPE            reduce using rule 139 (ColonVarDecl -> .)
    VAR             reduce using rule 139 (ColonVarDecl -> .)
    PROCEDURE       reduce using rule 139 (ColonVarDecl -> .)
    FUNCTION        reduce using rule 139 (ColonVarDecl -> .)
    CONSTRUCTOR     reduce using rule 139 (ColonVarDecl -> .)
    END             reduce using rule 139 (ColonVarDecl -> .)
    PUBLIC          reduce using rule 139 (ColonVarDecl -> .)
    ID              shift and go to state 63

  ! ID              [ reduce using rule 139 (ColonVarDecl -> .) ]

    ColonVarDecl                   shift and go to state 131
    IdentList                      shift and go to state 10
    VarDecl                        shift and go to state 30

state 69

    (145) ConstrucDecl -> ConstrucHeading SEMICOLON . Block
    (3) Block -> . CompoundStmt
    (4) Block -> . DeclSection CompoundStmt
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (5) DeclSection -> . DeclSection WhichSection
    (6) DeclSection -> .

  ! shift/reduce conflict for BEGIN resolved as shift
    BEGIN           shift and go to state 7
    CONSTANT        reduce using rule 6 (DeclSection -> .)
    TYPE            reduce using rule 6 (DeclSection -> .)
    VAR             reduce using rule 6 (DeclSection -> .)
    ID              reduce using rule 6 (DeclSection -> .)
    PROCEDURE       reduce using rule 6 (DeclSection -> .)
    FUNCTION        reduce using rule 6 (DeclSection -> .)
    CONSTRUCTOR     reduce using rule 6 (DeclSection -> .)

  ! BEGIN           [ reduce using rule 6 (DeclSection -> .) ]

    DeclSection                    shift and go to state 6
    CompoundStmt                   shift and go to state 8
    Block                          shift and go to state 132

state 70

    (80) TypeSection -> TYPE ColonTypeDecl .
    (82) ColonTypeDecl -> ColonTypeDecl . TypeDecl SEMICOLON
    (84) TypeDecl -> . ID EQUALS Type
    (85) TypeDecl -> . ID EQUALS RestrictedType
    (86) TypeDecl -> . ID EQUALS TYPE Type
    (87) TypeDecl -> . ID EQUALS TYPE RestrictedType

  ! shift/reduce conflict for ID resolved as shift
    CONSTANT        reduce using rule 80 (TypeSection -> TYPE ColonTypeDecl .)
    VAR             reduce using rule 80 (TypeSection -> TYPE ColonTypeDecl .)
    PROCEDURE       reduce using rule 80 (TypeSection -> TYPE ColonTypeDecl .)
    FUNCTION        reduce using rule 80 (TypeSection -> TYPE ColonTypeDecl .)
    END             reduce using rule 80 (TypeSection -> TYPE ColonTypeDecl .)
    PUBLIC          reduce using rule 80 (TypeSection -> TYPE ColonTypeDecl .)
    TYPE            reduce using rule 80 (TypeSection -> TYPE ColonTypeDecl .)
    BEGIN           reduce using rule 80 (TypeSection -> TYPE ColonTypeDecl .)
    CONSTRUCTOR     reduce using rule 80 (TypeSection -> TYPE ColonTypeDecl .)
    ID              shift and go to state 58

  ! ID              [ reduce using rule 80 (TypeSection -> TYPE ColonTypeDecl .) ]

    TypeDecl                       shift and go to state 57

state 71

    (13) StmtList -> Statement SEMICOLON .

    END             reduce using rule 13 (StmtList -> Statement SEMICOLON .)
    INHERITED       reduce using rule 13 (StmtList -> Statement SEMICOLON .)
    LPAREN          reduce using rule 13 (StmtList -> Statement SEMICOLON .)
    ID              reduce using rule 13 (StmtList -> Statement SEMICOLON .)
    BEGIN           reduce using rule 13 (StmtList -> Statement SEMICOLON .)
    IF              reduce using rule 13 (StmtList -> Statement SEMICOLON .)
    CASE            reduce using rule 13 (StmtList -> Statement SEMICOLON .)
    REPEAT          reduce using rule 13 (StmtList -> Statement SEMICOLON .)
    WHILE           reduce using rule 13 (StmtList -> Statement SEMICOLON .)
    SEMICOLON       reduce using rule 13 (StmtList -> Statement SEMICOLON .)


state 72

    (12) StmtList -> StmtList Statement . SEMICOLON

    SEMICOLON       shift and go to state 133


state 73

    (11) CompoundStmt -> BEGIN StmtList END . SEMICOLON

    SEMICOLON       shift and go to state 134


state 74

    (25) ConditionalStmt -> IfStmt SEMICOLON .

    END             reduce using rule 25 (ConditionalStmt -> IfStmt SEMICOLON .)
    ELSE            reduce using rule 25 (ConditionalStmt -> IfStmt SEMICOLON .)
    SEMICOLON       reduce using rule 25 (ConditionalStmt -> IfStmt SEMICOLON .)
    UNTIL           reduce using rule 25 (ConditionalStmt -> IfStmt SEMICOLON .)


state 75

    (76) TypeID -> REAL .

    LPAREN          reduce using rule 76 (TypeID -> REAL .)
    SEMICOLON       reduce using rule 76 (TypeID -> REAL .)
    EQUALS          reduce using rule 76 (TypeID -> REAL .)
    RANGLE          reduce using rule 76 (TypeID -> REAL .)


state 76

    (58) Factor -> TypeID . LPAREN Expression RPAREN

    LPAREN          shift and go to state 135


state 77

    (54) Factor -> LPAREN . Expression RPAREN
    (59) Factor -> LPAREN . LambFunc RPAREN
    (39) Expression -> . SimpleExpression RelSimpleStar
    (156) LambFunc -> . ID LPAREN ConstExpr RPAREN
    (42) SimpleExpression -> . PLUS Term AddTermStar
    (43) SimpleExpression -> . MINUS Term AddTermStar
    (44) SimpleExpression -> . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    ID              shift and go to state 137
    PLUS            shift and go to state 83
    MINUS           shift and go to state 81
    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 86
    LambFunc                       shift and go to state 136
    Designator                     shift and go to state 82
    Factor                         shift and go to state 80
    SimpleExpression               shift and go to state 87
    Expression                     shift and go to state 138

state 78

    (53) Factor -> NUMBER .

    MULTIPLY        reduce using rule 53 (Factor -> NUMBER .)
    DIVIDE          reduce using rule 53 (Factor -> NUMBER .)
    DIV             reduce using rule 53 (Factor -> NUMBER .)
    MOD             reduce using rule 53 (Factor -> NUMBER .)
    AND             reduce using rule 53 (Factor -> NUMBER .)
    SHL             reduce using rule 53 (Factor -> NUMBER .)
    SHR             reduce using rule 53 (Factor -> NUMBER .)
    PLUS            reduce using rule 53 (Factor -> NUMBER .)
    MINUS           reduce using rule 53 (Factor -> NUMBER .)
    OR              reduce using rule 53 (Factor -> NUMBER .)
    XOR             reduce using rule 53 (Factor -> NUMBER .)
    LANGLE          reduce using rule 53 (Factor -> NUMBER .)
    RANGLE          reduce using rule 53 (Factor -> NUMBER .)
    GEQ             reduce using rule 53 (Factor -> NUMBER .)
    LEQ             reduce using rule 53 (Factor -> NUMBER .)
    NOTEQUALS       reduce using rule 53 (Factor -> NUMBER .)
    EQUALS          reduce using rule 53 (Factor -> NUMBER .)
    RPAREN          reduce using rule 53 (Factor -> NUMBER .)
    SEMICOLON       reduce using rule 53 (Factor -> NUMBER .)
    UNTIL           reduce using rule 53 (Factor -> NUMBER .)
    ELSE            reduce using rule 53 (Factor -> NUMBER .)
    END             reduce using rule 53 (Factor -> NUMBER .)
    OF              reduce using rule 53 (Factor -> NUMBER .)
    THEN            reduce using rule 53 (Factor -> NUMBER .)
    DO              reduce using rule 53 (Factor -> NUMBER .)
    BEGIN           reduce using rule 53 (Factor -> NUMBER .)
    CONSTANT        reduce using rule 53 (Factor -> NUMBER .)
    TYPE            reduce using rule 53 (Factor -> NUMBER .)
    VAR             reduce using rule 53 (Factor -> NUMBER .)
    ID              reduce using rule 53 (Factor -> NUMBER .)
    PROCEDURE       reduce using rule 53 (Factor -> NUMBER .)
    FUNCTION        reduce using rule 53 (Factor -> NUMBER .)
    CONSTRUCTOR     reduce using rule 53 (Factor -> NUMBER .)
    COMMA           reduce using rule 53 (Factor -> NUMBER .)
    RSQUARE         reduce using rule 53 (Factor -> NUMBER .)


state 79

    (77) TypeID -> CHAR .

    LPAREN          reduce using rule 77 (TypeID -> CHAR .)
    SEMICOLON       reduce using rule 77 (TypeID -> CHAR .)
    EQUALS          reduce using rule 77 (TypeID -> CHAR .)
    RANGLE          reduce using rule 77 (TypeID -> CHAR .)


state 80

    (47) Term -> Factor . MulFacStar
    (48) MulFacStar -> . MulOp Factor MulFacStar
    (49) MulFacStar -> .
    (100) MulOp -> . MULTIPLY
    (101) MulOp -> . DIVIDE
    (102) MulOp -> . DIV
    (103) MulOp -> . MOD
    (104) MulOp -> . AND
    (105) MulOp -> . SHL
    (106) MulOp -> . SHR

    PLUS            reduce using rule 49 (MulFacStar -> .)
    MINUS           reduce using rule 49 (MulFacStar -> .)
    OR              reduce using rule 49 (MulFacStar -> .)
    XOR             reduce using rule 49 (MulFacStar -> .)
    LANGLE          reduce using rule 49 (MulFacStar -> .)
    RANGLE          reduce using rule 49 (MulFacStar -> .)
    GEQ             reduce using rule 49 (MulFacStar -> .)
    LEQ             reduce using rule 49 (MulFacStar -> .)
    NOTEQUALS       reduce using rule 49 (MulFacStar -> .)
    EQUALS          reduce using rule 49 (MulFacStar -> .)
    OF              reduce using rule 49 (MulFacStar -> .)
    RPAREN          reduce using rule 49 (MulFacStar -> .)
    THEN            reduce using rule 49 (MulFacStar -> .)
    DO              reduce using rule 49 (MulFacStar -> .)
    BEGIN           reduce using rule 49 (MulFacStar -> .)
    CONSTANT        reduce using rule 49 (MulFacStar -> .)
    TYPE            reduce using rule 49 (MulFacStar -> .)
    VAR             reduce using rule 49 (MulFacStar -> .)
    ID              reduce using rule 49 (MulFacStar -> .)
    PROCEDURE       reduce using rule 49 (MulFacStar -> .)
    FUNCTION        reduce using rule 49 (MulFacStar -> .)
    CONSTRUCTOR     reduce using rule 49 (MulFacStar -> .)
    SEMICOLON       reduce using rule 49 (MulFacStar -> .)
    UNTIL           reduce using rule 49 (MulFacStar -> .)
    ELSE            reduce using rule 49 (MulFacStar -> .)
    END             reduce using rule 49 (MulFacStar -> .)
    COMMA           reduce using rule 49 (MulFacStar -> .)
    RSQUARE         reduce using rule 49 (MulFacStar -> .)
    MULTIPLY        shift and go to state 144
    DIVIDE          shift and go to state 141
    DIV             shift and go to state 145
    MOD             shift and go to state 147
    AND             shift and go to state 139
    SHL             shift and go to state 146
    SHR             shift and go to state 142

    MulFacStar                     shift and go to state 140
    MulOp                          shift and go to state 143

state 81

    (43) SimpleExpression -> MINUS . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 148
    Designator                     shift and go to state 82
    Factor                         shift and go to state 80

state 82

    (50) Factor -> Designator .
    (51) Factor -> Designator . LPAREN ExprList RPAREN

    MULTIPLY        reduce using rule 50 (Factor -> Designator .)
    DIVIDE          reduce using rule 50 (Factor -> Designator .)
    DIV             reduce using rule 50 (Factor -> Designator .)
    MOD             reduce using rule 50 (Factor -> Designator .)
    AND             reduce using rule 50 (Factor -> Designator .)
    SHL             reduce using rule 50 (Factor -> Designator .)
    SHR             reduce using rule 50 (Factor -> Designator .)
    PLUS            reduce using rule 50 (Factor -> Designator .)
    MINUS           reduce using rule 50 (Factor -> Designator .)
    OR              reduce using rule 50 (Factor -> Designator .)
    XOR             reduce using rule 50 (Factor -> Designator .)
    LANGLE          reduce using rule 50 (Factor -> Designator .)
    RANGLE          reduce using rule 50 (Factor -> Designator .)
    GEQ             reduce using rule 50 (Factor -> Designator .)
    LEQ             reduce using rule 50 (Factor -> Designator .)
    NOTEQUALS       reduce using rule 50 (Factor -> Designator .)
    EQUALS          reduce using rule 50 (Factor -> Designator .)
    RPAREN          reduce using rule 50 (Factor -> Designator .)
    SEMICOLON       reduce using rule 50 (Factor -> Designator .)
    UNTIL           reduce using rule 50 (Factor -> Designator .)
    ELSE            reduce using rule 50 (Factor -> Designator .)
    END             reduce using rule 50 (Factor -> Designator .)
    OF              reduce using rule 50 (Factor -> Designator .)
    THEN            reduce using rule 50 (Factor -> Designator .)
    DO              reduce using rule 50 (Factor -> Designator .)
    BEGIN           reduce using rule 50 (Factor -> Designator .)
    CONSTANT        reduce using rule 50 (Factor -> Designator .)
    TYPE            reduce using rule 50 (Factor -> Designator .)
    VAR             reduce using rule 50 (Factor -> Designator .)
    ID              reduce using rule 50 (Factor -> Designator .)
    PROCEDURE       reduce using rule 50 (Factor -> Designator .)
    FUNCTION        reduce using rule 50 (Factor -> Designator .)
    CONSTRUCTOR     reduce using rule 50 (Factor -> Designator .)
    COMMA           reduce using rule 50 (Factor -> Designator .)
    RSQUARE         reduce using rule 50 (Factor -> Designator .)
    LPAREN          shift and go to state 149


state 83

    (42) SimpleExpression -> PLUS . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 150
    Designator                     shift and go to state 82
    Factor                         shift and go to state 80

state 84

    (52) Factor -> USERSTRING .

    MULTIPLY        reduce using rule 52 (Factor -> USERSTRING .)
    DIVIDE          reduce using rule 52 (Factor -> USERSTRING .)
    DIV             reduce using rule 52 (Factor -> USERSTRING .)
    MOD             reduce using rule 52 (Factor -> USERSTRING .)
    AND             reduce using rule 52 (Factor -> USERSTRING .)
    SHL             reduce using rule 52 (Factor -> USERSTRING .)
    SHR             reduce using rule 52 (Factor -> USERSTRING .)
    PLUS            reduce using rule 52 (Factor -> USERSTRING .)
    MINUS           reduce using rule 52 (Factor -> USERSTRING .)
    OR              reduce using rule 52 (Factor -> USERSTRING .)
    XOR             reduce using rule 52 (Factor -> USERSTRING .)
    LANGLE          reduce using rule 52 (Factor -> USERSTRING .)
    RANGLE          reduce using rule 52 (Factor -> USERSTRING .)
    GEQ             reduce using rule 52 (Factor -> USERSTRING .)
    LEQ             reduce using rule 52 (Factor -> USERSTRING .)
    NOTEQUALS       reduce using rule 52 (Factor -> USERSTRING .)
    EQUALS          reduce using rule 52 (Factor -> USERSTRING .)
    RPAREN          reduce using rule 52 (Factor -> USERSTRING .)
    SEMICOLON       reduce using rule 52 (Factor -> USERSTRING .)
    UNTIL           reduce using rule 52 (Factor -> USERSTRING .)
    ELSE            reduce using rule 52 (Factor -> USERSTRING .)
    END             reduce using rule 52 (Factor -> USERSTRING .)
    OF              reduce using rule 52 (Factor -> USERSTRING .)
    THEN            reduce using rule 52 (Factor -> USERSTRING .)
    DO              reduce using rule 52 (Factor -> USERSTRING .)
    BEGIN           reduce using rule 52 (Factor -> USERSTRING .)
    CONSTANT        reduce using rule 52 (Factor -> USERSTRING .)
    TYPE            reduce using rule 52 (Factor -> USERSTRING .)
    VAR             reduce using rule 52 (Factor -> USERSTRING .)
    ID              reduce using rule 52 (Factor -> USERSTRING .)
    PROCEDURE       reduce using rule 52 (Factor -> USERSTRING .)
    FUNCTION        reduce using rule 52 (Factor -> USERSTRING .)
    CONSTRUCTOR     reduce using rule 52 (Factor -> USERSTRING .)
    COMMA           reduce using rule 52 (Factor -> USERSTRING .)
    RSQUARE         reduce using rule 52 (Factor -> USERSTRING .)


state 85

    (75) TypeID -> INTEGER .

    LPAREN          reduce using rule 75 (TypeID -> INTEGER .)
    SEMICOLON       reduce using rule 75 (TypeID -> INTEGER .)
    EQUALS          reduce using rule 75 (TypeID -> INTEGER .)
    RANGLE          reduce using rule 75 (TypeID -> INTEGER .)


state 86

    (44) SimpleExpression -> Term . AddTermStar
    (45) AddTermStar -> . AddOp Term AddTermStar
    (46) AddTermStar -> .
    (96) AddOp -> . PLUS
    (97) AddOp -> . MINUS
    (98) AddOp -> . OR
    (99) AddOp -> . XOR

    LANGLE          reduce using rule 46 (AddTermStar -> .)
    RANGLE          reduce using rule 46 (AddTermStar -> .)
    GEQ             reduce using rule 46 (AddTermStar -> .)
    LEQ             reduce using rule 46 (AddTermStar -> .)
    NOTEQUALS       reduce using rule 46 (AddTermStar -> .)
    EQUALS          reduce using rule 46 (AddTermStar -> .)
    OF              reduce using rule 46 (AddTermStar -> .)
    RPAREN          reduce using rule 46 (AddTermStar -> .)
    THEN            reduce using rule 46 (AddTermStar -> .)
    DO              reduce using rule 46 (AddTermStar -> .)
    BEGIN           reduce using rule 46 (AddTermStar -> .)
    CONSTANT        reduce using rule 46 (AddTermStar -> .)
    TYPE            reduce using rule 46 (AddTermStar -> .)
    VAR             reduce using rule 46 (AddTermStar -> .)
    ID              reduce using rule 46 (AddTermStar -> .)
    PROCEDURE       reduce using rule 46 (AddTermStar -> .)
    FUNCTION        reduce using rule 46 (AddTermStar -> .)
    CONSTRUCTOR     reduce using rule 46 (AddTermStar -> .)
    SEMICOLON       reduce using rule 46 (AddTermStar -> .)
    UNTIL           reduce using rule 46 (AddTermStar -> .)
    ELSE            reduce using rule 46 (AddTermStar -> .)
    END             reduce using rule 46 (AddTermStar -> .)
    COMMA           reduce using rule 46 (AddTermStar -> .)
    RSQUARE         reduce using rule 46 (AddTermStar -> .)
    PLUS            shift and go to state 155
    MINUS           shift and go to state 156
    OR              shift and go to state 154
    XOR             shift and go to state 152

    AddOp                          shift and go to state 151
    AddTermStar                    shift and go to state 153

state 87

    (39) Expression -> SimpleExpression . RelSimpleStar
    (40) RelSimpleStar -> . RelOp SimpleExpression RelSimpleStar
    (41) RelSimpleStar -> .
    (90) RelOp -> . LANGLE
    (91) RelOp -> . RANGLE
    (92) RelOp -> . GEQ
    (93) RelOp -> . LEQ
    (94) RelOp -> . NOTEQUALS
    (95) RelOp -> . EQUALS

    OF              reduce using rule 41 (RelSimpleStar -> .)
    RPAREN          reduce using rule 41 (RelSimpleStar -> .)
    THEN            reduce using rule 41 (RelSimpleStar -> .)
    DO              reduce using rule 41 (RelSimpleStar -> .)
    SEMICOLON       reduce using rule 41 (RelSimpleStar -> .)
    UNTIL           reduce using rule 41 (RelSimpleStar -> .)
    ELSE            reduce using rule 41 (RelSimpleStar -> .)
    END             reduce using rule 41 (RelSimpleStar -> .)
    COMMA           reduce using rule 41 (RelSimpleStar -> .)
    RSQUARE         reduce using rule 41 (RelSimpleStar -> .)
    LANGLE          shift and go to state 159
    RANGLE          shift and go to state 164
    GEQ             shift and go to state 158
    LEQ             shift and go to state 162
    NOTEQUALS       shift and go to state 157
    EQUALS          shift and go to state 161

    RelOp                          shift and go to state 160
    RelSimpleStar                  shift and go to state 163

state 88

    (56) Factor -> INHERITED . Designator
    (57) Factor -> INHERITED .
    (110) Designator -> . ID DesSubEleStar

  ! shift/reduce conflict for ID resolved as shift
    MULTIPLY        reduce using rule 57 (Factor -> INHERITED .)
    DIVIDE          reduce using rule 57 (Factor -> INHERITED .)
    DIV             reduce using rule 57 (Factor -> INHERITED .)
    MOD             reduce using rule 57 (Factor -> INHERITED .)
    AND             reduce using rule 57 (Factor -> INHERITED .)
    SHL             reduce using rule 57 (Factor -> INHERITED .)
    SHR             reduce using rule 57 (Factor -> INHERITED .)
    PLUS            reduce using rule 57 (Factor -> INHERITED .)
    MINUS           reduce using rule 57 (Factor -> INHERITED .)
    OR              reduce using rule 57 (Factor -> INHERITED .)
    XOR             reduce using rule 57 (Factor -> INHERITED .)
    LANGLE          reduce using rule 57 (Factor -> INHERITED .)
    RANGLE          reduce using rule 57 (Factor -> INHERITED .)
    GEQ             reduce using rule 57 (Factor -> INHERITED .)
    LEQ             reduce using rule 57 (Factor -> INHERITED .)
    NOTEQUALS       reduce using rule 57 (Factor -> INHERITED .)
    EQUALS          reduce using rule 57 (Factor -> INHERITED .)
    RPAREN          reduce using rule 57 (Factor -> INHERITED .)
    SEMICOLON       reduce using rule 57 (Factor -> INHERITED .)
    UNTIL           reduce using rule 57 (Factor -> INHERITED .)
    ELSE            reduce using rule 57 (Factor -> INHERITED .)
    END             reduce using rule 57 (Factor -> INHERITED .)
    OF              reduce using rule 57 (Factor -> INHERITED .)
    THEN            reduce using rule 57 (Factor -> INHERITED .)
    DO              reduce using rule 57 (Factor -> INHERITED .)
    BEGIN           reduce using rule 57 (Factor -> INHERITED .)
    CONSTANT        reduce using rule 57 (Factor -> INHERITED .)
    TYPE            reduce using rule 57 (Factor -> INHERITED .)
    VAR             reduce using rule 57 (Factor -> INHERITED .)
    PROCEDURE       reduce using rule 57 (Factor -> INHERITED .)
    FUNCTION        reduce using rule 57 (Factor -> INHERITED .)
    CONSTRUCTOR     reduce using rule 57 (Factor -> INHERITED .)
    COMMA           reduce using rule 57 (Factor -> INHERITED .)
    RSQUARE         reduce using rule 57 (Factor -> INHERITED .)
    ID              shift and go to state 46

  ! ID              [ reduce using rule 57 (Factor -> INHERITED .) ]

    Designator                     shift and go to state 165

state 89

    (29) CaseStmt -> CASE Expression . OF CaseSelector ColonCaseSelector END
    (30) CaseStmt -> CASE Expression . OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END

    OF              shift and go to state 166


state 90

    (55) Factor -> NOT . Factor
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Designator                     shift and go to state 82
    Factor                         shift and go to state 167

state 91

    (19) SimpleStatement -> Designator ASSIGNTO . Expression
    (39) Expression -> . SimpleExpression RelSimpleStar
    (42) SimpleExpression -> . PLUS Term AddTermStar
    (43) SimpleExpression -> . MINUS Term AddTermStar
    (44) SimpleExpression -> . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 83
    MINUS           shift and go to state 81
    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 86
    Designator                     shift and go to state 82
    Factor                         shift and go to state 80
    SimpleExpression               shift and go to state 87
    Expression                     shift and go to state 168

state 92

    (18) SimpleStatement -> Designator LPAREN . ExprList RPAREN
    (109) ExprList -> . Expression CommaExpression
    (39) Expression -> . SimpleExpression RelSimpleStar
    (42) SimpleExpression -> . PLUS Term AddTermStar
    (43) SimpleExpression -> . MINUS Term AddTermStar
    (44) SimpleExpression -> . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 83
    MINUS           shift and go to state 81
    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 86
    Designator                     shift and go to state 82
    SimpleExpression               shift and go to state 87
    Factor                         shift and go to state 80
    Expression                     shift and go to state 170
    ExprList                       shift and go to state 169

state 93

    (26) ConditionalStmt -> CaseStmt SEMICOLON .

    END             reduce using rule 26 (ConditionalStmt -> CaseStmt SEMICOLON .)
    ELSE            reduce using rule 26 (ConditionalStmt -> CaseStmt SEMICOLON .)
    SEMICOLON       reduce using rule 26 (ConditionalStmt -> CaseStmt SEMICOLON .)
    UNTIL           reduce using rule 26 (ConditionalStmt -> CaseStmt SEMICOLON .)


state 94

    (21) SimpleStatement -> LPAREN Expression . RPAREN

    RPAREN          shift and go to state 171


state 95

    (110) Designator -> ID DesSubEleStar .
    (111) DesSubEleStar -> DesSubEleStar . DesignatorSubElem
    (113) DesignatorSubElem -> . DOT ID
    (114) DesignatorSubElem -> . LSQUARE ExprList RSQUARE
    (115) DesignatorSubElem -> . POWER SEMICOLON

    LPAREN          reduce using rule 110 (Designator -> ID DesSubEleStar .)
    ASSIGNTO        reduce using rule 110 (Designator -> ID DesSubEleStar .)
    ELSE            reduce using rule 110 (Designator -> ID DesSubEleStar .)
    SEMICOLON       reduce using rule 110 (Designator -> ID DesSubEleStar .)
    MULTIPLY        reduce using rule 110 (Designator -> ID DesSubEleStar .)
    DIVIDE          reduce using rule 110 (Designator -> ID DesSubEleStar .)
    DIV             reduce using rule 110 (Designator -> ID DesSubEleStar .)
    MOD             reduce using rule 110 (Designator -> ID DesSubEleStar .)
    AND             reduce using rule 110 (Designator -> ID DesSubEleStar .)
    SHL             reduce using rule 110 (Designator -> ID DesSubEleStar .)
    SHR             reduce using rule 110 (Designator -> ID DesSubEleStar .)
    PLUS            reduce using rule 110 (Designator -> ID DesSubEleStar .)
    MINUS           reduce using rule 110 (Designator -> ID DesSubEleStar .)
    OR              reduce using rule 110 (Designator -> ID DesSubEleStar .)
    XOR             reduce using rule 110 (Designator -> ID DesSubEleStar .)
    LANGLE          reduce using rule 110 (Designator -> ID DesSubEleStar .)
    RANGLE          reduce using rule 110 (Designator -> ID DesSubEleStar .)
    GEQ             reduce using rule 110 (Designator -> ID DesSubEleStar .)
    LEQ             reduce using rule 110 (Designator -> ID DesSubEleStar .)
    NOTEQUALS       reduce using rule 110 (Designator -> ID DesSubEleStar .)
    EQUALS          reduce using rule 110 (Designator -> ID DesSubEleStar .)
    COMMA           reduce using rule 110 (Designator -> ID DesSubEleStar .)
    RSQUARE         reduce using rule 110 (Designator -> ID DesSubEleStar .)
    OF              reduce using rule 110 (Designator -> ID DesSubEleStar .)
    DO              reduce using rule 110 (Designator -> ID DesSubEleStar .)
    ID              reduce using rule 110 (Designator -> ID DesSubEleStar .)
    RPAREN          reduce using rule 110 (Designator -> ID DesSubEleStar .)
    THEN            reduce using rule 110 (Designator -> ID DesSubEleStar .)
    BEGIN           reduce using rule 110 (Designator -> ID DesSubEleStar .)
    CONSTANT        reduce using rule 110 (Designator -> ID DesSubEleStar .)
    TYPE            reduce using rule 110 (Designator -> ID DesSubEleStar .)
    VAR             reduce using rule 110 (Designator -> ID DesSubEleStar .)
    PROCEDURE       reduce using rule 110 (Designator -> ID DesSubEleStar .)
    FUNCTION        reduce using rule 110 (Designator -> ID DesSubEleStar .)
    CONSTRUCTOR     reduce using rule 110 (Designator -> ID DesSubEleStar .)
    UNTIL           reduce using rule 110 (Designator -> ID DesSubEleStar .)
    END             reduce using rule 110 (Designator -> ID DesSubEleStar .)
    DOT             shift and go to state 175
    LSQUARE         shift and go to state 173
    POWER           shift and go to state 172

    DesignatorSubElem              shift and go to state 174

state 96

    (27) IfStmt -> IF Expression . THEN Statement
    (28) IfStmt -> IF Expression . THEN Statement ELSE Statement

    THEN            shift and go to state 176


state 97

    (38) WhileStmt -> WHILE Expression . DO Statement SEMICOLON

    DO              shift and go to state 177


state 98

    (37) RepeatStmt -> REPEAT Statement . UNTIL Expression SEMICOLON

    UNTIL           shift and go to state 178


state 99

    (60) Type -> TypeID .

    SEMICOLON       reduce using rule 60 (Type -> TypeID .)


state 100

    (71) ProcedureType -> ProcedureHeading .

    SEMICOLON       reduce using rule 71 (ProcedureType -> ProcedureHeading .)


state 101

    (140) VarDecl -> IdentList COLON Type .

    SEMICOLON       reduce using rule 140 (VarDecl -> IdentList COLON Type .)


state 102

    (63) Type -> StringType .

    SEMICOLON       reduce using rule 63 (Type -> StringType .)


state 103

    (64) Type -> ProcedureType .

    SEMICOLON       reduce using rule 64 (Type -> ProcedureType .)


state 104

    (72) ProcedureType -> FuncHeading .

    SEMICOLON       reduce using rule 72 (ProcedureType -> FuncHeading .)


state 105

    (61) Type -> SimpleType .

    SEMICOLON       reduce using rule 61 (Type -> SimpleType .)


state 106

    (69) PointerType -> POWER . ID

    ID              shift and go to state 179


state 107

    (75) TypeID -> INTEGER .
    (78) OrdinalType -> INTEGER .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 75 (TypeID -> INTEGER .)
    SEMICOLON       reduce using rule 75 (TypeID -> INTEGER .)

  ! SEMICOLON       [ reduce using rule 78 (OrdinalType -> INTEGER .) ]


state 108

    (124) Array -> ARRAY . LSQUARE ONE DOTDOT OrdinalType RSQUARE OF TypeArray

    LSQUARE         shift and go to state 180


state 109

    (70) StringType -> STRING .

    SEMICOLON       reduce using rule 70 (StringType -> STRING .)


state 110

    (67) SimpleType -> OrdinalType .

    SEMICOLON       reduce using rule 67 (SimpleType -> OrdinalType .)


state 111

    (66) Type -> ID .

    SEMICOLON       reduce using rule 66 (Type -> ID .)


state 112

    (68) SimpleType -> RealType .

    SEMICOLON       reduce using rule 68 (SimpleType -> RealType .)


state 113

    (79) RealType -> DOUBLE .

    SEMICOLON       reduce using rule 79 (RealType -> DOUBLE .)


state 114

    (62) Type -> PointerType .

    SEMICOLON       reduce using rule 62 (Type -> PointerType .)


state 115

    (65) Type -> Array .

    SEMICOLON       reduce using rule 65 (Type -> Array .)


state 116

    (150) FormalParams -> IdentList .

    SEMICOLON       reduce using rule 150 (FormalParams -> IdentList .)
    RPAREN          reduce using rule 150 (FormalParams -> IdentList .)


state 117

    (146) ConstrucHeading -> CONSTRUCTOR ID FormalParams .

    SEMICOLON       reduce using rule 146 (ConstrucHeading -> CONSTRUCTOR ID FormalParams .)


state 118

    (152) ProcedureDecl -> ProcedureHeading SEMICOLON Block .

    BEGIN           reduce using rule 152 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)
    CONSTANT        reduce using rule 152 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)
    TYPE            reduce using rule 152 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)
    VAR             reduce using rule 152 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)
    ID              reduce using rule 152 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)
    PROCEDURE       reduce using rule 152 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)
    FUNCTION        reduce using rule 152 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)
    CONSTRUCTOR     reduce using rule 152 (ProcedureDecl -> ProcedureHeading SEMICOLON Block .)


state 119

    (147) FuncDecl -> FuncHeading SEMICOLON Block .

    BEGIN           reduce using rule 147 (FuncDecl -> FuncHeading SEMICOLON Block .)
    CONSTANT        reduce using rule 147 (FuncDecl -> FuncHeading SEMICOLON Block .)
    TYPE            reduce using rule 147 (FuncDecl -> FuncHeading SEMICOLON Block .)
    VAR             reduce using rule 147 (FuncDecl -> FuncHeading SEMICOLON Block .)
    ID              reduce using rule 147 (FuncDecl -> FuncHeading SEMICOLON Block .)
    PROCEDURE       reduce using rule 147 (FuncDecl -> FuncHeading SEMICOLON Block .)
    FUNCTION        reduce using rule 147 (FuncDecl -> FuncHeading SEMICOLON Block .)
    CONSTRUCTOR     reduce using rule 147 (FuncDecl -> FuncHeading SEMICOLON Block .)


state 120

    (82) ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .

    ID              reduce using rule 82 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    CONSTANT        reduce using rule 82 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    VAR             reduce using rule 82 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    PROCEDURE       reduce using rule 82 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    FUNCTION        reduce using rule 82 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    END             reduce using rule 82 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    PUBLIC          reduce using rule 82 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    TYPE            reduce using rule 82 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    BEGIN           reduce using rule 82 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)
    CONSTRUCTOR     reduce using rule 82 (ColonTypeDecl -> ColonTypeDecl TypeDecl SEMICOLON .)


state 121

    (84) TypeDecl -> ID EQUALS . Type
    (85) TypeDecl -> ID EQUALS . RestrictedType
    (86) TypeDecl -> ID EQUALS . TYPE Type
    (87) TypeDecl -> ID EQUALS . TYPE RestrictedType
    (60) Type -> . TypeID
    (61) Type -> . SimpleType
    (62) Type -> . PointerType
    (63) Type -> . StringType
    (64) Type -> . ProcedureType
    (65) Type -> . Array
    (66) Type -> . ID
    (88) RestrictedType -> . ObjectType
    (89) RestrictedType -> . ClassType
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR
    (67) SimpleType -> . OrdinalType
    (68) SimpleType -> . RealType
    (69) PointerType -> . POWER ID
    (70) StringType -> . STRING
    (71) ProcedureType -> . ProcedureHeading
    (72) ProcedureType -> . FuncHeading
    (124) Array -> . ARRAY LSQUARE ONE DOTDOT OrdinalType RSQUARE OF TypeArray
    (157) ObjectType -> . OBJECT ObjectHeritage ObjectBody END
    (174) ClassType -> . CLASS ClassHeritage ClassBody END
    (78) OrdinalType -> . INTEGER
    (79) RealType -> . DOUBLE
    (153) ProcedureHeading -> . PROCEDURE Designator FormalParams
    (148) FuncHeading -> . FUNCTION ID LPAREN FormalParams RPAREN

    TYPE            shift and go to state 187
    ID              shift and go to state 111
    INTEGER         shift and go to state 107
    REAL            shift and go to state 75
    CHAR            shift and go to state 79
    POWER           shift and go to state 106
    STRING          shift and go to state 109
    ARRAY           shift and go to state 108
    OBJECT          shift and go to state 181
    CLASS           shift and go to state 183
    DOUBLE          shift and go to state 113
    PROCEDURE       shift and go to state 20
    FUNCTION        shift and go to state 22

    TypeID                         shift and go to state 99
    ProcedureType                  shift and go to state 103
    FuncHeading                    shift and go to state 104
    SimpleType                     shift and go to state 105
    RestrictedType                 shift and go to state 185
    StringType                     shift and go to state 102
    ClassType                      shift and go to state 186
    OrdinalType                    shift and go to state 110
    ProcedureHeading               shift and go to state 100
    PointerType                    shift and go to state 114
    RealType                       shift and go to state 112
    Array                          shift and go to state 115
    Type                           shift and go to state 182
    ObjectType                     shift and go to state 184

state 122

    (153) ProcedureHeading -> PROCEDURE Designator FormalParams .

    SEMICOLON       reduce using rule 153 (ProcedureHeading -> PROCEDURE Designator FormalParams .)


state 123

    (148) FuncHeading -> FUNCTION ID LPAREN . FormalParams RPAREN
    (150) FormalParams -> . IdentList
    (151) FormalParams -> .
    (131) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (132) IdentList -> . ID CommaIDTypeArgs

    RPAREN          reduce using rule 151 (FormalParams -> .)
    ID              shift and go to state 63

    IdentList                      shift and go to state 116
    FormalParams                   shift and go to state 188

state 124

    (118) ColonConstDecl -> ColonConstDecl ConstDecl . SEMICOLON

    SEMICOLON       shift and go to state 189


state 125

    (120) ConstDecl -> ID . EQUALS ConstExpr
    (121) ConstDecl -> ID . COLON TypeID EQUALS TypedConst

    EQUALS          shift and go to state 190
    COLON           shift and go to state 191


state 126

    (133) CommaIDTypeArgs -> CommaIDTypeArgs COMMA . ID TypeArgs
    (134) CommaIDTypeArgs -> CommaIDTypeArgs COMMA . ID

    ID              shift and go to state 192


state 127

    (73) TypeArgs -> LANGLE TypeID . RANGLE

    RANGLE          shift and go to state 193


state 128

    (74) TypeArgs -> LANGLE STRING . RANGLE

    RANGLE          shift and go to state 194


state 129

    (131) IdentList -> ID TypeArgs CommaIDTypeArgs .
    (133) CommaIDTypeArgs -> CommaIDTypeArgs . COMMA ID TypeArgs
    (134) CommaIDTypeArgs -> CommaIDTypeArgs . COMMA ID

    COLON           reduce using rule 131 (IdentList -> ID TypeArgs CommaIDTypeArgs .)
    SEMICOLON       reduce using rule 131 (IdentList -> ID TypeArgs CommaIDTypeArgs .)
    RPAREN          reduce using rule 131 (IdentList -> ID TypeArgs CommaIDTypeArgs .)
    COMMA           shift and go to state 126


state 130

    (155) LambFuncDecl -> ID COLON SimpleExpression .

    BEGIN           reduce using rule 155 (LambFuncDecl -> ID COLON SimpleExpression .)
    CONSTANT        reduce using rule 155 (LambFuncDecl -> ID COLON SimpleExpression .)
    TYPE            reduce using rule 155 (LambFuncDecl -> ID COLON SimpleExpression .)
    VAR             reduce using rule 155 (LambFuncDecl -> ID COLON SimpleExpression .)
    ID              reduce using rule 155 (LambFuncDecl -> ID COLON SimpleExpression .)
    PROCEDURE       reduce using rule 155 (LambFuncDecl -> ID COLON SimpleExpression .)
    FUNCTION        reduce using rule 155 (LambFuncDecl -> ID COLON SimpleExpression .)
    CONSTRUCTOR     reduce using rule 155 (LambFuncDecl -> ID COLON SimpleExpression .)


state 131

    (138) ColonVarDecl -> VarDecl SEMICOLON ColonVarDecl .

    BEGIN           reduce using rule 138 (ColonVarDecl -> VarDecl SEMICOLON ColonVarDecl .)
    CONSTANT        reduce using rule 138 (ColonVarDecl -> VarDecl SEMICOLON ColonVarDecl .)
    TYPE            reduce using rule 138 (ColonVarDecl -> VarDecl SEMICOLON ColonVarDecl .)
    VAR             reduce using rule 138 (ColonVarDecl -> VarDecl SEMICOLON ColonVarDecl .)
    ID              reduce using rule 138 (ColonVarDecl -> VarDecl SEMICOLON ColonVarDecl .)
    PROCEDURE       reduce using rule 138 (ColonVarDecl -> VarDecl SEMICOLON ColonVarDecl .)
    FUNCTION        reduce using rule 138 (ColonVarDecl -> VarDecl SEMICOLON ColonVarDecl .)
    CONSTRUCTOR     reduce using rule 138 (ColonVarDecl -> VarDecl SEMICOLON ColonVarDecl .)
    END             reduce using rule 138 (ColonVarDecl -> VarDecl SEMICOLON ColonVarDecl .)
    PUBLIC          reduce using rule 138 (ColonVarDecl -> VarDecl SEMICOLON ColonVarDecl .)


state 132

    (145) ConstrucDecl -> ConstrucHeading SEMICOLON Block .

    BEGIN           reduce using rule 145 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)
    CONSTANT        reduce using rule 145 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)
    TYPE            reduce using rule 145 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)
    VAR             reduce using rule 145 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)
    ID              reduce using rule 145 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)
    PROCEDURE       reduce using rule 145 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)
    FUNCTION        reduce using rule 145 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)
    CONSTRUCTOR     reduce using rule 145 (ConstrucDecl -> ConstrucHeading SEMICOLON Block .)


state 133

    (12) StmtList -> StmtList Statement SEMICOLON .

    END             reduce using rule 12 (StmtList -> StmtList Statement SEMICOLON .)
    INHERITED       reduce using rule 12 (StmtList -> StmtList Statement SEMICOLON .)
    LPAREN          reduce using rule 12 (StmtList -> StmtList Statement SEMICOLON .)
    ID              reduce using rule 12 (StmtList -> StmtList Statement SEMICOLON .)
    BEGIN           reduce using rule 12 (StmtList -> StmtList Statement SEMICOLON .)
    IF              reduce using rule 12 (StmtList -> StmtList Statement SEMICOLON .)
    CASE            reduce using rule 12 (StmtList -> StmtList Statement SEMICOLON .)
    REPEAT          reduce using rule 12 (StmtList -> StmtList Statement SEMICOLON .)
    WHILE           reduce using rule 12 (StmtList -> StmtList Statement SEMICOLON .)
    SEMICOLON       reduce using rule 12 (StmtList -> StmtList Statement SEMICOLON .)


state 134

    (11) CompoundStmt -> BEGIN StmtList END SEMICOLON .

    $end            reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    ELSE            reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    SEMICOLON       reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    UNTIL           reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    BEGIN           reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    CONSTANT        reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    TYPE            reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    VAR             reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    ID              reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    PROCEDURE       reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    FUNCTION        reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    CONSTRUCTOR     reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)
    END             reduce using rule 11 (CompoundStmt -> BEGIN StmtList END SEMICOLON .)


state 135

    (58) Factor -> TypeID LPAREN . Expression RPAREN
    (39) Expression -> . SimpleExpression RelSimpleStar
    (42) SimpleExpression -> . PLUS Term AddTermStar
    (43) SimpleExpression -> . MINUS Term AddTermStar
    (44) SimpleExpression -> . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 83
    MINUS           shift and go to state 81
    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 86
    Designator                     shift and go to state 82
    Factor                         shift and go to state 80
    SimpleExpression               shift and go to state 87
    Expression                     shift and go to state 195

state 136

    (59) Factor -> LPAREN LambFunc . RPAREN

    RPAREN          shift and go to state 196


state 137

    (156) LambFunc -> ID . LPAREN ConstExpr RPAREN
    (110) Designator -> ID . DesSubEleStar
    (111) DesSubEleStar -> . DesSubEleStar DesignatorSubElem
    (112) DesSubEleStar -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 197
    DOT             reduce using rule 112 (DesSubEleStar -> .)
    LSQUARE         reduce using rule 112 (DesSubEleStar -> .)
    POWER           reduce using rule 112 (DesSubEleStar -> .)
    MULTIPLY        reduce using rule 112 (DesSubEleStar -> .)
    DIVIDE          reduce using rule 112 (DesSubEleStar -> .)
    DIV             reduce using rule 112 (DesSubEleStar -> .)
    MOD             reduce using rule 112 (DesSubEleStar -> .)
    AND             reduce using rule 112 (DesSubEleStar -> .)
    SHL             reduce using rule 112 (DesSubEleStar -> .)
    SHR             reduce using rule 112 (DesSubEleStar -> .)
    PLUS            reduce using rule 112 (DesSubEleStar -> .)
    MINUS           reduce using rule 112 (DesSubEleStar -> .)
    OR              reduce using rule 112 (DesSubEleStar -> .)
    XOR             reduce using rule 112 (DesSubEleStar -> .)
    LANGLE          reduce using rule 112 (DesSubEleStar -> .)
    RANGLE          reduce using rule 112 (DesSubEleStar -> .)
    GEQ             reduce using rule 112 (DesSubEleStar -> .)
    LEQ             reduce using rule 112 (DesSubEleStar -> .)
    NOTEQUALS       reduce using rule 112 (DesSubEleStar -> .)
    EQUALS          reduce using rule 112 (DesSubEleStar -> .)
    RPAREN          reduce using rule 112 (DesSubEleStar -> .)

  ! LPAREN          [ reduce using rule 112 (DesSubEleStar -> .) ]

    DesSubEleStar                  shift and go to state 95

state 138

    (54) Factor -> LPAREN Expression . RPAREN

    RPAREN          shift and go to state 198


state 139

    (104) MulOp -> AND .

    USERSTRING      reduce using rule 104 (MulOp -> AND .)
    NUMBER          reduce using rule 104 (MulOp -> AND .)
    LPAREN          reduce using rule 104 (MulOp -> AND .)
    NOT             reduce using rule 104 (MulOp -> AND .)
    INHERITED       reduce using rule 104 (MulOp -> AND .)
    ID              reduce using rule 104 (MulOp -> AND .)
    INTEGER         reduce using rule 104 (MulOp -> AND .)
    REAL            reduce using rule 104 (MulOp -> AND .)
    CHAR            reduce using rule 104 (MulOp -> AND .)


state 140

    (47) Term -> Factor MulFacStar .

    PLUS            reduce using rule 47 (Term -> Factor MulFacStar .)
    MINUS           reduce using rule 47 (Term -> Factor MulFacStar .)
    OR              reduce using rule 47 (Term -> Factor MulFacStar .)
    XOR             reduce using rule 47 (Term -> Factor MulFacStar .)
    LANGLE          reduce using rule 47 (Term -> Factor MulFacStar .)
    RANGLE          reduce using rule 47 (Term -> Factor MulFacStar .)
    GEQ             reduce using rule 47 (Term -> Factor MulFacStar .)
    LEQ             reduce using rule 47 (Term -> Factor MulFacStar .)
    NOTEQUALS       reduce using rule 47 (Term -> Factor MulFacStar .)
    EQUALS          reduce using rule 47 (Term -> Factor MulFacStar .)
    RPAREN          reduce using rule 47 (Term -> Factor MulFacStar .)
    COMMA           reduce using rule 47 (Term -> Factor MulFacStar .)
    OF              reduce using rule 47 (Term -> Factor MulFacStar .)
    THEN            reduce using rule 47 (Term -> Factor MulFacStar .)
    DO              reduce using rule 47 (Term -> Factor MulFacStar .)
    BEGIN           reduce using rule 47 (Term -> Factor MulFacStar .)
    CONSTANT        reduce using rule 47 (Term -> Factor MulFacStar .)
    TYPE            reduce using rule 47 (Term -> Factor MulFacStar .)
    VAR             reduce using rule 47 (Term -> Factor MulFacStar .)
    ID              reduce using rule 47 (Term -> Factor MulFacStar .)
    PROCEDURE       reduce using rule 47 (Term -> Factor MulFacStar .)
    FUNCTION        reduce using rule 47 (Term -> Factor MulFacStar .)
    CONSTRUCTOR     reduce using rule 47 (Term -> Factor MulFacStar .)
    SEMICOLON       reduce using rule 47 (Term -> Factor MulFacStar .)
    UNTIL           reduce using rule 47 (Term -> Factor MulFacStar .)
    ELSE            reduce using rule 47 (Term -> Factor MulFacStar .)
    END             reduce using rule 47 (Term -> Factor MulFacStar .)
    RSQUARE         reduce using rule 47 (Term -> Factor MulFacStar .)


state 141

    (101) MulOp -> DIVIDE .

    USERSTRING      reduce using rule 101 (MulOp -> DIVIDE .)
    NUMBER          reduce using rule 101 (MulOp -> DIVIDE .)
    LPAREN          reduce using rule 101 (MulOp -> DIVIDE .)
    NOT             reduce using rule 101 (MulOp -> DIVIDE .)
    INHERITED       reduce using rule 101 (MulOp -> DIVIDE .)
    ID              reduce using rule 101 (MulOp -> DIVIDE .)
    INTEGER         reduce using rule 101 (MulOp -> DIVIDE .)
    REAL            reduce using rule 101 (MulOp -> DIVIDE .)
    CHAR            reduce using rule 101 (MulOp -> DIVIDE .)


state 142

    (106) MulOp -> SHR .

    USERSTRING      reduce using rule 106 (MulOp -> SHR .)
    NUMBER          reduce using rule 106 (MulOp -> SHR .)
    LPAREN          reduce using rule 106 (MulOp -> SHR .)
    NOT             reduce using rule 106 (MulOp -> SHR .)
    INHERITED       reduce using rule 106 (MulOp -> SHR .)
    ID              reduce using rule 106 (MulOp -> SHR .)
    INTEGER         reduce using rule 106 (MulOp -> SHR .)
    REAL            reduce using rule 106 (MulOp -> SHR .)
    CHAR            reduce using rule 106 (MulOp -> SHR .)


state 143

    (48) MulFacStar -> MulOp . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Designator                     shift and go to state 82
    Factor                         shift and go to state 199

state 144

    (100) MulOp -> MULTIPLY .

    USERSTRING      reduce using rule 100 (MulOp -> MULTIPLY .)
    NUMBER          reduce using rule 100 (MulOp -> MULTIPLY .)
    LPAREN          reduce using rule 100 (MulOp -> MULTIPLY .)
    NOT             reduce using rule 100 (MulOp -> MULTIPLY .)
    INHERITED       reduce using rule 100 (MulOp -> MULTIPLY .)
    ID              reduce using rule 100 (MulOp -> MULTIPLY .)
    INTEGER         reduce using rule 100 (MulOp -> MULTIPLY .)
    REAL            reduce using rule 100 (MulOp -> MULTIPLY .)
    CHAR            reduce using rule 100 (MulOp -> MULTIPLY .)


state 145

    (102) MulOp -> DIV .

    USERSTRING      reduce using rule 102 (MulOp -> DIV .)
    NUMBER          reduce using rule 102 (MulOp -> DIV .)
    LPAREN          reduce using rule 102 (MulOp -> DIV .)
    NOT             reduce using rule 102 (MulOp -> DIV .)
    INHERITED       reduce using rule 102 (MulOp -> DIV .)
    ID              reduce using rule 102 (MulOp -> DIV .)
    INTEGER         reduce using rule 102 (MulOp -> DIV .)
    REAL            reduce using rule 102 (MulOp -> DIV .)
    CHAR            reduce using rule 102 (MulOp -> DIV .)


state 146

    (105) MulOp -> SHL .

    USERSTRING      reduce using rule 105 (MulOp -> SHL .)
    NUMBER          reduce using rule 105 (MulOp -> SHL .)
    LPAREN          reduce using rule 105 (MulOp -> SHL .)
    NOT             reduce using rule 105 (MulOp -> SHL .)
    INHERITED       reduce using rule 105 (MulOp -> SHL .)
    ID              reduce using rule 105 (MulOp -> SHL .)
    INTEGER         reduce using rule 105 (MulOp -> SHL .)
    REAL            reduce using rule 105 (MulOp -> SHL .)
    CHAR            reduce using rule 105 (MulOp -> SHL .)


state 147

    (103) MulOp -> MOD .

    USERSTRING      reduce using rule 103 (MulOp -> MOD .)
    NUMBER          reduce using rule 103 (MulOp -> MOD .)
    LPAREN          reduce using rule 103 (MulOp -> MOD .)
    NOT             reduce using rule 103 (MulOp -> MOD .)
    INHERITED       reduce using rule 103 (MulOp -> MOD .)
    ID              reduce using rule 103 (MulOp -> MOD .)
    INTEGER         reduce using rule 103 (MulOp -> MOD .)
    REAL            reduce using rule 103 (MulOp -> MOD .)
    CHAR            reduce using rule 103 (MulOp -> MOD .)


state 148

    (43) SimpleExpression -> MINUS Term . AddTermStar
    (45) AddTermStar -> . AddOp Term AddTermStar
    (46) AddTermStar -> .
    (96) AddOp -> . PLUS
    (97) AddOp -> . MINUS
    (98) AddOp -> . OR
    (99) AddOp -> . XOR

    LANGLE          reduce using rule 46 (AddTermStar -> .)
    RANGLE          reduce using rule 46 (AddTermStar -> .)
    GEQ             reduce using rule 46 (AddTermStar -> .)
    LEQ             reduce using rule 46 (AddTermStar -> .)
    NOTEQUALS       reduce using rule 46 (AddTermStar -> .)
    EQUALS          reduce using rule 46 (AddTermStar -> .)
    OF              reduce using rule 46 (AddTermStar -> .)
    RPAREN          reduce using rule 46 (AddTermStar -> .)
    THEN            reduce using rule 46 (AddTermStar -> .)
    DO              reduce using rule 46 (AddTermStar -> .)
    BEGIN           reduce using rule 46 (AddTermStar -> .)
    CONSTANT        reduce using rule 46 (AddTermStar -> .)
    TYPE            reduce using rule 46 (AddTermStar -> .)
    VAR             reduce using rule 46 (AddTermStar -> .)
    ID              reduce using rule 46 (AddTermStar -> .)
    PROCEDURE       reduce using rule 46 (AddTermStar -> .)
    FUNCTION        reduce using rule 46 (AddTermStar -> .)
    CONSTRUCTOR     reduce using rule 46 (AddTermStar -> .)
    SEMICOLON       reduce using rule 46 (AddTermStar -> .)
    UNTIL           reduce using rule 46 (AddTermStar -> .)
    ELSE            reduce using rule 46 (AddTermStar -> .)
    END             reduce using rule 46 (AddTermStar -> .)
    COMMA           reduce using rule 46 (AddTermStar -> .)
    RSQUARE         reduce using rule 46 (AddTermStar -> .)
    PLUS            shift and go to state 155
    MINUS           shift and go to state 156
    OR              shift and go to state 154
    XOR             shift and go to state 152

    AddOp                          shift and go to state 151
    AddTermStar                    shift and go to state 200

state 149

    (51) Factor -> Designator LPAREN . ExprList RPAREN
    (109) ExprList -> . Expression CommaExpression
    (39) Expression -> . SimpleExpression RelSimpleStar
    (42) SimpleExpression -> . PLUS Term AddTermStar
    (43) SimpleExpression -> . MINUS Term AddTermStar
    (44) SimpleExpression -> . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 83
    MINUS           shift and go to state 81
    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 86
    Designator                     shift and go to state 82
    SimpleExpression               shift and go to state 87
    Factor                         shift and go to state 80
    Expression                     shift and go to state 170
    ExprList                       shift and go to state 201

state 150

    (42) SimpleExpression -> PLUS Term . AddTermStar
    (45) AddTermStar -> . AddOp Term AddTermStar
    (46) AddTermStar -> .
    (96) AddOp -> . PLUS
    (97) AddOp -> . MINUS
    (98) AddOp -> . OR
    (99) AddOp -> . XOR

    LANGLE          reduce using rule 46 (AddTermStar -> .)
    RANGLE          reduce using rule 46 (AddTermStar -> .)
    GEQ             reduce using rule 46 (AddTermStar -> .)
    LEQ             reduce using rule 46 (AddTermStar -> .)
    NOTEQUALS       reduce using rule 46 (AddTermStar -> .)
    EQUALS          reduce using rule 46 (AddTermStar -> .)
    OF              reduce using rule 46 (AddTermStar -> .)
    RPAREN          reduce using rule 46 (AddTermStar -> .)
    THEN            reduce using rule 46 (AddTermStar -> .)
    DO              reduce using rule 46 (AddTermStar -> .)
    BEGIN           reduce using rule 46 (AddTermStar -> .)
    CONSTANT        reduce using rule 46 (AddTermStar -> .)
    TYPE            reduce using rule 46 (AddTermStar -> .)
    VAR             reduce using rule 46 (AddTermStar -> .)
    ID              reduce using rule 46 (AddTermStar -> .)
    PROCEDURE       reduce using rule 46 (AddTermStar -> .)
    FUNCTION        reduce using rule 46 (AddTermStar -> .)
    CONSTRUCTOR     reduce using rule 46 (AddTermStar -> .)
    SEMICOLON       reduce using rule 46 (AddTermStar -> .)
    UNTIL           reduce using rule 46 (AddTermStar -> .)
    ELSE            reduce using rule 46 (AddTermStar -> .)
    END             reduce using rule 46 (AddTermStar -> .)
    COMMA           reduce using rule 46 (AddTermStar -> .)
    RSQUARE         reduce using rule 46 (AddTermStar -> .)
    PLUS            shift and go to state 155
    MINUS           shift and go to state 156
    OR              shift and go to state 154
    XOR             shift and go to state 152

    AddOp                          shift and go to state 151
    AddTermStar                    shift and go to state 202

state 151

    (45) AddTermStar -> AddOp . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    Term                           shift and go to state 203
    TypeID                         shift and go to state 76
    Designator                     shift and go to state 82
    Factor                         shift and go to state 80

state 152

    (99) AddOp -> XOR .

    USERSTRING      reduce using rule 99 (AddOp -> XOR .)
    NUMBER          reduce using rule 99 (AddOp -> XOR .)
    LPAREN          reduce using rule 99 (AddOp -> XOR .)
    NOT             reduce using rule 99 (AddOp -> XOR .)
    INHERITED       reduce using rule 99 (AddOp -> XOR .)
    ID              reduce using rule 99 (AddOp -> XOR .)
    INTEGER         reduce using rule 99 (AddOp -> XOR .)
    REAL            reduce using rule 99 (AddOp -> XOR .)
    CHAR            reduce using rule 99 (AddOp -> XOR .)


state 153

    (44) SimpleExpression -> Term AddTermStar .

    LANGLE          reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    RANGLE          reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    GEQ             reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    LEQ             reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    NOTEQUALS       reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    EQUALS          reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    RPAREN          reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    OF              reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    COMMA           reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    RSQUARE         reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    DO              reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    THEN            reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    SEMICOLON       reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    UNTIL           reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    ELSE            reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    END             reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    BEGIN           reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    CONSTANT        reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    TYPE            reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    VAR             reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    ID              reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    PROCEDURE       reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    FUNCTION        reduce using rule 44 (SimpleExpression -> Term AddTermStar .)
    CONSTRUCTOR     reduce using rule 44 (SimpleExpression -> Term AddTermStar .)


state 154

    (98) AddOp -> OR .

    USERSTRING      reduce using rule 98 (AddOp -> OR .)
    NUMBER          reduce using rule 98 (AddOp -> OR .)
    LPAREN          reduce using rule 98 (AddOp -> OR .)
    NOT             reduce using rule 98 (AddOp -> OR .)
    INHERITED       reduce using rule 98 (AddOp -> OR .)
    ID              reduce using rule 98 (AddOp -> OR .)
    INTEGER         reduce using rule 98 (AddOp -> OR .)
    REAL            reduce using rule 98 (AddOp -> OR .)
    CHAR            reduce using rule 98 (AddOp -> OR .)


state 155

    (96) AddOp -> PLUS .

    USERSTRING      reduce using rule 96 (AddOp -> PLUS .)
    NUMBER          reduce using rule 96 (AddOp -> PLUS .)
    LPAREN          reduce using rule 96 (AddOp -> PLUS .)
    NOT             reduce using rule 96 (AddOp -> PLUS .)
    INHERITED       reduce using rule 96 (AddOp -> PLUS .)
    ID              reduce using rule 96 (AddOp -> PLUS .)
    INTEGER         reduce using rule 96 (AddOp -> PLUS .)
    REAL            reduce using rule 96 (AddOp -> PLUS .)
    CHAR            reduce using rule 96 (AddOp -> PLUS .)


state 156

    (97) AddOp -> MINUS .

    USERSTRING      reduce using rule 97 (AddOp -> MINUS .)
    NUMBER          reduce using rule 97 (AddOp -> MINUS .)
    LPAREN          reduce using rule 97 (AddOp -> MINUS .)
    NOT             reduce using rule 97 (AddOp -> MINUS .)
    INHERITED       reduce using rule 97 (AddOp -> MINUS .)
    ID              reduce using rule 97 (AddOp -> MINUS .)
    INTEGER         reduce using rule 97 (AddOp -> MINUS .)
    REAL            reduce using rule 97 (AddOp -> MINUS .)
    CHAR            reduce using rule 97 (AddOp -> MINUS .)


state 157

    (94) RelOp -> NOTEQUALS .

    PLUS            reduce using rule 94 (RelOp -> NOTEQUALS .)
    MINUS           reduce using rule 94 (RelOp -> NOTEQUALS .)
    USERSTRING      reduce using rule 94 (RelOp -> NOTEQUALS .)
    NUMBER          reduce using rule 94 (RelOp -> NOTEQUALS .)
    LPAREN          reduce using rule 94 (RelOp -> NOTEQUALS .)
    NOT             reduce using rule 94 (RelOp -> NOTEQUALS .)
    INHERITED       reduce using rule 94 (RelOp -> NOTEQUALS .)
    ID              reduce using rule 94 (RelOp -> NOTEQUALS .)
    INTEGER         reduce using rule 94 (RelOp -> NOTEQUALS .)
    REAL            reduce using rule 94 (RelOp -> NOTEQUALS .)
    CHAR            reduce using rule 94 (RelOp -> NOTEQUALS .)


state 158

    (92) RelOp -> GEQ .

    PLUS            reduce using rule 92 (RelOp -> GEQ .)
    MINUS           reduce using rule 92 (RelOp -> GEQ .)
    USERSTRING      reduce using rule 92 (RelOp -> GEQ .)
    NUMBER          reduce using rule 92 (RelOp -> GEQ .)
    LPAREN          reduce using rule 92 (RelOp -> GEQ .)
    NOT             reduce using rule 92 (RelOp -> GEQ .)
    INHERITED       reduce using rule 92 (RelOp -> GEQ .)
    ID              reduce using rule 92 (RelOp -> GEQ .)
    INTEGER         reduce using rule 92 (RelOp -> GEQ .)
    REAL            reduce using rule 92 (RelOp -> GEQ .)
    CHAR            reduce using rule 92 (RelOp -> GEQ .)


state 159

    (90) RelOp -> LANGLE .

    PLUS            reduce using rule 90 (RelOp -> LANGLE .)
    MINUS           reduce using rule 90 (RelOp -> LANGLE .)
    USERSTRING      reduce using rule 90 (RelOp -> LANGLE .)
    NUMBER          reduce using rule 90 (RelOp -> LANGLE .)
    LPAREN          reduce using rule 90 (RelOp -> LANGLE .)
    NOT             reduce using rule 90 (RelOp -> LANGLE .)
    INHERITED       reduce using rule 90 (RelOp -> LANGLE .)
    ID              reduce using rule 90 (RelOp -> LANGLE .)
    INTEGER         reduce using rule 90 (RelOp -> LANGLE .)
    REAL            reduce using rule 90 (RelOp -> LANGLE .)
    CHAR            reduce using rule 90 (RelOp -> LANGLE .)


state 160

    (40) RelSimpleStar -> RelOp . SimpleExpression RelSimpleStar
    (42) SimpleExpression -> . PLUS Term AddTermStar
    (43) SimpleExpression -> . MINUS Term AddTermStar
    (44) SimpleExpression -> . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 83
    MINUS           shift and go to state 81
    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 86
    Designator                     shift and go to state 82
    Factor                         shift and go to state 80
    SimpleExpression               shift and go to state 204

state 161

    (95) RelOp -> EQUALS .

    PLUS            reduce using rule 95 (RelOp -> EQUALS .)
    MINUS           reduce using rule 95 (RelOp -> EQUALS .)
    USERSTRING      reduce using rule 95 (RelOp -> EQUALS .)
    NUMBER          reduce using rule 95 (RelOp -> EQUALS .)
    LPAREN          reduce using rule 95 (RelOp -> EQUALS .)
    NOT             reduce using rule 95 (RelOp -> EQUALS .)
    INHERITED       reduce using rule 95 (RelOp -> EQUALS .)
    ID              reduce using rule 95 (RelOp -> EQUALS .)
    INTEGER         reduce using rule 95 (RelOp -> EQUALS .)
    REAL            reduce using rule 95 (RelOp -> EQUALS .)
    CHAR            reduce using rule 95 (RelOp -> EQUALS .)


state 162

    (93) RelOp -> LEQ .

    PLUS            reduce using rule 93 (RelOp -> LEQ .)
    MINUS           reduce using rule 93 (RelOp -> LEQ .)
    USERSTRING      reduce using rule 93 (RelOp -> LEQ .)
    NUMBER          reduce using rule 93 (RelOp -> LEQ .)
    LPAREN          reduce using rule 93 (RelOp -> LEQ .)
    NOT             reduce using rule 93 (RelOp -> LEQ .)
    INHERITED       reduce using rule 93 (RelOp -> LEQ .)
    ID              reduce using rule 93 (RelOp -> LEQ .)
    INTEGER         reduce using rule 93 (RelOp -> LEQ .)
    REAL            reduce using rule 93 (RelOp -> LEQ .)
    CHAR            reduce using rule 93 (RelOp -> LEQ .)


state 163

    (39) Expression -> SimpleExpression RelSimpleStar .

    SEMICOLON       reduce using rule 39 (Expression -> SimpleExpression RelSimpleStar .)
    UNTIL           reduce using rule 39 (Expression -> SimpleExpression RelSimpleStar .)
    ELSE            reduce using rule 39 (Expression -> SimpleExpression RelSimpleStar .)
    END             reduce using rule 39 (Expression -> SimpleExpression RelSimpleStar .)
    RPAREN          reduce using rule 39 (Expression -> SimpleExpression RelSimpleStar .)
    OF              reduce using rule 39 (Expression -> SimpleExpression RelSimpleStar .)
    THEN            reduce using rule 39 (Expression -> SimpleExpression RelSimpleStar .)
    COMMA           reduce using rule 39 (Expression -> SimpleExpression RelSimpleStar .)
    RSQUARE         reduce using rule 39 (Expression -> SimpleExpression RelSimpleStar .)
    DO              reduce using rule 39 (Expression -> SimpleExpression RelSimpleStar .)


state 164

    (91) RelOp -> RANGLE .

    PLUS            reduce using rule 91 (RelOp -> RANGLE .)
    MINUS           reduce using rule 91 (RelOp -> RANGLE .)
    USERSTRING      reduce using rule 91 (RelOp -> RANGLE .)
    NUMBER          reduce using rule 91 (RelOp -> RANGLE .)
    LPAREN          reduce using rule 91 (RelOp -> RANGLE .)
    NOT             reduce using rule 91 (RelOp -> RANGLE .)
    INHERITED       reduce using rule 91 (RelOp -> RANGLE .)
    ID              reduce using rule 91 (RelOp -> RANGLE .)
    INTEGER         reduce using rule 91 (RelOp -> RANGLE .)
    REAL            reduce using rule 91 (RelOp -> RANGLE .)
    CHAR            reduce using rule 91 (RelOp -> RANGLE .)


state 165

    (56) Factor -> INHERITED Designator .

    MULTIPLY        reduce using rule 56 (Factor -> INHERITED Designator .)
    DIVIDE          reduce using rule 56 (Factor -> INHERITED Designator .)
    DIV             reduce using rule 56 (Factor -> INHERITED Designator .)
    MOD             reduce using rule 56 (Factor -> INHERITED Designator .)
    AND             reduce using rule 56 (Factor -> INHERITED Designator .)
    SHL             reduce using rule 56 (Factor -> INHERITED Designator .)
    SHR             reduce using rule 56 (Factor -> INHERITED Designator .)
    PLUS            reduce using rule 56 (Factor -> INHERITED Designator .)
    MINUS           reduce using rule 56 (Factor -> INHERITED Designator .)
    OR              reduce using rule 56 (Factor -> INHERITED Designator .)
    XOR             reduce using rule 56 (Factor -> INHERITED Designator .)
    LANGLE          reduce using rule 56 (Factor -> INHERITED Designator .)
    RANGLE          reduce using rule 56 (Factor -> INHERITED Designator .)
    GEQ             reduce using rule 56 (Factor -> INHERITED Designator .)
    LEQ             reduce using rule 56 (Factor -> INHERITED Designator .)
    NOTEQUALS       reduce using rule 56 (Factor -> INHERITED Designator .)
    EQUALS          reduce using rule 56 (Factor -> INHERITED Designator .)
    RPAREN          reduce using rule 56 (Factor -> INHERITED Designator .)
    SEMICOLON       reduce using rule 56 (Factor -> INHERITED Designator .)
    UNTIL           reduce using rule 56 (Factor -> INHERITED Designator .)
    ELSE            reduce using rule 56 (Factor -> INHERITED Designator .)
    END             reduce using rule 56 (Factor -> INHERITED Designator .)
    OF              reduce using rule 56 (Factor -> INHERITED Designator .)
    THEN            reduce using rule 56 (Factor -> INHERITED Designator .)
    DO              reduce using rule 56 (Factor -> INHERITED Designator .)
    BEGIN           reduce using rule 56 (Factor -> INHERITED Designator .)
    CONSTANT        reduce using rule 56 (Factor -> INHERITED Designator .)
    TYPE            reduce using rule 56 (Factor -> INHERITED Designator .)
    VAR             reduce using rule 56 (Factor -> INHERITED Designator .)
    ID              reduce using rule 56 (Factor -> INHERITED Designator .)
    PROCEDURE       reduce using rule 56 (Factor -> INHERITED Designator .)
    FUNCTION        reduce using rule 56 (Factor -> INHERITED Designator .)
    CONSTRUCTOR     reduce using rule 56 (Factor -> INHERITED Designator .)
    COMMA           reduce using rule 56 (Factor -> INHERITED Designator .)
    RSQUARE         reduce using rule 56 (Factor -> INHERITED Designator .)


state 166

    (29) CaseStmt -> CASE Expression OF . CaseSelector ColonCaseSelector END
    (30) CaseStmt -> CASE Expression OF . CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END
    (33) CaseSelector -> . CaseLabel COLON Statement
    (34) CaseLabel -> . NUMBER

    NUMBER          shift and go to state 205

    CaseLabel                      shift and go to state 207
    CaseSelector                   shift and go to state 206

state 167

    (55) Factor -> NOT Factor .

    MULTIPLY        reduce using rule 55 (Factor -> NOT Factor .)
    DIVIDE          reduce using rule 55 (Factor -> NOT Factor .)
    DIV             reduce using rule 55 (Factor -> NOT Factor .)
    MOD             reduce using rule 55 (Factor -> NOT Factor .)
    AND             reduce using rule 55 (Factor -> NOT Factor .)
    SHL             reduce using rule 55 (Factor -> NOT Factor .)
    SHR             reduce using rule 55 (Factor -> NOT Factor .)
    PLUS            reduce using rule 55 (Factor -> NOT Factor .)
    MINUS           reduce using rule 55 (Factor -> NOT Factor .)
    OR              reduce using rule 55 (Factor -> NOT Factor .)
    XOR             reduce using rule 55 (Factor -> NOT Factor .)
    LANGLE          reduce using rule 55 (Factor -> NOT Factor .)
    RANGLE          reduce using rule 55 (Factor -> NOT Factor .)
    GEQ             reduce using rule 55 (Factor -> NOT Factor .)
    LEQ             reduce using rule 55 (Factor -> NOT Factor .)
    NOTEQUALS       reduce using rule 55 (Factor -> NOT Factor .)
    EQUALS          reduce using rule 55 (Factor -> NOT Factor .)
    RPAREN          reduce using rule 55 (Factor -> NOT Factor .)
    SEMICOLON       reduce using rule 55 (Factor -> NOT Factor .)
    UNTIL           reduce using rule 55 (Factor -> NOT Factor .)
    ELSE            reduce using rule 55 (Factor -> NOT Factor .)
    END             reduce using rule 55 (Factor -> NOT Factor .)
    OF              reduce using rule 55 (Factor -> NOT Factor .)
    THEN            reduce using rule 55 (Factor -> NOT Factor .)
    DO              reduce using rule 55 (Factor -> NOT Factor .)
    BEGIN           reduce using rule 55 (Factor -> NOT Factor .)
    CONSTANT        reduce using rule 55 (Factor -> NOT Factor .)
    TYPE            reduce using rule 55 (Factor -> NOT Factor .)
    VAR             reduce using rule 55 (Factor -> NOT Factor .)
    ID              reduce using rule 55 (Factor -> NOT Factor .)
    PROCEDURE       reduce using rule 55 (Factor -> NOT Factor .)
    FUNCTION        reduce using rule 55 (Factor -> NOT Factor .)
    CONSTRUCTOR     reduce using rule 55 (Factor -> NOT Factor .)
    COMMA           reduce using rule 55 (Factor -> NOT Factor .)
    RSQUARE         reduce using rule 55 (Factor -> NOT Factor .)


state 168

    (19) SimpleStatement -> Designator ASSIGNTO Expression .

    SEMICOLON       reduce using rule 19 (SimpleStatement -> Designator ASSIGNTO Expression .)
    END             reduce using rule 19 (SimpleStatement -> Designator ASSIGNTO Expression .)
    ELSE            reduce using rule 19 (SimpleStatement -> Designator ASSIGNTO Expression .)
    UNTIL           reduce using rule 19 (SimpleStatement -> Designator ASSIGNTO Expression .)


state 169

    (18) SimpleStatement -> Designator LPAREN ExprList . RPAREN

    RPAREN          shift and go to state 208


state 170

    (109) ExprList -> Expression . CommaExpression
    (107) CommaExpression -> . CommaExpression COMMA Expression
    (108) CommaExpression -> .

    COMMA           reduce using rule 108 (CommaExpression -> .)
    RPAREN          reduce using rule 108 (CommaExpression -> .)
    RSQUARE         reduce using rule 108 (CommaExpression -> .)

    CommaExpression                shift and go to state 209

state 171

    (21) SimpleStatement -> LPAREN Expression RPAREN .

    SEMICOLON       reduce using rule 21 (SimpleStatement -> LPAREN Expression RPAREN .)
    END             reduce using rule 21 (SimpleStatement -> LPAREN Expression RPAREN .)
    ELSE            reduce using rule 21 (SimpleStatement -> LPAREN Expression RPAREN .)
    UNTIL           reduce using rule 21 (SimpleStatement -> LPAREN Expression RPAREN .)


state 172

    (115) DesignatorSubElem -> POWER . SEMICOLON

    SEMICOLON       shift and go to state 210


state 173

    (114) DesignatorSubElem -> LSQUARE . ExprList RSQUARE
    (109) ExprList -> . Expression CommaExpression
    (39) Expression -> . SimpleExpression RelSimpleStar
    (42) SimpleExpression -> . PLUS Term AddTermStar
    (43) SimpleExpression -> . MINUS Term AddTermStar
    (44) SimpleExpression -> . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 83
    MINUS           shift and go to state 81
    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 86
    Designator                     shift and go to state 82
    SimpleExpression               shift and go to state 87
    Factor                         shift and go to state 80
    Expression                     shift and go to state 170
    ExprList                       shift and go to state 211

state 174

    (111) DesSubEleStar -> DesSubEleStar DesignatorSubElem .

    DOT             reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    LSQUARE         reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    POWER           reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    LPAREN          reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    MULTIPLY        reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    DIVIDE          reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    DIV             reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    MOD             reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    AND             reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    SHL             reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    SHR             reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    PLUS            reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    MINUS           reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    OR              reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    XOR             reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    LANGLE          reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    RANGLE          reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    GEQ             reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    LEQ             reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    NOTEQUALS       reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    EQUALS          reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    RPAREN          reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    ASSIGNTO        reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    SEMICOLON       reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    ID              reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    OF              reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    THEN            reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    DO              reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    UNTIL           reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    BEGIN           reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    CONSTANT        reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    TYPE            reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    VAR             reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    PROCEDURE       reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    FUNCTION        reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    CONSTRUCTOR     reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    ELSE            reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    END             reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    COMMA           reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)
    RSQUARE         reduce using rule 111 (DesSubEleStar -> DesSubEleStar DesignatorSubElem .)


state 175

    (113) DesignatorSubElem -> DOT . ID

    ID              shift and go to state 212


state 176

    (27) IfStmt -> IF Expression THEN . Statement
    (28) IfStmt -> IF Expression THEN . Statement ELSE Statement
    (14) Statement -> . SimpleStatement
    (15) Statement -> . StructStmt
    (16) Statement -> .
    (17) SimpleStatement -> . Designator
    (18) SimpleStatement -> . Designator LPAREN ExprList RPAREN
    (19) SimpleStatement -> . Designator ASSIGNTO Expression
    (20) SimpleStatement -> . INHERITED
    (21) SimpleStatement -> . LPAREN Expression RPAREN
    (22) StructStmt -> . CompoundStmt
    (23) StructStmt -> . ConditionalStmt
    (24) StructStmt -> . LoopStmt
    (110) Designator -> . ID DesSubEleStar
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (25) ConditionalStmt -> . IfStmt SEMICOLON
    (26) ConditionalStmt -> . CaseStmt SEMICOLON
    (35) LoopStmt -> . RepeatStmt
    (36) LoopStmt -> . WhileStmt
    (27) IfStmt -> . IF Expression THEN Statement
    (28) IfStmt -> . IF Expression THEN Statement ELSE Statement
    (29) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector END
    (30) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END
    (37) RepeatStmt -> . REPEAT Statement UNTIL Expression SEMICOLON
    (38) WhileStmt -> . WHILE Expression DO Statement SEMICOLON

    ELSE            reduce using rule 16 (Statement -> .)
    SEMICOLON       reduce using rule 16 (Statement -> .)
    INHERITED       shift and go to state 45
    LPAREN          shift and go to state 44
    ID              shift and go to state 46
    BEGIN           shift and go to state 7
    IF              shift and go to state 47
    CASE            shift and go to state 38
    REPEAT          shift and go to state 49
    WHILE           shift and go to state 48

    WhileStmt                      shift and go to state 43
    ConditionalStmt                shift and go to state 42
    Designator                     shift and go to state 39
    IfStmt                         shift and go to state 37
    SimpleStatement                shift and go to state 35
    CompoundStmt                   shift and go to state 52
    LoopStmt                       shift and go to state 40
    Statement                      shift and go to state 213
    StructStmt                     shift and go to state 50
    RepeatStmt                     shift and go to state 51
    CaseStmt                       shift and go to state 41

state 177

    (38) WhileStmt -> WHILE Expression DO . Statement SEMICOLON
    (14) Statement -> . SimpleStatement
    (15) Statement -> . StructStmt
    (16) Statement -> .
    (17) SimpleStatement -> . Designator
    (18) SimpleStatement -> . Designator LPAREN ExprList RPAREN
    (19) SimpleStatement -> . Designator ASSIGNTO Expression
    (20) SimpleStatement -> . INHERITED
    (21) SimpleStatement -> . LPAREN Expression RPAREN
    (22) StructStmt -> . CompoundStmt
    (23) StructStmt -> . ConditionalStmt
    (24) StructStmt -> . LoopStmt
    (110) Designator -> . ID DesSubEleStar
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (25) ConditionalStmt -> . IfStmt SEMICOLON
    (26) ConditionalStmt -> . CaseStmt SEMICOLON
    (35) LoopStmt -> . RepeatStmt
    (36) LoopStmt -> . WhileStmt
    (27) IfStmt -> . IF Expression THEN Statement
    (28) IfStmt -> . IF Expression THEN Statement ELSE Statement
    (29) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector END
    (30) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END
    (37) RepeatStmt -> . REPEAT Statement UNTIL Expression SEMICOLON
    (38) WhileStmt -> . WHILE Expression DO Statement SEMICOLON

    SEMICOLON       reduce using rule 16 (Statement -> .)
    INHERITED       shift and go to state 45
    LPAREN          shift and go to state 44
    ID              shift and go to state 46
    BEGIN           shift and go to state 7
    IF              shift and go to state 47
    CASE            shift and go to state 38
    REPEAT          shift and go to state 49
    WHILE           shift and go to state 48

    WhileStmt                      shift and go to state 43
    ConditionalStmt                shift and go to state 42
    Designator                     shift and go to state 39
    IfStmt                         shift and go to state 37
    SimpleStatement                shift and go to state 35
    CompoundStmt                   shift and go to state 52
    LoopStmt                       shift and go to state 40
    Statement                      shift and go to state 214
    StructStmt                     shift and go to state 50
    RepeatStmt                     shift and go to state 51
    CaseStmt                       shift and go to state 41

state 178

    (37) RepeatStmt -> REPEAT Statement UNTIL . Expression SEMICOLON
    (39) Expression -> . SimpleExpression RelSimpleStar
    (42) SimpleExpression -> . PLUS Term AddTermStar
    (43) SimpleExpression -> . MINUS Term AddTermStar
    (44) SimpleExpression -> . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 83
    MINUS           shift and go to state 81
    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 86
    Designator                     shift and go to state 82
    Factor                         shift and go to state 80
    SimpleExpression               shift and go to state 87
    Expression                     shift and go to state 215

state 179

    (69) PointerType -> POWER ID .

    SEMICOLON       reduce using rule 69 (PointerType -> POWER ID .)


state 180

    (124) Array -> ARRAY LSQUARE . ONE DOTDOT OrdinalType RSQUARE OF TypeArray

    ONE             shift and go to state 216


state 181

    (157) ObjectType -> OBJECT . ObjectHeritage ObjectBody END
    (158) ObjectHeritage -> . LPAREN IdentList RPAREN
    (159) ObjectHeritage -> .

    LPAREN          shift and go to state 217
    END             reduce using rule 159 (ObjectHeritage -> .)
    PUBLIC          reduce using rule 159 (ObjectHeritage -> .)
    VAR             reduce using rule 159 (ObjectHeritage -> .)
    ID              reduce using rule 159 (ObjectHeritage -> .)
    TYPE            reduce using rule 159 (ObjectHeritage -> .)
    CONSTANT        reduce using rule 159 (ObjectHeritage -> .)
    PROCEDURE       reduce using rule 159 (ObjectHeritage -> .)
    FUNCTION        reduce using rule 159 (ObjectHeritage -> .)

    ObjectHeritage                 shift and go to state 218

state 182

    (84) TypeDecl -> ID EQUALS Type .

    SEMICOLON       reduce using rule 84 (TypeDecl -> ID EQUALS Type .)


state 183

    (174) ClassType -> CLASS . ClassHeritage ClassBody END
    (175) ClassHeritage -> . LPAREN IdentList RPAREN
    (176) ClassHeritage -> .

    LPAREN          shift and go to state 219
    END             reduce using rule 176 (ClassHeritage -> .)
    PUBLIC          reduce using rule 176 (ClassHeritage -> .)
    TYPE            reduce using rule 176 (ClassHeritage -> .)
    CONSTANT        reduce using rule 176 (ClassHeritage -> .)
    VAR             reduce using rule 176 (ClassHeritage -> .)
    ID              reduce using rule 176 (ClassHeritage -> .)
    PROCEDURE       reduce using rule 176 (ClassHeritage -> .)
    FUNCTION        reduce using rule 176 (ClassHeritage -> .)

    ClassHeritage                  shift and go to state 220

state 184

    (88) RestrictedType -> ObjectType .

    SEMICOLON       reduce using rule 88 (RestrictedType -> ObjectType .)


state 185

    (85) TypeDecl -> ID EQUALS RestrictedType .

    SEMICOLON       reduce using rule 85 (TypeDecl -> ID EQUALS RestrictedType .)


state 186

    (89) RestrictedType -> ClassType .

    SEMICOLON       reduce using rule 89 (RestrictedType -> ClassType .)


state 187

    (86) TypeDecl -> ID EQUALS TYPE . Type
    (87) TypeDecl -> ID EQUALS TYPE . RestrictedType
    (60) Type -> . TypeID
    (61) Type -> . SimpleType
    (62) Type -> . PointerType
    (63) Type -> . StringType
    (64) Type -> . ProcedureType
    (65) Type -> . Array
    (66) Type -> . ID
    (88) RestrictedType -> . ObjectType
    (89) RestrictedType -> . ClassType
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR
    (67) SimpleType -> . OrdinalType
    (68) SimpleType -> . RealType
    (69) PointerType -> . POWER ID
    (70) StringType -> . STRING
    (71) ProcedureType -> . ProcedureHeading
    (72) ProcedureType -> . FuncHeading
    (124) Array -> . ARRAY LSQUARE ONE DOTDOT OrdinalType RSQUARE OF TypeArray
    (157) ObjectType -> . OBJECT ObjectHeritage ObjectBody END
    (174) ClassType -> . CLASS ClassHeritage ClassBody END
    (78) OrdinalType -> . INTEGER
    (79) RealType -> . DOUBLE
    (153) ProcedureHeading -> . PROCEDURE Designator FormalParams
    (148) FuncHeading -> . FUNCTION ID LPAREN FormalParams RPAREN

    ID              shift and go to state 111
    INTEGER         shift and go to state 107
    REAL            shift and go to state 75
    CHAR            shift and go to state 79
    POWER           shift and go to state 106
    STRING          shift and go to state 109
    ARRAY           shift and go to state 108
    OBJECT          shift and go to state 181
    CLASS           shift and go to state 183
    DOUBLE          shift and go to state 113
    PROCEDURE       shift and go to state 20
    FUNCTION        shift and go to state 22

    TypeID                         shift and go to state 99
    ProcedureType                  shift and go to state 103
    FuncHeading                    shift and go to state 104
    SimpleType                     shift and go to state 105
    RestrictedType                 shift and go to state 222
    StringType                     shift and go to state 102
    ClassType                      shift and go to state 186
    OrdinalType                    shift and go to state 110
    ProcedureHeading               shift and go to state 100
    PointerType                    shift and go to state 114
    RealType                       shift and go to state 112
    Array                          shift and go to state 115
    Type                           shift and go to state 221
    ObjectType                     shift and go to state 184

state 188

    (148) FuncHeading -> FUNCTION ID LPAREN FormalParams . RPAREN

    RPAREN          shift and go to state 223


state 189

    (118) ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .

    ID              reduce using rule 118 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    BEGIN           reduce using rule 118 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    CONSTANT        reduce using rule 118 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    TYPE            reduce using rule 118 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    VAR             reduce using rule 118 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    PROCEDURE       reduce using rule 118 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    FUNCTION        reduce using rule 118 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    CONSTRUCTOR     reduce using rule 118 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    END             reduce using rule 118 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)
    PUBLIC          reduce using rule 118 (ColonConstDecl -> ColonConstDecl ConstDecl SEMICOLON .)


state 190

    (120) ConstDecl -> ID EQUALS . ConstExpr
    (130) ConstExpr -> .

    SEMICOLON       reduce using rule 130 (ConstExpr -> .)

    ConstExpr                      shift and go to state 224

state 191

    (121) ConstDecl -> ID COLON . TypeID EQUALS TypedConst
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 225

state 192

    (133) CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID . TypeArgs
    (134) CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID .
    (73) TypeArgs -> . LANGLE TypeID RANGLE
    (74) TypeArgs -> . LANGLE STRING RANGLE

    COMMA           reduce using rule 134 (CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID .)
    COLON           reduce using rule 134 (CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID .)
    SEMICOLON       reduce using rule 134 (CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID .)
    RPAREN          reduce using rule 134 (CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID .)
    LANGLE          shift and go to state 65

    TypeArgs                       shift and go to state 226

state 193

    (73) TypeArgs -> LANGLE TypeID RANGLE .

    COMMA           reduce using rule 73 (TypeArgs -> LANGLE TypeID RANGLE .)
    COLON           reduce using rule 73 (TypeArgs -> LANGLE TypeID RANGLE .)
    SEMICOLON       reduce using rule 73 (TypeArgs -> LANGLE TypeID RANGLE .)
    RPAREN          reduce using rule 73 (TypeArgs -> LANGLE TypeID RANGLE .)


state 194

    (74) TypeArgs -> LANGLE STRING RANGLE .

    COMMA           reduce using rule 74 (TypeArgs -> LANGLE STRING RANGLE .)
    COLON           reduce using rule 74 (TypeArgs -> LANGLE STRING RANGLE .)
    SEMICOLON       reduce using rule 74 (TypeArgs -> LANGLE STRING RANGLE .)
    RPAREN          reduce using rule 74 (TypeArgs -> LANGLE STRING RANGLE .)


state 195

    (58) Factor -> TypeID LPAREN Expression . RPAREN

    RPAREN          shift and go to state 227


state 196

    (59) Factor -> LPAREN LambFunc RPAREN .

    MULTIPLY        reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    DIVIDE          reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    DIV             reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    MOD             reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    AND             reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    SHL             reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    SHR             reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    PLUS            reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    MINUS           reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    OR              reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    XOR             reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    LANGLE          reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    RANGLE          reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    GEQ             reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    LEQ             reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    NOTEQUALS       reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    EQUALS          reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    RPAREN          reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    SEMICOLON       reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    UNTIL           reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    ELSE            reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    END             reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    OF              reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    THEN            reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    DO              reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    BEGIN           reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    CONSTANT        reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    TYPE            reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    VAR             reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    ID              reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    PROCEDURE       reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    FUNCTION        reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    CONSTRUCTOR     reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    COMMA           reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)
    RSQUARE         reduce using rule 59 (Factor -> LPAREN LambFunc RPAREN .)


state 197

    (156) LambFunc -> ID LPAREN . ConstExpr RPAREN
    (130) ConstExpr -> .

    RPAREN          reduce using rule 130 (ConstExpr -> .)

    ConstExpr                      shift and go to state 228

state 198

    (54) Factor -> LPAREN Expression RPAREN .

    MULTIPLY        reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    DIV             reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    AND             reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    SHL             reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    SHR             reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    OR              reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    LANGLE          reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    RANGLE          reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    GEQ             reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    LEQ             reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    NOTEQUALS       reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    EQUALS          reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    UNTIL           reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    ELSE            reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    END             reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    OF              reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    THEN            reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    DO              reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    BEGIN           reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    CONSTANT        reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    TYPE            reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    VAR             reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    ID              reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    PROCEDURE       reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    FUNCTION        reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    CONSTRUCTOR     reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)
    RSQUARE         reduce using rule 54 (Factor -> LPAREN Expression RPAREN .)


state 199

    (48) MulFacStar -> MulOp Factor . MulFacStar
    (48) MulFacStar -> . MulOp Factor MulFacStar
    (49) MulFacStar -> .
    (100) MulOp -> . MULTIPLY
    (101) MulOp -> . DIVIDE
    (102) MulOp -> . DIV
    (103) MulOp -> . MOD
    (104) MulOp -> . AND
    (105) MulOp -> . SHL
    (106) MulOp -> . SHR

    PLUS            reduce using rule 49 (MulFacStar -> .)
    MINUS           reduce using rule 49 (MulFacStar -> .)
    OR              reduce using rule 49 (MulFacStar -> .)
    XOR             reduce using rule 49 (MulFacStar -> .)
    LANGLE          reduce using rule 49 (MulFacStar -> .)
    RANGLE          reduce using rule 49 (MulFacStar -> .)
    GEQ             reduce using rule 49 (MulFacStar -> .)
    LEQ             reduce using rule 49 (MulFacStar -> .)
    NOTEQUALS       reduce using rule 49 (MulFacStar -> .)
    EQUALS          reduce using rule 49 (MulFacStar -> .)
    OF              reduce using rule 49 (MulFacStar -> .)
    RPAREN          reduce using rule 49 (MulFacStar -> .)
    THEN            reduce using rule 49 (MulFacStar -> .)
    DO              reduce using rule 49 (MulFacStar -> .)
    BEGIN           reduce using rule 49 (MulFacStar -> .)
    CONSTANT        reduce using rule 49 (MulFacStar -> .)
    TYPE            reduce using rule 49 (MulFacStar -> .)
    VAR             reduce using rule 49 (MulFacStar -> .)
    ID              reduce using rule 49 (MulFacStar -> .)
    PROCEDURE       reduce using rule 49 (MulFacStar -> .)
    FUNCTION        reduce using rule 49 (MulFacStar -> .)
    CONSTRUCTOR     reduce using rule 49 (MulFacStar -> .)
    SEMICOLON       reduce using rule 49 (MulFacStar -> .)
    UNTIL           reduce using rule 49 (MulFacStar -> .)
    ELSE            reduce using rule 49 (MulFacStar -> .)
    END             reduce using rule 49 (MulFacStar -> .)
    COMMA           reduce using rule 49 (MulFacStar -> .)
    RSQUARE         reduce using rule 49 (MulFacStar -> .)
    MULTIPLY        shift and go to state 144
    DIVIDE          shift and go to state 141
    DIV             shift and go to state 145
    MOD             shift and go to state 147
    AND             shift and go to state 139
    SHL             shift and go to state 146
    SHR             shift and go to state 142

    MulFacStar                     shift and go to state 229
    MulOp                          shift and go to state 143

state 200

    (43) SimpleExpression -> MINUS Term AddTermStar .

    LANGLE          reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    RANGLE          reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    GEQ             reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    LEQ             reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    NOTEQUALS       reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    EQUALS          reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    RPAREN          reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    OF              reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    COMMA           reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    RSQUARE         reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    DO              reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    THEN            reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    SEMICOLON       reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    UNTIL           reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    ELSE            reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    END             reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    BEGIN           reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    CONSTANT        reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    TYPE            reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    VAR             reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    ID              reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    PROCEDURE       reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    FUNCTION        reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)
    CONSTRUCTOR     reduce using rule 43 (SimpleExpression -> MINUS Term AddTermStar .)


state 201

    (51) Factor -> Designator LPAREN ExprList . RPAREN

    RPAREN          shift and go to state 230


state 202

    (42) SimpleExpression -> PLUS Term AddTermStar .

    LANGLE          reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    RANGLE          reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    GEQ             reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    LEQ             reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    NOTEQUALS       reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    EQUALS          reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    RPAREN          reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    OF              reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    COMMA           reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    RSQUARE         reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    DO              reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    THEN            reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    SEMICOLON       reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    UNTIL           reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    ELSE            reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    END             reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    BEGIN           reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    CONSTANT        reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    TYPE            reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    VAR             reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    ID              reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    PROCEDURE       reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    FUNCTION        reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)
    CONSTRUCTOR     reduce using rule 42 (SimpleExpression -> PLUS Term AddTermStar .)


state 203

    (45) AddTermStar -> AddOp Term . AddTermStar
    (45) AddTermStar -> . AddOp Term AddTermStar
    (46) AddTermStar -> .
    (96) AddOp -> . PLUS
    (97) AddOp -> . MINUS
    (98) AddOp -> . OR
    (99) AddOp -> . XOR

    LANGLE          reduce using rule 46 (AddTermStar -> .)
    RANGLE          reduce using rule 46 (AddTermStar -> .)
    GEQ             reduce using rule 46 (AddTermStar -> .)
    LEQ             reduce using rule 46 (AddTermStar -> .)
    NOTEQUALS       reduce using rule 46 (AddTermStar -> .)
    EQUALS          reduce using rule 46 (AddTermStar -> .)
    OF              reduce using rule 46 (AddTermStar -> .)
    RPAREN          reduce using rule 46 (AddTermStar -> .)
    THEN            reduce using rule 46 (AddTermStar -> .)
    DO              reduce using rule 46 (AddTermStar -> .)
    BEGIN           reduce using rule 46 (AddTermStar -> .)
    CONSTANT        reduce using rule 46 (AddTermStar -> .)
    TYPE            reduce using rule 46 (AddTermStar -> .)
    VAR             reduce using rule 46 (AddTermStar -> .)
    ID              reduce using rule 46 (AddTermStar -> .)
    PROCEDURE       reduce using rule 46 (AddTermStar -> .)
    FUNCTION        reduce using rule 46 (AddTermStar -> .)
    CONSTRUCTOR     reduce using rule 46 (AddTermStar -> .)
    SEMICOLON       reduce using rule 46 (AddTermStar -> .)
    UNTIL           reduce using rule 46 (AddTermStar -> .)
    ELSE            reduce using rule 46 (AddTermStar -> .)
    END             reduce using rule 46 (AddTermStar -> .)
    COMMA           reduce using rule 46 (AddTermStar -> .)
    RSQUARE         reduce using rule 46 (AddTermStar -> .)
    PLUS            shift and go to state 155
    MINUS           shift and go to state 156
    OR              shift and go to state 154
    XOR             shift and go to state 152

    AddOp                          shift and go to state 151
    AddTermStar                    shift and go to state 231

state 204

    (40) RelSimpleStar -> RelOp SimpleExpression . RelSimpleStar
    (40) RelSimpleStar -> . RelOp SimpleExpression RelSimpleStar
    (41) RelSimpleStar -> .
    (90) RelOp -> . LANGLE
    (91) RelOp -> . RANGLE
    (92) RelOp -> . GEQ
    (93) RelOp -> . LEQ
    (94) RelOp -> . NOTEQUALS
    (95) RelOp -> . EQUALS

    OF              reduce using rule 41 (RelSimpleStar -> .)
    RPAREN          reduce using rule 41 (RelSimpleStar -> .)
    THEN            reduce using rule 41 (RelSimpleStar -> .)
    DO              reduce using rule 41 (RelSimpleStar -> .)
    SEMICOLON       reduce using rule 41 (RelSimpleStar -> .)
    UNTIL           reduce using rule 41 (RelSimpleStar -> .)
    ELSE            reduce using rule 41 (RelSimpleStar -> .)
    END             reduce using rule 41 (RelSimpleStar -> .)
    COMMA           reduce using rule 41 (RelSimpleStar -> .)
    RSQUARE         reduce using rule 41 (RelSimpleStar -> .)
    LANGLE          shift and go to state 159
    RANGLE          shift and go to state 164
    GEQ             shift and go to state 158
    LEQ             shift and go to state 162
    NOTEQUALS       shift and go to state 157
    EQUALS          shift and go to state 161

    RelOp                          shift and go to state 160
    RelSimpleStar                  shift and go to state 232

state 205

    (34) CaseLabel -> NUMBER .

    COLON           reduce using rule 34 (CaseLabel -> NUMBER .)


state 206

    (29) CaseStmt -> CASE Expression OF CaseSelector . ColonCaseSelector END
    (30) CaseStmt -> CASE Expression OF CaseSelector . ColonCaseSelector ELSE Statement SEMICOLON END
    (31) ColonCaseSelector -> . ColonCaseSelector SEMICOLON CaseSelector
    (32) ColonCaseSelector -> .

    END             reduce using rule 32 (ColonCaseSelector -> .)
    ELSE            reduce using rule 32 (ColonCaseSelector -> .)
    SEMICOLON       reduce using rule 32 (ColonCaseSelector -> .)

    ColonCaseSelector              shift and go to state 233

state 207

    (33) CaseSelector -> CaseLabel . COLON Statement

    COLON           shift and go to state 234


state 208

    (18) SimpleStatement -> Designator LPAREN ExprList RPAREN .

    SEMICOLON       reduce using rule 18 (SimpleStatement -> Designator LPAREN ExprList RPAREN .)
    END             reduce using rule 18 (SimpleStatement -> Designator LPAREN ExprList RPAREN .)
    ELSE            reduce using rule 18 (SimpleStatement -> Designator LPAREN ExprList RPAREN .)
    UNTIL           reduce using rule 18 (SimpleStatement -> Designator LPAREN ExprList RPAREN .)


state 209

    (109) ExprList -> Expression CommaExpression .
    (107) CommaExpression -> CommaExpression . COMMA Expression

    RPAREN          reduce using rule 109 (ExprList -> Expression CommaExpression .)
    RSQUARE         reduce using rule 109 (ExprList -> Expression CommaExpression .)
    COMMA           shift and go to state 235


state 210

    (115) DesignatorSubElem -> POWER SEMICOLON .

    DOT             reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    LSQUARE         reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    POWER           reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    LPAREN          reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    ASSIGNTO        reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    SEMICOLON       reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    ID              reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    MULTIPLY        reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    DIVIDE          reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    DIV             reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    MOD             reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    AND             reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    SHL             reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    SHR             reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    PLUS            reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    MINUS           reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    OR              reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    XOR             reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    LANGLE          reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    RANGLE          reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    GEQ             reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    LEQ             reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    NOTEQUALS       reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    EQUALS          reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    OF              reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    RPAREN          reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    THEN            reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    DO              reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    UNTIL           reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    BEGIN           reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    CONSTANT        reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    TYPE            reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    VAR             reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    PROCEDURE       reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    FUNCTION        reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    CONSTRUCTOR     reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    ELSE            reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    END             reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    COMMA           reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)
    RSQUARE         reduce using rule 115 (DesignatorSubElem -> POWER SEMICOLON .)


state 211

    (114) DesignatorSubElem -> LSQUARE ExprList . RSQUARE

    RSQUARE         shift and go to state 236


state 212

    (113) DesignatorSubElem -> DOT ID .

    DOT             reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    LSQUARE         reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    POWER           reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    LPAREN          reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    ASSIGNTO        reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    SEMICOLON       reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    ID              reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    MULTIPLY        reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    DIVIDE          reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    DIV             reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    MOD             reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    AND             reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    SHL             reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    SHR             reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    PLUS            reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    MINUS           reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    OR              reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    XOR             reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    LANGLE          reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    RANGLE          reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    GEQ             reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    LEQ             reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    NOTEQUALS       reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    EQUALS          reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    OF              reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    RPAREN          reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    THEN            reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    DO              reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    UNTIL           reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    BEGIN           reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    CONSTANT        reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    TYPE            reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    VAR             reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    PROCEDURE       reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    FUNCTION        reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    CONSTRUCTOR     reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    ELSE            reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    END             reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    COMMA           reduce using rule 113 (DesignatorSubElem -> DOT ID .)
    RSQUARE         reduce using rule 113 (DesignatorSubElem -> DOT ID .)


state 213

    (27) IfStmt -> IF Expression THEN Statement .
    (28) IfStmt -> IF Expression THEN Statement . ELSE Statement

    SEMICOLON       reduce using rule 27 (IfStmt -> IF Expression THEN Statement .)
    ELSE            shift and go to state 237


state 214

    (38) WhileStmt -> WHILE Expression DO Statement . SEMICOLON

    SEMICOLON       shift and go to state 238


state 215

    (37) RepeatStmt -> REPEAT Statement UNTIL Expression . SEMICOLON

    SEMICOLON       shift and go to state 239


state 216

    (124) Array -> ARRAY LSQUARE ONE . DOTDOT OrdinalType RSQUARE OF TypeArray

    DOTDOT          shift and go to state 240


state 217

    (158) ObjectHeritage -> LPAREN . IdentList RPAREN
    (131) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (132) IdentList -> . ID CommaIDTypeArgs

    ID              shift and go to state 63

    IdentList                      shift and go to state 241

state 218

    (157) ObjectType -> OBJECT ObjectHeritage . ObjectBody END
    (160) ObjectBody -> . ObjectBody ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList
    (161) ObjectBody -> .

    END             reduce using rule 161 (ObjectBody -> .)
    PUBLIC          reduce using rule 161 (ObjectBody -> .)
    VAR             reduce using rule 161 (ObjectBody -> .)
    ID              reduce using rule 161 (ObjectBody -> .)
    TYPE            reduce using rule 161 (ObjectBody -> .)
    CONSTANT        reduce using rule 161 (ObjectBody -> .)
    PROCEDURE       reduce using rule 161 (ObjectBody -> .)
    FUNCTION        reduce using rule 161 (ObjectBody -> .)

    ObjectBody                     shift and go to state 242

state 219

    (175) ClassHeritage -> LPAREN . IdentList RPAREN
    (131) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (132) IdentList -> . ID CommaIDTypeArgs

    ID              shift and go to state 63

    IdentList                      shift and go to state 243

state 220

    (174) ClassType -> CLASS ClassHeritage . ClassBody END
    (177) ClassBody -> . ClassBody ClassVis ClassTypeSection ClassConstSection ClassVarSection ClassMethodList
    (178) ClassBody -> .

    END             reduce using rule 178 (ClassBody -> .)
    PUBLIC          reduce using rule 178 (ClassBody -> .)
    TYPE            reduce using rule 178 (ClassBody -> .)
    CONSTANT        reduce using rule 178 (ClassBody -> .)
    VAR             reduce using rule 178 (ClassBody -> .)
    ID              reduce using rule 178 (ClassBody -> .)
    PROCEDURE       reduce using rule 178 (ClassBody -> .)
    FUNCTION        reduce using rule 178 (ClassBody -> .)

    ClassBody                      shift and go to state 244

state 221

    (86) TypeDecl -> ID EQUALS TYPE Type .

    SEMICOLON       reduce using rule 86 (TypeDecl -> ID EQUALS TYPE Type .)


state 222

    (87) TypeDecl -> ID EQUALS TYPE RestrictedType .

    SEMICOLON       reduce using rule 87 (TypeDecl -> ID EQUALS TYPE RestrictedType .)


state 223

    (148) FuncHeading -> FUNCTION ID LPAREN FormalParams RPAREN .

    SEMICOLON       reduce using rule 148 (FuncHeading -> FUNCTION ID LPAREN FormalParams RPAREN .)


state 224

    (120) ConstDecl -> ID EQUALS ConstExpr .

    SEMICOLON       reduce using rule 120 (ConstDecl -> ID EQUALS ConstExpr .)


state 225

    (121) ConstDecl -> ID COLON TypeID . EQUALS TypedConst

    EQUALS          shift and go to state 245


state 226

    (133) CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID TypeArgs .

    COMMA           reduce using rule 133 (CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID TypeArgs .)
    COLON           reduce using rule 133 (CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID TypeArgs .)
    SEMICOLON       reduce using rule 133 (CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID TypeArgs .)
    RPAREN          reduce using rule 133 (CommaIDTypeArgs -> CommaIDTypeArgs COMMA ID TypeArgs .)


state 227

    (58) Factor -> TypeID LPAREN Expression RPAREN .

    MULTIPLY        reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    DIV             reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    MOD             reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    AND             reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    SHL             reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    SHR             reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    PLUS            reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    MINUS           reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    OR              reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    XOR             reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    LANGLE          reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    RANGLE          reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    GEQ             reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    LEQ             reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    NOTEQUALS       reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    EQUALS          reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    UNTIL           reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    ELSE            reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    END             reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    OF              reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    THEN            reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    DO              reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    BEGIN           reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    CONSTANT        reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    TYPE            reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    VAR             reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    ID              reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    PROCEDURE       reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    FUNCTION        reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    CONSTRUCTOR     reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    COMMA           reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)
    RSQUARE         reduce using rule 58 (Factor -> TypeID LPAREN Expression RPAREN .)


state 228

    (156) LambFunc -> ID LPAREN ConstExpr . RPAREN

    RPAREN          shift and go to state 246


state 229

    (48) MulFacStar -> MulOp Factor MulFacStar .

    PLUS            reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    MINUS           reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    OR              reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    XOR             reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    LANGLE          reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    RANGLE          reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    GEQ             reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    LEQ             reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    NOTEQUALS       reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    EQUALS          reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    OF              reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    RPAREN          reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    THEN            reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    DO              reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    BEGIN           reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    CONSTANT        reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    TYPE            reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    VAR             reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    ID              reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    PROCEDURE       reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    FUNCTION        reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    CONSTRUCTOR     reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    SEMICOLON       reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    UNTIL           reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    ELSE            reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    END             reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    COMMA           reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)
    RSQUARE         reduce using rule 48 (MulFacStar -> MulOp Factor MulFacStar .)


state 230

    (51) Factor -> Designator LPAREN ExprList RPAREN .

    MULTIPLY        reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    DIVIDE          reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    DIV             reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    MOD             reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    AND             reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    SHL             reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    SHR             reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    PLUS            reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    MINUS           reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    OR              reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    XOR             reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    LANGLE          reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    RANGLE          reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    GEQ             reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    LEQ             reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    NOTEQUALS       reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    EQUALS          reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    RPAREN          reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    SEMICOLON       reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    UNTIL           reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    ELSE            reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    END             reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    OF              reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    THEN            reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    DO              reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    BEGIN           reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    CONSTANT        reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    TYPE            reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    VAR             reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    ID              reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    PROCEDURE       reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    FUNCTION        reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    CONSTRUCTOR     reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    COMMA           reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)
    RSQUARE         reduce using rule 51 (Factor -> Designator LPAREN ExprList RPAREN .)


state 231

    (45) AddTermStar -> AddOp Term AddTermStar .

    LANGLE          reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    RANGLE          reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    GEQ             reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    LEQ             reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    NOTEQUALS       reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    EQUALS          reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    OF              reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    RPAREN          reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    THEN            reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    DO              reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    BEGIN           reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    CONSTANT        reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    TYPE            reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    VAR             reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    ID              reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    PROCEDURE       reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    FUNCTION        reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    CONSTRUCTOR     reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    SEMICOLON       reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    UNTIL           reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    ELSE            reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    END             reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    COMMA           reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)
    RSQUARE         reduce using rule 45 (AddTermStar -> AddOp Term AddTermStar .)


state 232

    (40) RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .

    OF              reduce using rule 40 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    RPAREN          reduce using rule 40 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    THEN            reduce using rule 40 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    DO              reduce using rule 40 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    SEMICOLON       reduce using rule 40 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    UNTIL           reduce using rule 40 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    ELSE            reduce using rule 40 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    END             reduce using rule 40 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    COMMA           reduce using rule 40 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)
    RSQUARE         reduce using rule 40 (RelSimpleStar -> RelOp SimpleExpression RelSimpleStar .)


state 233

    (29) CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector . END
    (30) CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector . ELSE Statement SEMICOLON END
    (31) ColonCaseSelector -> ColonCaseSelector . SEMICOLON CaseSelector

    END             shift and go to state 247
    ELSE            shift and go to state 249
    SEMICOLON       shift and go to state 248


state 234

    (33) CaseSelector -> CaseLabel COLON . Statement
    (14) Statement -> . SimpleStatement
    (15) Statement -> . StructStmt
    (16) Statement -> .
    (17) SimpleStatement -> . Designator
    (18) SimpleStatement -> . Designator LPAREN ExprList RPAREN
    (19) SimpleStatement -> . Designator ASSIGNTO Expression
    (20) SimpleStatement -> . INHERITED
    (21) SimpleStatement -> . LPAREN Expression RPAREN
    (22) StructStmt -> . CompoundStmt
    (23) StructStmt -> . ConditionalStmt
    (24) StructStmt -> . LoopStmt
    (110) Designator -> . ID DesSubEleStar
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (25) ConditionalStmt -> . IfStmt SEMICOLON
    (26) ConditionalStmt -> . CaseStmt SEMICOLON
    (35) LoopStmt -> . RepeatStmt
    (36) LoopStmt -> . WhileStmt
    (27) IfStmt -> . IF Expression THEN Statement
    (28) IfStmt -> . IF Expression THEN Statement ELSE Statement
    (29) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector END
    (30) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END
    (37) RepeatStmt -> . REPEAT Statement UNTIL Expression SEMICOLON
    (38) WhileStmt -> . WHILE Expression DO Statement SEMICOLON

    END             reduce using rule 16 (Statement -> .)
    ELSE            reduce using rule 16 (Statement -> .)
    SEMICOLON       reduce using rule 16 (Statement -> .)
    INHERITED       shift and go to state 45
    LPAREN          shift and go to state 44
    ID              shift and go to state 46
    BEGIN           shift and go to state 7
    IF              shift and go to state 47
    CASE            shift and go to state 38
    REPEAT          shift and go to state 49
    WHILE           shift and go to state 48

    WhileStmt                      shift and go to state 43
    ConditionalStmt                shift and go to state 42
    Designator                     shift and go to state 39
    IfStmt                         shift and go to state 37
    SimpleStatement                shift and go to state 35
    CompoundStmt                   shift and go to state 52
    LoopStmt                       shift and go to state 40
    Statement                      shift and go to state 250
    StructStmt                     shift and go to state 50
    RepeatStmt                     shift and go to state 51
    CaseStmt                       shift and go to state 41

state 235

    (107) CommaExpression -> CommaExpression COMMA . Expression
    (39) Expression -> . SimpleExpression RelSimpleStar
    (42) SimpleExpression -> . PLUS Term AddTermStar
    (43) SimpleExpression -> . MINUS Term AddTermStar
    (44) SimpleExpression -> . Term AddTermStar
    (47) Term -> . Factor MulFacStar
    (50) Factor -> . Designator
    (51) Factor -> . Designator LPAREN ExprList RPAREN
    (52) Factor -> . USERSTRING
    (53) Factor -> . NUMBER
    (54) Factor -> . LPAREN Expression RPAREN
    (55) Factor -> . NOT Factor
    (56) Factor -> . INHERITED Designator
    (57) Factor -> . INHERITED
    (58) Factor -> . TypeID LPAREN Expression RPAREN
    (59) Factor -> . LPAREN LambFunc RPAREN
    (110) Designator -> . ID DesSubEleStar
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR

    PLUS            shift and go to state 83
    MINUS           shift and go to state 81
    USERSTRING      shift and go to state 84
    NUMBER          shift and go to state 78
    LPAREN          shift and go to state 77
    NOT             shift and go to state 90
    INHERITED       shift and go to state 88
    ID              shift and go to state 46
    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79

    TypeID                         shift and go to state 76
    Term                           shift and go to state 86
    Designator                     shift and go to state 82
    SimpleExpression               shift and go to state 87
    Factor                         shift and go to state 80
    Expression                     shift and go to state 251

state 236

    (114) DesignatorSubElem -> LSQUARE ExprList RSQUARE .

    DOT             reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    LSQUARE         reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    POWER           reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    LPAREN          reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    ASSIGNTO        reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    SEMICOLON       reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    ID              reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    MULTIPLY        reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    DIVIDE          reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    DIV             reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    MOD             reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    AND             reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    SHL             reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    SHR             reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    PLUS            reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    MINUS           reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    OR              reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    XOR             reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    LANGLE          reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    RANGLE          reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    GEQ             reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    LEQ             reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    NOTEQUALS       reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    EQUALS          reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    OF              reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    RPAREN          reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    THEN            reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    DO              reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    UNTIL           reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    BEGIN           reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    CONSTANT        reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    TYPE            reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    VAR             reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    PROCEDURE       reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    FUNCTION        reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    CONSTRUCTOR     reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    ELSE            reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    END             reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    COMMA           reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)
    RSQUARE         reduce using rule 114 (DesignatorSubElem -> LSQUARE ExprList RSQUARE .)


state 237

    (28) IfStmt -> IF Expression THEN Statement ELSE . Statement
    (14) Statement -> . SimpleStatement
    (15) Statement -> . StructStmt
    (16) Statement -> .
    (17) SimpleStatement -> . Designator
    (18) SimpleStatement -> . Designator LPAREN ExprList RPAREN
    (19) SimpleStatement -> . Designator ASSIGNTO Expression
    (20) SimpleStatement -> . INHERITED
    (21) SimpleStatement -> . LPAREN Expression RPAREN
    (22) StructStmt -> . CompoundStmt
    (23) StructStmt -> . ConditionalStmt
    (24) StructStmt -> . LoopStmt
    (110) Designator -> . ID DesSubEleStar
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (25) ConditionalStmt -> . IfStmt SEMICOLON
    (26) ConditionalStmt -> . CaseStmt SEMICOLON
    (35) LoopStmt -> . RepeatStmt
    (36) LoopStmt -> . WhileStmt
    (27) IfStmt -> . IF Expression THEN Statement
    (28) IfStmt -> . IF Expression THEN Statement ELSE Statement
    (29) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector END
    (30) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END
    (37) RepeatStmt -> . REPEAT Statement UNTIL Expression SEMICOLON
    (38) WhileStmt -> . WHILE Expression DO Statement SEMICOLON

    SEMICOLON       reduce using rule 16 (Statement -> .)
    INHERITED       shift and go to state 45
    LPAREN          shift and go to state 44
    ID              shift and go to state 46
    BEGIN           shift and go to state 7
    IF              shift and go to state 47
    CASE            shift and go to state 38
    REPEAT          shift and go to state 49
    WHILE           shift and go to state 48

    WhileStmt                      shift and go to state 43
    ConditionalStmt                shift and go to state 42
    Designator                     shift and go to state 39
    IfStmt                         shift and go to state 37
    SimpleStatement                shift and go to state 35
    CompoundStmt                   shift and go to state 52
    LoopStmt                       shift and go to state 40
    Statement                      shift and go to state 252
    StructStmt                     shift and go to state 50
    RepeatStmt                     shift and go to state 51
    CaseStmt                       shift and go to state 41

state 238

    (38) WhileStmt -> WHILE Expression DO Statement SEMICOLON .

    ELSE            reduce using rule 38 (WhileStmt -> WHILE Expression DO Statement SEMICOLON .)
    SEMICOLON       reduce using rule 38 (WhileStmt -> WHILE Expression DO Statement SEMICOLON .)
    UNTIL           reduce using rule 38 (WhileStmt -> WHILE Expression DO Statement SEMICOLON .)
    END             reduce using rule 38 (WhileStmt -> WHILE Expression DO Statement SEMICOLON .)


state 239

    (37) RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .

    SEMICOLON       reduce using rule 37 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    ELSE            reduce using rule 37 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    UNTIL           reduce using rule 37 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)
    END             reduce using rule 37 (RepeatStmt -> REPEAT Statement UNTIL Expression SEMICOLON .)


state 240

    (124) Array -> ARRAY LSQUARE ONE DOTDOT . OrdinalType RSQUARE OF TypeArray
    (78) OrdinalType -> . INTEGER

    INTEGER         shift and go to state 254

    OrdinalType                    shift and go to state 253

state 241

    (158) ObjectHeritage -> LPAREN IdentList . RPAREN

    RPAREN          shift and go to state 255


state 242

    (157) ObjectType -> OBJECT ObjectHeritage ObjectBody . END
    (160) ObjectBody -> ObjectBody . ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList
    (162) ObjectVis -> . PUBLIC
    (163) ObjectVis -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
    END             shift and go to state 256
    PUBLIC          shift and go to state 258
    VAR             reduce using rule 163 (ObjectVis -> .)
    ID              reduce using rule 163 (ObjectVis -> .)
    TYPE            reduce using rule 163 (ObjectVis -> .)
    CONSTANT        reduce using rule 163 (ObjectVis -> .)
    PROCEDURE       reduce using rule 163 (ObjectVis -> .)
    FUNCTION        reduce using rule 163 (ObjectVis -> .)

  ! END             [ reduce using rule 163 (ObjectVis -> .) ]
  ! PUBLIC          [ reduce using rule 163 (ObjectVis -> .) ]

    ObjectVis                      shift and go to state 257

state 243

    (175) ClassHeritage -> LPAREN IdentList . RPAREN

    RPAREN          shift and go to state 259


state 244

    (174) ClassType -> CLASS ClassHeritage ClassBody . END
    (177) ClassBody -> ClassBody . ClassVis ClassTypeSection ClassConstSection ClassVarSection ClassMethodList
    (179) ClassVis -> . PUBLIC
    (180) ClassVis -> .

  ! shift/reduce conflict for END resolved as shift
  ! shift/reduce conflict for PUBLIC resolved as shift
    END             shift and go to state 261
    PUBLIC          shift and go to state 262
    TYPE            reduce using rule 180 (ClassVis -> .)
    CONSTANT        reduce using rule 180 (ClassVis -> .)
    VAR             reduce using rule 180 (ClassVis -> .)
    ID              reduce using rule 180 (ClassVis -> .)
    PROCEDURE       reduce using rule 180 (ClassVis -> .)
    FUNCTION        reduce using rule 180 (ClassVis -> .)

  ! END             [ reduce using rule 180 (ClassVis -> .) ]
  ! PUBLIC          [ reduce using rule 180 (ClassVis -> .) ]

    ClassVis                       shift and go to state 260

state 245

    (121) ConstDecl -> ID COLON TypeID EQUALS . TypedConst
    (122) TypedConst -> . ConstExpr
    (123) TypedConst -> . ArrayConst
    (130) ConstExpr -> .
    (127) ArrayConst -> . LPAREN TypedConst CommaTypedConst RPAREN

    SEMICOLON       reduce using rule 130 (ConstExpr -> .)
    LPAREN          shift and go to state 265

    ConstExpr                      shift and go to state 264
    ArrayConst                     shift and go to state 266
    TypedConst                     shift and go to state 263

state 246

    (156) LambFunc -> ID LPAREN ConstExpr RPAREN .

    RPAREN          reduce using rule 156 (LambFunc -> ID LPAREN ConstExpr RPAREN .)


state 247

    (29) CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .

    SEMICOLON       reduce using rule 29 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector END .)


state 248

    (31) ColonCaseSelector -> ColonCaseSelector SEMICOLON . CaseSelector
    (33) CaseSelector -> . CaseLabel COLON Statement
    (34) CaseLabel -> . NUMBER

    NUMBER          shift and go to state 205

    CaseLabel                      shift and go to state 207
    CaseSelector                   shift and go to state 267

state 249

    (30) CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE . Statement SEMICOLON END
    (14) Statement -> . SimpleStatement
    (15) Statement -> . StructStmt
    (16) Statement -> .
    (17) SimpleStatement -> . Designator
    (18) SimpleStatement -> . Designator LPAREN ExprList RPAREN
    (19) SimpleStatement -> . Designator ASSIGNTO Expression
    (20) SimpleStatement -> . INHERITED
    (21) SimpleStatement -> . LPAREN Expression RPAREN
    (22) StructStmt -> . CompoundStmt
    (23) StructStmt -> . ConditionalStmt
    (24) StructStmt -> . LoopStmt
    (110) Designator -> . ID DesSubEleStar
    (11) CompoundStmt -> . BEGIN StmtList END SEMICOLON
    (25) ConditionalStmt -> . IfStmt SEMICOLON
    (26) ConditionalStmt -> . CaseStmt SEMICOLON
    (35) LoopStmt -> . RepeatStmt
    (36) LoopStmt -> . WhileStmt
    (27) IfStmt -> . IF Expression THEN Statement
    (28) IfStmt -> . IF Expression THEN Statement ELSE Statement
    (29) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector END
    (30) CaseStmt -> . CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END
    (37) RepeatStmt -> . REPEAT Statement UNTIL Expression SEMICOLON
    (38) WhileStmt -> . WHILE Expression DO Statement SEMICOLON

    SEMICOLON       reduce using rule 16 (Statement -> .)
    INHERITED       shift and go to state 45
    LPAREN          shift and go to state 44
    ID              shift and go to state 46
    BEGIN           shift and go to state 7
    IF              shift and go to state 47
    CASE            shift and go to state 38
    REPEAT          shift and go to state 49
    WHILE           shift and go to state 48

    WhileStmt                      shift and go to state 43
    CompoundStmt                   shift and go to state 52
    Designator                     shift and go to state 39
    IfStmt                         shift and go to state 37
    SimpleStatement                shift and go to state 35
    LoopStmt                       shift and go to state 40
    Statement                      shift and go to state 268
    StructStmt                     shift and go to state 50
    RepeatStmt                     shift and go to state 51
    CaseStmt                       shift and go to state 41
    ConditionalStmt                shift and go to state 42

state 250

    (33) CaseSelector -> CaseLabel COLON Statement .

    END             reduce using rule 33 (CaseSelector -> CaseLabel COLON Statement .)
    ELSE            reduce using rule 33 (CaseSelector -> CaseLabel COLON Statement .)
    SEMICOLON       reduce using rule 33 (CaseSelector -> CaseLabel COLON Statement .)


state 251

    (107) CommaExpression -> CommaExpression COMMA Expression .

    COMMA           reduce using rule 107 (CommaExpression -> CommaExpression COMMA Expression .)
    RPAREN          reduce using rule 107 (CommaExpression -> CommaExpression COMMA Expression .)
    RSQUARE         reduce using rule 107 (CommaExpression -> CommaExpression COMMA Expression .)


state 252

    (28) IfStmt -> IF Expression THEN Statement ELSE Statement .

    SEMICOLON       reduce using rule 28 (IfStmt -> IF Expression THEN Statement ELSE Statement .)


state 253

    (124) Array -> ARRAY LSQUARE ONE DOTDOT OrdinalType . RSQUARE OF TypeArray

    RSQUARE         shift and go to state 269


state 254

    (78) OrdinalType -> INTEGER .

    RSQUARE         reduce using rule 78 (OrdinalType -> INTEGER .)


state 255

    (158) ObjectHeritage -> LPAREN IdentList RPAREN .

    END             reduce using rule 158 (ObjectHeritage -> LPAREN IdentList RPAREN .)
    PUBLIC          reduce using rule 158 (ObjectHeritage -> LPAREN IdentList RPAREN .)
    VAR             reduce using rule 158 (ObjectHeritage -> LPAREN IdentList RPAREN .)
    ID              reduce using rule 158 (ObjectHeritage -> LPAREN IdentList RPAREN .)
    TYPE            reduce using rule 158 (ObjectHeritage -> LPAREN IdentList RPAREN .)
    CONSTANT        reduce using rule 158 (ObjectHeritage -> LPAREN IdentList RPAREN .)
    PROCEDURE       reduce using rule 158 (ObjectHeritage -> LPAREN IdentList RPAREN .)
    FUNCTION        reduce using rule 158 (ObjectHeritage -> LPAREN IdentList RPAREN .)


state 256

    (157) ObjectType -> OBJECT ObjectHeritage ObjectBody END .

    SEMICOLON       reduce using rule 157 (ObjectType -> OBJECT ObjectHeritage ObjectBody END .)


state 257

    (160) ObjectBody -> ObjectBody ObjectVis . ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList
    (164) ObjectVarSection -> . VarSection
    (165) ObjectVarSection -> .
    (136) VarSection -> . VAR ColonVarDecl
    (137) VarSection -> . ColonVarDecl
    (138) ColonVarDecl -> . VarDecl SEMICOLON ColonVarDecl
    (139) ColonVarDecl -> .
    (140) VarDecl -> . IdentList COLON Type
    (131) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (132) IdentList -> . ID CommaIDTypeArgs

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for TYPE resolved using rule 139 (ColonVarDecl -> .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 139 (ColonVarDecl -> .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 139 (ColonVarDecl -> .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 139 (ColonVarDecl -> .)
  ! reduce/reduce conflict for ID resolved using rule 139 (ColonVarDecl -> .)
  ! reduce/reduce conflict for END resolved using rule 139 (ColonVarDecl -> .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 139 (ColonVarDecl -> .)
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    VAR             shift and go to state 26
    TYPE            reduce using rule 139 (ColonVarDecl -> .)
    CONSTANT        reduce using rule 139 (ColonVarDecl -> .)
    PROCEDURE       reduce using rule 139 (ColonVarDecl -> .)
    FUNCTION        reduce using rule 139 (ColonVarDecl -> .)
    END             reduce using rule 139 (ColonVarDecl -> .)
    PUBLIC          reduce using rule 139 (ColonVarDecl -> .)
    ID              shift and go to state 63

  ! TYPE            [ reduce using rule 165 (ObjectVarSection -> .) ]
  ! CONSTANT        [ reduce using rule 165 (ObjectVarSection -> .) ]
  ! PROCEDURE       [ reduce using rule 165 (ObjectVarSection -> .) ]
  ! FUNCTION        [ reduce using rule 165 (ObjectVarSection -> .) ]
  ! ID              [ reduce using rule 165 (ObjectVarSection -> .) ]
  ! END             [ reduce using rule 165 (ObjectVarSection -> .) ]
  ! PUBLIC          [ reduce using rule 165 (ObjectVarSection -> .) ]
  ! VAR             [ reduce using rule 165 (ObjectVarSection -> .) ]
  ! ID              [ reduce using rule 139 (ColonVarDecl -> .) ]
  ! VAR             [ reduce using rule 139 (ColonVarDecl -> .) ]

    ColonVarDecl                   shift and go to state 16
    IdentList                      shift and go to state 10
    VarDecl                        shift and go to state 30
    ObjectVarSection               shift and go to state 270
    VarSection                     shift and go to state 271

state 258

    (162) ObjectVis -> PUBLIC .

    VAR             reduce using rule 162 (ObjectVis -> PUBLIC .)
    ID              reduce using rule 162 (ObjectVis -> PUBLIC .)
    TYPE            reduce using rule 162 (ObjectVis -> PUBLIC .)
    CONSTANT        reduce using rule 162 (ObjectVis -> PUBLIC .)
    PROCEDURE       reduce using rule 162 (ObjectVis -> PUBLIC .)
    FUNCTION        reduce using rule 162 (ObjectVis -> PUBLIC .)
    END             reduce using rule 162 (ObjectVis -> PUBLIC .)
    PUBLIC          reduce using rule 162 (ObjectVis -> PUBLIC .)


state 259

    (175) ClassHeritage -> LPAREN IdentList RPAREN .

    END             reduce using rule 175 (ClassHeritage -> LPAREN IdentList RPAREN .)
    PUBLIC          reduce using rule 175 (ClassHeritage -> LPAREN IdentList RPAREN .)
    TYPE            reduce using rule 175 (ClassHeritage -> LPAREN IdentList RPAREN .)
    CONSTANT        reduce using rule 175 (ClassHeritage -> LPAREN IdentList RPAREN .)
    VAR             reduce using rule 175 (ClassHeritage -> LPAREN IdentList RPAREN .)
    ID              reduce using rule 175 (ClassHeritage -> LPAREN IdentList RPAREN .)
    PROCEDURE       reduce using rule 175 (ClassHeritage -> LPAREN IdentList RPAREN .)
    FUNCTION        reduce using rule 175 (ClassHeritage -> LPAREN IdentList RPAREN .)


state 260

    (177) ClassBody -> ClassBody ClassVis . ClassTypeSection ClassConstSection ClassVarSection ClassMethodList
    (181) ClassTypeSection -> . TypeSection
    (182) ClassTypeSection -> .
    (80) TypeSection -> . TYPE ColonTypeDecl
    (81) TypeSection -> . ColonTypeDecl
    (82) ColonTypeDecl -> . ColonTypeDecl TypeDecl SEMICOLON
    (83) ColonTypeDecl -> .

  ! shift/reduce conflict for TYPE resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for VAR resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for END resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 83 (ColonTypeDecl -> .)
  ! shift/reduce conflict for TYPE resolved as shift
    TYPE            shift and go to state 32
    ID              reduce using rule 83 (ColonTypeDecl -> .)
    CONSTANT        reduce using rule 83 (ColonTypeDecl -> .)
    VAR             reduce using rule 83 (ColonTypeDecl -> .)
    PROCEDURE       reduce using rule 83 (ColonTypeDecl -> .)
    FUNCTION        reduce using rule 83 (ColonTypeDecl -> .)
    END             reduce using rule 83 (ColonTypeDecl -> .)
    PUBLIC          reduce using rule 83 (ColonTypeDecl -> .)

  ! CONSTANT        [ reduce using rule 182 (ClassTypeSection -> .) ]
  ! VAR             [ reduce using rule 182 (ClassTypeSection -> .) ]
  ! ID              [ reduce using rule 182 (ClassTypeSection -> .) ]
  ! PROCEDURE       [ reduce using rule 182 (ClassTypeSection -> .) ]
  ! FUNCTION        [ reduce using rule 182 (ClassTypeSection -> .) ]
  ! END             [ reduce using rule 182 (ClassTypeSection -> .) ]
  ! PUBLIC          [ reduce using rule 182 (ClassTypeSection -> .) ]
  ! TYPE            [ reduce using rule 182 (ClassTypeSection -> .) ]
  ! TYPE            [ reduce using rule 83 (ColonTypeDecl -> .) ]

    TypeSection                    shift and go to state 272
    ColonTypeDecl                  shift and go to state 19
    ClassTypeSection               shift and go to state 273

state 261

    (174) ClassType -> CLASS ClassHeritage ClassBody END .

    SEMICOLON       reduce using rule 174 (ClassType -> CLASS ClassHeritage ClassBody END .)


state 262

    (179) ClassVis -> PUBLIC .

    TYPE            reduce using rule 179 (ClassVis -> PUBLIC .)
    CONSTANT        reduce using rule 179 (ClassVis -> PUBLIC .)
    VAR             reduce using rule 179 (ClassVis -> PUBLIC .)
    ID              reduce using rule 179 (ClassVis -> PUBLIC .)
    PROCEDURE       reduce using rule 179 (ClassVis -> PUBLIC .)
    FUNCTION        reduce using rule 179 (ClassVis -> PUBLIC .)
    END             reduce using rule 179 (ClassVis -> PUBLIC .)
    PUBLIC          reduce using rule 179 (ClassVis -> PUBLIC .)


state 263

    (121) ConstDecl -> ID COLON TypeID EQUALS TypedConst .

    SEMICOLON       reduce using rule 121 (ConstDecl -> ID COLON TypeID EQUALS TypedConst .)


state 264

    (122) TypedConst -> ConstExpr .

    RPAREN          reduce using rule 122 (TypedConst -> ConstExpr .)
    COMMA           reduce using rule 122 (TypedConst -> ConstExpr .)
    SEMICOLON       reduce using rule 122 (TypedConst -> ConstExpr .)


state 265

    (127) ArrayConst -> LPAREN . TypedConst CommaTypedConst RPAREN
    (122) TypedConst -> . ConstExpr
    (123) TypedConst -> . ArrayConst
    (130) ConstExpr -> .
    (127) ArrayConst -> . LPAREN TypedConst CommaTypedConst RPAREN

    RPAREN          reduce using rule 130 (ConstExpr -> .)
    COMMA           reduce using rule 130 (ConstExpr -> .)
    LPAREN          shift and go to state 265

    ConstExpr                      shift and go to state 264
    ArrayConst                     shift and go to state 266
    TypedConst                     shift and go to state 274

state 266

    (123) TypedConst -> ArrayConst .

    RPAREN          reduce using rule 123 (TypedConst -> ArrayConst .)
    COMMA           reduce using rule 123 (TypedConst -> ArrayConst .)
    SEMICOLON       reduce using rule 123 (TypedConst -> ArrayConst .)


state 267

    (31) ColonCaseSelector -> ColonCaseSelector SEMICOLON CaseSelector .

    END             reduce using rule 31 (ColonCaseSelector -> ColonCaseSelector SEMICOLON CaseSelector .)
    ELSE            reduce using rule 31 (ColonCaseSelector -> ColonCaseSelector SEMICOLON CaseSelector .)
    SEMICOLON       reduce using rule 31 (ColonCaseSelector -> ColonCaseSelector SEMICOLON CaseSelector .)


state 268

    (30) CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement . SEMICOLON END

    SEMICOLON       shift and go to state 275


state 269

    (124) Array -> ARRAY LSQUARE ONE DOTDOT OrdinalType RSQUARE . OF TypeArray

    OF              shift and go to state 276


state 270

    (160) ObjectBody -> ObjectBody ObjectVis ObjectVarSection . ObjectTypeSection ObjectConstSection ObjectMethodList
    (166) ObjectTypeSection -> . TypeSection
    (167) ObjectTypeSection -> .
    (80) TypeSection -> . TYPE ColonTypeDecl
    (81) TypeSection -> . ColonTypeDecl
    (82) ColonTypeDecl -> . ColonTypeDecl TypeDecl SEMICOLON
    (83) ColonTypeDecl -> .

  ! shift/reduce conflict for TYPE resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for END resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 83 (ColonTypeDecl -> .)
  ! reduce/reduce conflict for VAR resolved using rule 83 (ColonTypeDecl -> .)
  ! shift/reduce conflict for TYPE resolved as shift
    TYPE            shift and go to state 32
    ID              reduce using rule 83 (ColonTypeDecl -> .)
    CONSTANT        reduce using rule 83 (ColonTypeDecl -> .)
    PROCEDURE       reduce using rule 83 (ColonTypeDecl -> .)
    FUNCTION        reduce using rule 83 (ColonTypeDecl -> .)
    END             reduce using rule 83 (ColonTypeDecl -> .)
    PUBLIC          reduce using rule 83 (ColonTypeDecl -> .)
    VAR             reduce using rule 83 (ColonTypeDecl -> .)

  ! CONSTANT        [ reduce using rule 167 (ObjectTypeSection -> .) ]
  ! PROCEDURE       [ reduce using rule 167 (ObjectTypeSection -> .) ]
  ! FUNCTION        [ reduce using rule 167 (ObjectTypeSection -> .) ]
  ! END             [ reduce using rule 167 (ObjectTypeSection -> .) ]
  ! PUBLIC          [ reduce using rule 167 (ObjectTypeSection -> .) ]
  ! VAR             [ reduce using rule 167 (ObjectTypeSection -> .) ]
  ! ID              [ reduce using rule 167 (ObjectTypeSection -> .) ]
  ! TYPE            [ reduce using rule 167 (ObjectTypeSection -> .) ]
  ! TYPE            [ reduce using rule 83 (ColonTypeDecl -> .) ]

    ObjectTypeSection              shift and go to state 277
    ColonTypeDecl                  shift and go to state 19
    TypeSection                    shift and go to state 278

state 271

    (164) ObjectVarSection -> VarSection .

    TYPE            reduce using rule 164 (ObjectVarSection -> VarSection .)
    CONSTANT        reduce using rule 164 (ObjectVarSection -> VarSection .)
    PROCEDURE       reduce using rule 164 (ObjectVarSection -> VarSection .)
    FUNCTION        reduce using rule 164 (ObjectVarSection -> VarSection .)
    ID              reduce using rule 164 (ObjectVarSection -> VarSection .)
    END             reduce using rule 164 (ObjectVarSection -> VarSection .)
    PUBLIC          reduce using rule 164 (ObjectVarSection -> VarSection .)
    VAR             reduce using rule 164 (ObjectVarSection -> VarSection .)


state 272

    (181) ClassTypeSection -> TypeSection .

    CONSTANT        reduce using rule 181 (ClassTypeSection -> TypeSection .)
    VAR             reduce using rule 181 (ClassTypeSection -> TypeSection .)
    ID              reduce using rule 181 (ClassTypeSection -> TypeSection .)
    PROCEDURE       reduce using rule 181 (ClassTypeSection -> TypeSection .)
    FUNCTION        reduce using rule 181 (ClassTypeSection -> TypeSection .)
    END             reduce using rule 181 (ClassTypeSection -> TypeSection .)
    PUBLIC          reduce using rule 181 (ClassTypeSection -> TypeSection .)
    TYPE            reduce using rule 181 (ClassTypeSection -> TypeSection .)


state 273

    (177) ClassBody -> ClassBody ClassVis ClassTypeSection . ClassConstSection ClassVarSection ClassMethodList
    (183) ClassConstSection -> . ConstSection
    (184) ClassConstSection -> .
    (116) ConstSection -> . CONSTANT ColonConstDecl
    (117) ConstSection -> .

  ! shift/reduce conflict for CONSTANT resolved as shift
  ! reduce/reduce conflict for VAR resolved using rule 117 (ConstSection -> .)
  ! reduce/reduce conflict for ID resolved using rule 117 (ConstSection -> .)
  ! reduce/reduce conflict for PROCEDURE resolved using rule 117 (ConstSection -> .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 117 (ConstSection -> .)
  ! reduce/reduce conflict for END resolved using rule 117 (ConstSection -> .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 117 (ConstSection -> .)
  ! reduce/reduce conflict for TYPE resolved using rule 117 (ConstSection -> .)
  ! shift/reduce conflict for CONSTANT resolved as shift
    CONSTANT        shift and go to state 25
    VAR             reduce using rule 117 (ConstSection -> .)
    ID              reduce using rule 117 (ConstSection -> .)
    PROCEDURE       reduce using rule 117 (ConstSection -> .)
    FUNCTION        reduce using rule 117 (ConstSection -> .)
    END             reduce using rule 117 (ConstSection -> .)
    PUBLIC          reduce using rule 117 (ConstSection -> .)
    TYPE            reduce using rule 117 (ConstSection -> .)

  ! VAR             [ reduce using rule 184 (ClassConstSection -> .) ]
  ! ID              [ reduce using rule 184 (ClassConstSection -> .) ]
  ! PROCEDURE       [ reduce using rule 184 (ClassConstSection -> .) ]
  ! FUNCTION        [ reduce using rule 184 (ClassConstSection -> .) ]
  ! END             [ reduce using rule 184 (ClassConstSection -> .) ]
  ! PUBLIC          [ reduce using rule 184 (ClassConstSection -> .) ]
  ! TYPE            [ reduce using rule 184 (ClassConstSection -> .) ]
  ! CONSTANT        [ reduce using rule 184 (ClassConstSection -> .) ]
  ! CONSTANT        [ reduce using rule 117 (ConstSection -> .) ]

    ClassConstSection              shift and go to state 279
    ConstSection                   shift and go to state 280

state 274

    (127) ArrayConst -> LPAREN TypedConst . CommaTypedConst RPAREN
    (128) CommaTypedConst -> . CommaTypedConst COMMA TypedConst
    (129) CommaTypedConst -> .

    RPAREN          reduce using rule 129 (CommaTypedConst -> .)
    COMMA           reduce using rule 129 (CommaTypedConst -> .)

    CommaTypedConst                shift and go to state 281

state 275

    (30) CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON . END

    END             shift and go to state 282


state 276

    (124) Array -> ARRAY LSQUARE ONE DOTDOT OrdinalType RSQUARE OF . TypeArray
    (125) TypeArray -> . TypeID
    (126) TypeArray -> . PointerType
    (75) TypeID -> . INTEGER
    (76) TypeID -> . REAL
    (77) TypeID -> . CHAR
    (69) PointerType -> . POWER ID

    INTEGER         shift and go to state 85
    REAL            shift and go to state 75
    CHAR            shift and go to state 79
    POWER           shift and go to state 106

    PointerType                    shift and go to state 284
    TypeID                         shift and go to state 283
    TypeArray                      shift and go to state 285

state 277

    (160) ObjectBody -> ObjectBody ObjectVis ObjectVarSection ObjectTypeSection . ObjectConstSection ObjectMethodList
    (168) ObjectConstSection -> . ConstSection
    (169) ObjectConstSection -> .
    (116) ConstSection -> . CONSTANT ColonConstDecl
    (117) ConstSection -> .

  ! shift/reduce conflict for CONSTANT resolved as shift
  ! reduce/reduce conflict for PROCEDURE resolved using rule 117 (ConstSection -> .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 117 (ConstSection -> .)
  ! reduce/reduce conflict for END resolved using rule 117 (ConstSection -> .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 117 (ConstSection -> .)
  ! reduce/reduce conflict for VAR resolved using rule 117 (ConstSection -> .)
  ! reduce/reduce conflict for ID resolved using rule 117 (ConstSection -> .)
  ! reduce/reduce conflict for TYPE resolved using rule 117 (ConstSection -> .)
  ! shift/reduce conflict for CONSTANT resolved as shift
    CONSTANT        shift and go to state 25
    PROCEDURE       reduce using rule 117 (ConstSection -> .)
    FUNCTION        reduce using rule 117 (ConstSection -> .)
    END             reduce using rule 117 (ConstSection -> .)
    PUBLIC          reduce using rule 117 (ConstSection -> .)
    VAR             reduce using rule 117 (ConstSection -> .)
    ID              reduce using rule 117 (ConstSection -> .)
    TYPE            reduce using rule 117 (ConstSection -> .)

  ! PROCEDURE       [ reduce using rule 169 (ObjectConstSection -> .) ]
  ! FUNCTION        [ reduce using rule 169 (ObjectConstSection -> .) ]
  ! END             [ reduce using rule 169 (ObjectConstSection -> .) ]
  ! PUBLIC          [ reduce using rule 169 (ObjectConstSection -> .) ]
  ! VAR             [ reduce using rule 169 (ObjectConstSection -> .) ]
  ! ID              [ reduce using rule 169 (ObjectConstSection -> .) ]
  ! TYPE            [ reduce using rule 169 (ObjectConstSection -> .) ]
  ! CONSTANT        [ reduce using rule 169 (ObjectConstSection -> .) ]
  ! CONSTANT        [ reduce using rule 117 (ConstSection -> .) ]

    ObjectConstSection             shift and go to state 286
    ConstSection                   shift and go to state 287

state 278

    (166) ObjectTypeSection -> TypeSection .

    CONSTANT        reduce using rule 166 (ObjectTypeSection -> TypeSection .)
    PROCEDURE       reduce using rule 166 (ObjectTypeSection -> TypeSection .)
    FUNCTION        reduce using rule 166 (ObjectTypeSection -> TypeSection .)
    END             reduce using rule 166 (ObjectTypeSection -> TypeSection .)
    PUBLIC          reduce using rule 166 (ObjectTypeSection -> TypeSection .)
    VAR             reduce using rule 166 (ObjectTypeSection -> TypeSection .)
    ID              reduce using rule 166 (ObjectTypeSection -> TypeSection .)
    TYPE            reduce using rule 166 (ObjectTypeSection -> TypeSection .)


state 279

    (177) ClassBody -> ClassBody ClassVis ClassTypeSection ClassConstSection . ClassVarSection ClassMethodList
    (185) ClassVarSection -> . VarSection
    (186) ClassVarSection -> .
    (136) VarSection -> . VAR ColonVarDecl
    (137) VarSection -> . ColonVarDecl
    (138) ColonVarDecl -> . VarDecl SEMICOLON ColonVarDecl
    (139) ColonVarDecl -> .
    (140) VarDecl -> . IdentList COLON Type
    (131) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (132) IdentList -> . ID CommaIDTypeArgs

  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for PROCEDURE resolved using rule 139 (ColonVarDecl -> .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 139 (ColonVarDecl -> .)
  ! reduce/reduce conflict for END resolved using rule 139 (ColonVarDecl -> .)
  ! reduce/reduce conflict for PUBLIC resolved using rule 139 (ColonVarDecl -> .)
  ! reduce/reduce conflict for TYPE resolved using rule 139 (ColonVarDecl -> .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 139 (ColonVarDecl -> .)
  ! shift/reduce conflict for VAR resolved as shift
  ! reduce/reduce conflict for ID resolved using rule 139 (ColonVarDecl -> .)
  ! shift/reduce conflict for ID resolved as shift
    VAR             shift and go to state 26
    PROCEDURE       reduce using rule 139 (ColonVarDecl -> .)
    FUNCTION        reduce using rule 139 (ColonVarDecl -> .)
    END             reduce using rule 139 (ColonVarDecl -> .)
    PUBLIC          reduce using rule 139 (ColonVarDecl -> .)
    TYPE            reduce using rule 139 (ColonVarDecl -> .)
    CONSTANT        reduce using rule 139 (ColonVarDecl -> .)
    ID              shift and go to state 63

  ! PROCEDURE       [ reduce using rule 186 (ClassVarSection -> .) ]
  ! FUNCTION        [ reduce using rule 186 (ClassVarSection -> .) ]
  ! END             [ reduce using rule 186 (ClassVarSection -> .) ]
  ! PUBLIC          [ reduce using rule 186 (ClassVarSection -> .) ]
  ! TYPE            [ reduce using rule 186 (ClassVarSection -> .) ]
  ! CONSTANT        [ reduce using rule 186 (ClassVarSection -> .) ]
  ! VAR             [ reduce using rule 186 (ClassVarSection -> .) ]
  ! ID              [ reduce using rule 186 (ClassVarSection -> .) ]
  ! VAR             [ reduce using rule 139 (ColonVarDecl -> .) ]
  ! ID              [ reduce using rule 139 (ColonVarDecl -> .) ]

    ColonVarDecl                   shift and go to state 16
    IdentList                      shift and go to state 10
    VarDecl                        shift and go to state 30
    ClassVarSection                shift and go to state 288
    VarSection                     shift and go to state 289

state 280

    (183) ClassConstSection -> ConstSection .

    VAR             reduce using rule 183 (ClassConstSection -> ConstSection .)
    ID              reduce using rule 183 (ClassConstSection -> ConstSection .)
    PROCEDURE       reduce using rule 183 (ClassConstSection -> ConstSection .)
    FUNCTION        reduce using rule 183 (ClassConstSection -> ConstSection .)
    END             reduce using rule 183 (ClassConstSection -> ConstSection .)
    PUBLIC          reduce using rule 183 (ClassConstSection -> ConstSection .)
    TYPE            reduce using rule 183 (ClassConstSection -> ConstSection .)
    CONSTANT        reduce using rule 183 (ClassConstSection -> ConstSection .)


state 281

    (127) ArrayConst -> LPAREN TypedConst CommaTypedConst . RPAREN
    (128) CommaTypedConst -> CommaTypedConst . COMMA TypedConst

    RPAREN          shift and go to state 291
    COMMA           shift and go to state 290


state 282

    (30) CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END .

    SEMICOLON       reduce using rule 30 (CaseStmt -> CASE Expression OF CaseSelector ColonCaseSelector ELSE Statement SEMICOLON END .)


state 283

    (125) TypeArray -> TypeID .

    SEMICOLON       reduce using rule 125 (TypeArray -> TypeID .)


state 284

    (126) TypeArray -> PointerType .

    SEMICOLON       reduce using rule 126 (TypeArray -> PointerType .)


state 285

    (124) Array -> ARRAY LSQUARE ONE DOTDOT OrdinalType RSQUARE OF TypeArray .

    SEMICOLON       reduce using rule 124 (Array -> ARRAY LSQUARE ONE DOTDOT OrdinalType RSQUARE OF TypeArray .)


state 286

    (160) ObjectBody -> ObjectBody ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection . ObjectMethodList
    (170) ObjectMethodList -> . ObjectMethodHeading
    (171) ObjectMethodList -> .
    (172) ObjectMethodHeading -> . ProcedureHeadingSemicolon
    (173) ObjectMethodHeading -> . FuncHeadingSemicolon
    (154) ProcedureHeadingSemicolon -> . PROCEDURE Designator FormalParams SEMICOLON
    (149) FuncHeadingSemicolon -> . FUNCTION ID LPAREN FormalParams RPAREN SEMICOLON

  ! shift/reduce conflict for PROCEDURE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    END             reduce using rule 171 (ObjectMethodList -> .)
    PUBLIC          reduce using rule 171 (ObjectMethodList -> .)
    VAR             reduce using rule 171 (ObjectMethodList -> .)
    ID              reduce using rule 171 (ObjectMethodList -> .)
    TYPE            reduce using rule 171 (ObjectMethodList -> .)
    CONSTANT        reduce using rule 171 (ObjectMethodList -> .)
    PROCEDURE       shift and go to state 297
    FUNCTION        shift and go to state 293

  ! PROCEDURE       [ reduce using rule 171 (ObjectMethodList -> .) ]
  ! FUNCTION        [ reduce using rule 171 (ObjectMethodList -> .) ]

    FuncHeadingSemicolon           shift and go to state 292
    ProcedureHeadingSemicolon      shift and go to state 294
    ObjectMethodList               shift and go to state 295
    ObjectMethodHeading            shift and go to state 296

state 287

    (168) ObjectConstSection -> ConstSection .

    PROCEDURE       reduce using rule 168 (ObjectConstSection -> ConstSection .)
    FUNCTION        reduce using rule 168 (ObjectConstSection -> ConstSection .)
    END             reduce using rule 168 (ObjectConstSection -> ConstSection .)
    PUBLIC          reduce using rule 168 (ObjectConstSection -> ConstSection .)
    VAR             reduce using rule 168 (ObjectConstSection -> ConstSection .)
    ID              reduce using rule 168 (ObjectConstSection -> ConstSection .)
    TYPE            reduce using rule 168 (ObjectConstSection -> ConstSection .)
    CONSTANT        reduce using rule 168 (ObjectConstSection -> ConstSection .)


state 288

    (177) ClassBody -> ClassBody ClassVis ClassTypeSection ClassConstSection ClassVarSection . ClassMethodList
    (187) ClassMethodList -> . ClassMethodHeading
    (188) ClassMethodList -> .
    (189) ClassMethodHeading -> . ProcedureHeadingSemicolon
    (190) ClassMethodHeading -> . FuncHeadingSemicolon
    (154) ProcedureHeadingSemicolon -> . PROCEDURE Designator FormalParams SEMICOLON
    (149) FuncHeadingSemicolon -> . FUNCTION ID LPAREN FormalParams RPAREN SEMICOLON

  ! shift/reduce conflict for PROCEDURE resolved as shift
  ! shift/reduce conflict for FUNCTION resolved as shift
    END             reduce using rule 188 (ClassMethodList -> .)
    PUBLIC          reduce using rule 188 (ClassMethodList -> .)
    TYPE            reduce using rule 188 (ClassMethodList -> .)
    CONSTANT        reduce using rule 188 (ClassMethodList -> .)
    VAR             reduce using rule 188 (ClassMethodList -> .)
    ID              reduce using rule 188 (ClassMethodList -> .)
    PROCEDURE       shift and go to state 297
    FUNCTION        shift and go to state 293

  ! PROCEDURE       [ reduce using rule 188 (ClassMethodList -> .) ]
  ! FUNCTION        [ reduce using rule 188 (ClassMethodList -> .) ]

    ProcedureHeadingSemicolon      shift and go to state 298
    ClassMethodHeading             shift and go to state 299
    FuncHeadingSemicolon           shift and go to state 300
    ClassMethodList                shift and go to state 301

state 289

    (185) ClassVarSection -> VarSection .

    PROCEDURE       reduce using rule 185 (ClassVarSection -> VarSection .)
    FUNCTION        reduce using rule 185 (ClassVarSection -> VarSection .)
    END             reduce using rule 185 (ClassVarSection -> VarSection .)
    PUBLIC          reduce using rule 185 (ClassVarSection -> VarSection .)
    TYPE            reduce using rule 185 (ClassVarSection -> VarSection .)
    CONSTANT        reduce using rule 185 (ClassVarSection -> VarSection .)
    VAR             reduce using rule 185 (ClassVarSection -> VarSection .)
    ID              reduce using rule 185 (ClassVarSection -> VarSection .)


state 290

    (128) CommaTypedConst -> CommaTypedConst COMMA . TypedConst
    (122) TypedConst -> . ConstExpr
    (123) TypedConst -> . ArrayConst
    (130) ConstExpr -> .
    (127) ArrayConst -> . LPAREN TypedConst CommaTypedConst RPAREN

    RPAREN          reduce using rule 130 (ConstExpr -> .)
    COMMA           reduce using rule 130 (ConstExpr -> .)
    LPAREN          shift and go to state 265

    ConstExpr                      shift and go to state 264
    ArrayConst                     shift and go to state 266
    TypedConst                     shift and go to state 302

state 291

    (127) ArrayConst -> LPAREN TypedConst CommaTypedConst RPAREN .

    RPAREN          reduce using rule 127 (ArrayConst -> LPAREN TypedConst CommaTypedConst RPAREN .)
    COMMA           reduce using rule 127 (ArrayConst -> LPAREN TypedConst CommaTypedConst RPAREN .)
    SEMICOLON       reduce using rule 127 (ArrayConst -> LPAREN TypedConst CommaTypedConst RPAREN .)


state 292

    (173) ObjectMethodHeading -> FuncHeadingSemicolon .

    END             reduce using rule 173 (ObjectMethodHeading -> FuncHeadingSemicolon .)
    PUBLIC          reduce using rule 173 (ObjectMethodHeading -> FuncHeadingSemicolon .)
    VAR             reduce using rule 173 (ObjectMethodHeading -> FuncHeadingSemicolon .)
    ID              reduce using rule 173 (ObjectMethodHeading -> FuncHeadingSemicolon .)
    TYPE            reduce using rule 173 (ObjectMethodHeading -> FuncHeadingSemicolon .)
    CONSTANT        reduce using rule 173 (ObjectMethodHeading -> FuncHeadingSemicolon .)
    PROCEDURE       reduce using rule 173 (ObjectMethodHeading -> FuncHeadingSemicolon .)
    FUNCTION        reduce using rule 173 (ObjectMethodHeading -> FuncHeadingSemicolon .)


state 293

    (149) FuncHeadingSemicolon -> FUNCTION . ID LPAREN FormalParams RPAREN SEMICOLON

    ID              shift and go to state 303


state 294

    (172) ObjectMethodHeading -> ProcedureHeadingSemicolon .

    END             reduce using rule 172 (ObjectMethodHeading -> ProcedureHeadingSemicolon .)
    PUBLIC          reduce using rule 172 (ObjectMethodHeading -> ProcedureHeadingSemicolon .)
    VAR             reduce using rule 172 (ObjectMethodHeading -> ProcedureHeadingSemicolon .)
    ID              reduce using rule 172 (ObjectMethodHeading -> ProcedureHeadingSemicolon .)
    TYPE            reduce using rule 172 (ObjectMethodHeading -> ProcedureHeadingSemicolon .)
    CONSTANT        reduce using rule 172 (ObjectMethodHeading -> ProcedureHeadingSemicolon .)
    PROCEDURE       reduce using rule 172 (ObjectMethodHeading -> ProcedureHeadingSemicolon .)
    FUNCTION        reduce using rule 172 (ObjectMethodHeading -> ProcedureHeadingSemicolon .)


state 295

    (160) ObjectBody -> ObjectBody ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList .

    END             reduce using rule 160 (ObjectBody -> ObjectBody ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList .)
    PUBLIC          reduce using rule 160 (ObjectBody -> ObjectBody ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList .)
    VAR             reduce using rule 160 (ObjectBody -> ObjectBody ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList .)
    ID              reduce using rule 160 (ObjectBody -> ObjectBody ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList .)
    TYPE            reduce using rule 160 (ObjectBody -> ObjectBody ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList .)
    CONSTANT        reduce using rule 160 (ObjectBody -> ObjectBody ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList .)
    PROCEDURE       reduce using rule 160 (ObjectBody -> ObjectBody ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList .)
    FUNCTION        reduce using rule 160 (ObjectBody -> ObjectBody ObjectVis ObjectVarSection ObjectTypeSection ObjectConstSection ObjectMethodList .)


state 296

    (170) ObjectMethodList -> ObjectMethodHeading .

    END             reduce using rule 170 (ObjectMethodList -> ObjectMethodHeading .)
    PUBLIC          reduce using rule 170 (ObjectMethodList -> ObjectMethodHeading .)
    VAR             reduce using rule 170 (ObjectMethodList -> ObjectMethodHeading .)
    ID              reduce using rule 170 (ObjectMethodList -> ObjectMethodHeading .)
    TYPE            reduce using rule 170 (ObjectMethodList -> ObjectMethodHeading .)
    CONSTANT        reduce using rule 170 (ObjectMethodList -> ObjectMethodHeading .)
    PROCEDURE       reduce using rule 170 (ObjectMethodList -> ObjectMethodHeading .)
    FUNCTION        reduce using rule 170 (ObjectMethodList -> ObjectMethodHeading .)


state 297

    (154) ProcedureHeadingSemicolon -> PROCEDURE . Designator FormalParams SEMICOLON
    (110) Designator -> . ID DesSubEleStar

    ID              shift and go to state 46

    Designator                     shift and go to state 304

state 298

    (189) ClassMethodHeading -> ProcedureHeadingSemicolon .

    END             reduce using rule 189 (ClassMethodHeading -> ProcedureHeadingSemicolon .)
    PUBLIC          reduce using rule 189 (ClassMethodHeading -> ProcedureHeadingSemicolon .)
    TYPE            reduce using rule 189 (ClassMethodHeading -> ProcedureHeadingSemicolon .)
    CONSTANT        reduce using rule 189 (ClassMethodHeading -> ProcedureHeadingSemicolon .)
    VAR             reduce using rule 189 (ClassMethodHeading -> ProcedureHeadingSemicolon .)
    ID              reduce using rule 189 (ClassMethodHeading -> ProcedureHeadingSemicolon .)
    PROCEDURE       reduce using rule 189 (ClassMethodHeading -> ProcedureHeadingSemicolon .)
    FUNCTION        reduce using rule 189 (ClassMethodHeading -> ProcedureHeadingSemicolon .)


state 299

    (187) ClassMethodList -> ClassMethodHeading .

    END             reduce using rule 187 (ClassMethodList -> ClassMethodHeading .)
    PUBLIC          reduce using rule 187 (ClassMethodList -> ClassMethodHeading .)
    TYPE            reduce using rule 187 (ClassMethodList -> ClassMethodHeading .)
    CONSTANT        reduce using rule 187 (ClassMethodList -> ClassMethodHeading .)
    VAR             reduce using rule 187 (ClassMethodList -> ClassMethodHeading .)
    ID              reduce using rule 187 (ClassMethodList -> ClassMethodHeading .)
    PROCEDURE       reduce using rule 187 (ClassMethodList -> ClassMethodHeading .)
    FUNCTION        reduce using rule 187 (ClassMethodList -> ClassMethodHeading .)


state 300

    (190) ClassMethodHeading -> FuncHeadingSemicolon .

    END             reduce using rule 190 (ClassMethodHeading -> FuncHeadingSemicolon .)
    PUBLIC          reduce using rule 190 (ClassMethodHeading -> FuncHeadingSemicolon .)
    TYPE            reduce using rule 190 (ClassMethodHeading -> FuncHeadingSemicolon .)
    CONSTANT        reduce using rule 190 (ClassMethodHeading -> FuncHeadingSemicolon .)
    VAR             reduce using rule 190 (ClassMethodHeading -> FuncHeadingSemicolon .)
    ID              reduce using rule 190 (ClassMethodHeading -> FuncHeadingSemicolon .)
    PROCEDURE       reduce using rule 190 (ClassMethodHeading -> FuncHeadingSemicolon .)
    FUNCTION        reduce using rule 190 (ClassMethodHeading -> FuncHeadingSemicolon .)


state 301

    (177) ClassBody -> ClassBody ClassVis ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .

    END             reduce using rule 177 (ClassBody -> ClassBody ClassVis ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .)
    PUBLIC          reduce using rule 177 (ClassBody -> ClassBody ClassVis ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .)
    TYPE            reduce using rule 177 (ClassBody -> ClassBody ClassVis ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .)
    CONSTANT        reduce using rule 177 (ClassBody -> ClassBody ClassVis ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .)
    VAR             reduce using rule 177 (ClassBody -> ClassBody ClassVis ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .)
    ID              reduce using rule 177 (ClassBody -> ClassBody ClassVis ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .)
    PROCEDURE       reduce using rule 177 (ClassBody -> ClassBody ClassVis ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .)
    FUNCTION        reduce using rule 177 (ClassBody -> ClassBody ClassVis ClassTypeSection ClassConstSection ClassVarSection ClassMethodList .)


state 302

    (128) CommaTypedConst -> CommaTypedConst COMMA TypedConst .

    RPAREN          reduce using rule 128 (CommaTypedConst -> CommaTypedConst COMMA TypedConst .)
    COMMA           reduce using rule 128 (CommaTypedConst -> CommaTypedConst COMMA TypedConst .)


state 303

    (149) FuncHeadingSemicolon -> FUNCTION ID . LPAREN FormalParams RPAREN SEMICOLON

    LPAREN          shift and go to state 305


state 304

    (154) ProcedureHeadingSemicolon -> PROCEDURE Designator . FormalParams SEMICOLON
    (150) FormalParams -> . IdentList
    (151) FormalParams -> .
    (131) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (132) IdentList -> . ID CommaIDTypeArgs

    SEMICOLON       reduce using rule 151 (FormalParams -> .)
    ID              shift and go to state 63

    IdentList                      shift and go to state 116
    FormalParams                   shift and go to state 306

state 305

    (149) FuncHeadingSemicolon -> FUNCTION ID LPAREN . FormalParams RPAREN SEMICOLON
    (150) FormalParams -> . IdentList
    (151) FormalParams -> .
    (131) IdentList -> . ID TypeArgs CommaIDTypeArgs
    (132) IdentList -> . ID CommaIDTypeArgs

    RPAREN          reduce using rule 151 (FormalParams -> .)
    ID              shift and go to state 63

    IdentList                      shift and go to state 116
    FormalParams                   shift and go to state 307

state 306

    (154) ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams . SEMICOLON

    SEMICOLON       shift and go to state 308


state 307

    (149) FuncHeadingSemicolon -> FUNCTION ID LPAREN FormalParams . RPAREN SEMICOLON

    RPAREN          shift and go to state 309


state 308

    (154) ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .

    END             reduce using rule 154 (ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .)
    PUBLIC          reduce using rule 154 (ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .)
    TYPE            reduce using rule 154 (ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .)
    CONSTANT        reduce using rule 154 (ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .)
    VAR             reduce using rule 154 (ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .)
    ID              reduce using rule 154 (ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .)
    PROCEDURE       reduce using rule 154 (ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .)
    FUNCTION        reduce using rule 154 (ProcedureHeadingSemicolon -> PROCEDURE Designator FormalParams SEMICOLON .)


state 309

    (149) FuncHeadingSemicolon -> FUNCTION ID LPAREN FormalParams RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 310


state 310

    (149) FuncHeadingSemicolon -> FUNCTION ID LPAREN FormalParams RPAREN SEMICOLON .

    END             reduce using rule 149 (FuncHeadingSemicolon -> FUNCTION ID LPAREN FormalParams RPAREN SEMICOLON .)
    PUBLIC          reduce using rule 149 (FuncHeadingSemicolon -> FUNCTION ID LPAREN FormalParams RPAREN SEMICOLON .)
    VAR             reduce using rule 149 (FuncHeadingSemicolon -> FUNCTION ID LPAREN FormalParams RPAREN SEMICOLON .)
    ID              reduce using rule 149 (FuncHeadingSemicolon -> FUNCTION ID LPAREN FormalParams RPAREN SEMICOLON .)
    TYPE            reduce using rule 149 (FuncHeadingSemicolon -> FUNCTION ID LPAREN FormalParams RPAREN SEMICOLON .)
    CONSTANT        reduce using rule 149 (FuncHeadingSemicolon -> FUNCTION ID LPAREN FormalParams RPAREN SEMICOLON .)
    PROCEDURE       reduce using rule 149 (FuncHeadingSemicolon -> FUNCTION ID LPAREN FormalParams RPAREN SEMICOLON .)
    FUNCTION        reduce using rule 149 (FuncHeadingSemicolon -> FUNCTION ID LPAREN FormalParams RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for BEGIN in state 5 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 6 resolved as shift
WARNING: shift/reduce conflict for CONSTANT in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 6 resolved as shift
WARNING: shift/reduce conflict for VAR in state 6 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 6 resolved as shift
WARNING: shift/reduce conflict for CONSTANT in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 6 resolved as shift
WARNING: shift/reduce conflict for VAR in state 6 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 6 resolved as shift
WARNING: shift/reduce conflict for CONSTANT in state 6 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 6 resolved as shift
WARNING: shift/reduce conflict for VAR in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 6 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 6 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 6 resolved as shift
WARNING: shift/reduce conflict for CONSTRUCTOR in state 6 resolved as shift
WARNING: shift/reduce conflict for ID in state 19 resolved as shift
WARNING: shift/reduce conflict for ID in state 26 resolved as shift
WARNING: shift/reduce conflict for COLON in state 28 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 55 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 56 resolved as shift
WARNING: shift/reduce conflict for ID in state 61 resolved as shift
WARNING: shift/reduce conflict for ID in state 68 resolved as shift
WARNING: shift/reduce conflict for BEGIN in state 69 resolved as shift
WARNING: shift/reduce conflict for ID in state 70 resolved as shift
WARNING: shift/reduce conflict for ID in state 88 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 137 resolved as shift
WARNING: shift/reduce conflict for END in state 242 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 242 resolved as shift
WARNING: shift/reduce conflict for END in state 244 resolved as shift
WARNING: shift/reduce conflict for PUBLIC in state 244 resolved as shift
WARNING: shift/reduce conflict for VAR in state 257 resolved as shift
WARNING: shift/reduce conflict for VAR in state 257 resolved as shift
WARNING: shift/reduce conflict for ID in state 257 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 260 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 260 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 270 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 270 resolved as shift
WARNING: shift/reduce conflict for CONSTANT in state 273 resolved as shift
WARNING: shift/reduce conflict for CONSTANT in state 273 resolved as shift
WARNING: shift/reduce conflict for CONSTANT in state 277 resolved as shift
WARNING: shift/reduce conflict for CONSTANT in state 277 resolved as shift
WARNING: shift/reduce conflict for VAR in state 279 resolved as shift
WARNING: shift/reduce conflict for VAR in state 279 resolved as shift
WARNING: shift/reduce conflict for ID in state 279 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 286 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 286 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 288 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 288 resolved as shift
WARNING: reduce/reduce conflict in state 6 resolved using rule (ColonTypeDecl -> <empty>)
WARNING: rejected rule (ConstSection -> <empty>) in state 6
WARNING: reduce/reduce conflict in state 6 resolved using rule (ColonTypeDecl -> <empty>)
WARNING: rejected rule (ColonVarDecl -> <empty>) in state 6
WARNING: reduce/reduce conflict in state 107 resolved using rule (TypeID -> INTEGER)
WARNING: rejected rule (OrdinalType -> INTEGER) in state 107
WARNING: reduce/reduce conflict in state 257 resolved using rule (ColonVarDecl -> <empty>)
WARNING: rejected rule (ObjectVarSection -> <empty>) in state 257
WARNING: reduce/reduce conflict in state 260 resolved using rule (ColonTypeDecl -> <empty>)
WARNING: rejected rule (ClassTypeSection -> <empty>) in state 260
WARNING: reduce/reduce conflict in state 270 resolved using rule (ColonTypeDecl -> <empty>)
WARNING: rejected rule (ObjectTypeSection -> <empty>) in state 270
WARNING: reduce/reduce conflict in state 273 resolved using rule (ConstSection -> <empty>)
WARNING: rejected rule (ClassConstSection -> <empty>) in state 273
WARNING: reduce/reduce conflict in state 277 resolved using rule (ConstSection -> <empty>)
WARNING: rejected rule (ObjectConstSection -> <empty>) in state 277
WARNING: reduce/reduce conflict in state 279 resolved using rule (ColonVarDecl -> <empty>)
WARNING: rejected rule (ClassVarSection -> <empty>) in state 279
WARNING: Rule (ObjectVarSection -> <empty>) is never reduced
WARNING: Rule (ClassTypeSection -> <empty>) is never reduced
WARNING: Rule (ObjectTypeSection -> <empty>) is never reduced
WARNING: Rule (ClassConstSection -> <empty>) is never reduced
WARNING: Rule (ObjectConstSection -> <empty>) is never reduced
WARNING: Rule (ClassVarSection -> <empty>) is never reduced
